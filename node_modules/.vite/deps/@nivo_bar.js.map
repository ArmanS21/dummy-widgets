{
  "version": 3,
  "sources": ["../../lodash/noop.js", "../../lodash/_createSet.js", "../../lodash/_baseUniq.js", "../../lodash/uniq.js", "../../lodash/_baseIsMatch.js", "../../lodash/_isStrictComparable.js", "../../lodash/_getMatchData.js", "../../lodash/_matchesStrictComparable.js", "../../lodash/_baseMatches.js", "../../lodash/_baseMatchesProperty.js", "../../lodash/_baseProperty.js", "../../lodash/_basePropertyDeep.js", "../../lodash/property.js", "../../lodash/_baseIteratee.js", "../../lodash/uniqBy.js", "../../lodash/_baseForOwn.js", "../../lodash/_createBaseEach.js", "../../lodash/_baseEach.js", "../../lodash/_baseMap.js", "../../lodash/_baseSortBy.js", "../../lodash/_compareAscending.js", "../../lodash/_compareMultiple.js", "../../lodash/_baseOrderBy.js", "../../lodash/sortBy.js", "../../lodash/_baseIsDate.js", "../../lodash/isDate.js", "../../lodash/_baseFilter.js", "../../lodash/filter.js", "../../lodash/isNumber.js", "../../lodash/_arrayEach.js", "../../lodash/_baseAssign.js", "../../lodash/_baseAssignIn.js", "../../lodash/_copySymbols.js", "../../lodash/_getSymbolsIn.js", "../../lodash/_copySymbolsIn.js", "../../lodash/_getAllKeysIn.js", "../../lodash/_initCloneArray.js", "../../lodash/_cloneDataView.js", "../../lodash/_cloneRegExp.js", "../../lodash/_cloneSymbol.js", "../../lodash/_initCloneByTag.js", "../../lodash/_baseIsMap.js", "../../lodash/isMap.js", "../../lodash/_baseIsSet.js", "../../lodash/isSet.js", "../../lodash/_baseClone.js", "../../lodash/_baseSlice.js", "../../lodash/_parent.js", "../../lodash/_baseUnset.js", "../../lodash/_customOmitClone.js", "../../lodash/omit.js", "../../@nivo/scales/src/timeHelpers.ts", "../../@nivo/scales/src/linearScale.ts", "../../@nivo/scales/src/pointScale.ts", "../../@nivo/scales/src/bandScale.ts", "../../@nivo/scales/src/timeScale.ts", "../../@nivo/scales/src/logScale.ts", "../../@nivo/scales/src/symlogScale.ts", "../../@nivo/scales/src/compute.ts", "../../@nivo/scales/src/ticks.ts", "../../@nivo/axes/src/compute.ts", "../../@nivo/axes/src/components/AxisTick.tsx", "../../@nivo/axes/src/components/Axis.tsx", "../../@nivo/axes/src/props.ts", "../../@nivo/axes/src/components/Axes.tsx", "../../@nivo/axes/src/components/GridLine.tsx", "../../@nivo/axes/src/components/GridLines.tsx", "../../@nivo/axes/src/components/Grid.tsx", "../../@nivo/axes/src/canvas.ts", "../../@nivo/annotations/src/props.ts", "../../@nivo/annotations/src/utils.ts", "../../@nivo/annotations/src/compute.ts", "../../@nivo/annotations/src/hooks.ts", "../../@nivo/annotations/src/AnnotationNote.tsx", "../../@nivo/annotations/src/AnnotationLink.tsx", "../../@nivo/annotations/src/CircleAnnotationOutline.tsx", "../../@nivo/annotations/src/DotAnnotationOutline.tsx", "../../@nivo/annotations/src/RectAnnotationOutline.tsx", "../../@nivo/annotations/src/Annotation.tsx", "../../@nivo/annotations/src/canvas.ts", "../../@nivo/bar/src/BarAnnotations.tsx", "../../@nivo/bar/src/BarLegends.tsx", "../../@nivo/bar/src/BarItem.tsx", "../../@nivo/bar/src/BarTooltip.tsx", "../../@nivo/bar/src/props.ts", "../../@nivo/bar/src/compute/common.ts", "../../@nivo/bar/src/compute/grouped.ts", "../../@nivo/bar/src/compute/stacked.ts", "../../@nivo/bar/src/compute/legends.ts", "../../@nivo/bar/src/compute/totals.ts", "../../@nivo/bar/src/hooks.ts", "../../@nivo/bar/src/BarTotals.tsx", "../../@nivo/bar/src/Bar.tsx", "../../@nivo/bar/src/BarCanvas.tsx", "../../@nivo/bar/src/ResponsiveBar.tsx", "../../@nivo/bar/src/ResponsiveBarCanvas.tsx"],
  "sourcesContent": ["/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n", "var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n", "var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n", "var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n", "var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n", "var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n", "var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n", "var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n", "var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n", "var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n", "var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n", "var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n", "var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n", "var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n", "var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n", "var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n", "var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n", "var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n", "var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n", "var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n", "var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n", "var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n", "var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n", "var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n", "var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n", "var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n", "var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n", "var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n", "import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = (typeof timePrecisions)[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n", "import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = 0,\n        max = 'auto',\n        stacked = false,\n        reverse = false,\n        clamp = false,\n        nice = false,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? data.minStacked ?? 0 : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? data.maxStacked ?? 0 : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale<number, Output>(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n", "import { scalePoint, ScalePoint as D3ScalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n\nexport const castPointScale = <Input extends StringValue>(scale: D3ScalePoint<Input>) => {\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n", "import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = true }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input extends StringValue>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n", "import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = 'native',\n        precision = 'millisecond',\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n", "import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const createLogScale = (\n    { base = 10, min = 'auto', max = 'auto' }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return typedScale\n}\n", "import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const createSymlogScale = (\n    { constant = 1, min = 'auto', max = 'auto', reverse = false }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>()\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n", "import uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Input>(spec, data, size)\n        case 'band':\n            return createBandScale<Input>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n", "import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable\n            // however local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n", "import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    truncateTickAt,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    truncateTickAt?: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const truncateTick = (value: string) => {\n        const valueLength = String(value).length\n\n        if (truncateTickAt && truncateTickAt > 0 && valueLength > truncateTickAt) {\n            return `${String(value).slice(0, truncateTickAt).concat('...')}`\n        }\n        return `${value}`\n    }\n\n    const ticks = values.map((value: Value) => {\n        const processedValue =\n            typeof value === 'string' ? (truncateTick(value) as unknown as Value) : value\n        return {\n            key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n            value: processedValue,\n            ...translate(value),\n            ...line,\n            ...text,\n        }\n    })\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n", "import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme, sanitizeSvgTextStyle } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n    const lineStyle = theme.axis.ticks.line\n    const textStyle = theme.axis.ticks.text\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={lineStyle} />\n            {textStyle.outlineWidth > 0 && (\n                <animated.text\n                    dominantBaseline={textBaseline}\n                    textAnchor={textAnchor}\n                    transform={animatedProps.textTransform}\n                    style={textStyle}\n                    strokeWidth={textStyle.outlineWidth * 2}\n                    stroke={textStyle.outlineColor}\n                    strokeLinejoin=\"round\"\n                >\n                    {`${value}`}\n                </animated.text>\n            )}\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={sanitizeSvgTextStyle(textStyle)}\n            >\n                {`${value}`}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n", "import { useMotionConfig, useTheme } from '@nivo/core'\nimport { AnyScale, ScaleValue } from '@nivo/scales'\nimport { animated, useSpring, useTransition } from '@react-spring/web'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisProps } from '../types'\nimport { AxisTick } from './AxisTick'\n\nexport const NonMemoizedAxis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    truncateTickAt,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n    const legendTextStyle = theme.axis.legend.text\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        truncateTickAt,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <>\n                {legendTextStyle.outlineWidth > 0 && (\n                    <text\n                        transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                        textAnchor={textAnchor}\n                        style={{\n                            dominantBaseline: 'central',\n                            ...legendTextStyle,\n                        }}\n                        strokeWidth={legendTextStyle.outlineWidth * 2}\n                        stroke={legendTextStyle.outlineColor}\n                        strokeLinejoin=\"round\"\n                    >\n                        {legend}\n                    </text>\n                )}\n                <text\n                    transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                    textAnchor={textAnchor}\n                    style={{\n                        dominantBaseline: 'central',\n                        ...legendTextStyle,\n                    }}\n                >\n                    {legend}\n                </text>\n            </>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const getAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => {\n            return {\n                opacity: 1,\n                transform: `translate(${tick.x},${tick.y})`,\n                textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n            }\n        },\n        [tickRotation]\n    )\n    const getFromAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        [tickRotation]\n    )\n\n    const transition = useTransition<\n        (typeof ticks)[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: getAnimatedProps,\n        from: getFromAnimatedProps,\n        enter: getAnimatedProps,\n        update: getAnimatedProps,\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    truncateTickAt: truncateTickAt,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nexport const Axis = memo(NonMemoizedAxis) as typeof NonMemoizedAxis\n", "export const positions = ['top', 'right', 'bottom', 'left'] as const\n", "import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                            truncateTickAt={axis.truncateTickAt}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n", "import { memo, SVGAttributes } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return (\n            <animated.line\n                {...animatedProps}\n                {...(theme.grid.line as SVGAttributes<SVGLineElement>)}\n            />\n        )\n    }\n)\n", "import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n", "import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n", "import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n\n    const textStyle = theme.axis.ticks.text\n    ctx.font = `${textStyle.fontWeight ? `${textStyle.fontWeight} ` : ''}${textStyle.fontSize}px ${\n        textStyle.fontFamily\n    }`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (textStyle.outlineWidth > 0) {\n            ctx.strokeStyle = textStyle.outlineColor\n            ctx.lineWidth = textStyle.outlineWidth * 2\n            ctx.lineJoin = 'round'\n            ctx.strokeText(`${value}`, 0, 0)\n        }\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = textStyle.fill\n        }\n\n        ctx.fillText(`${value}`, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n", "export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n}\n", "import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n", "import filter from 'lodash/filter'\nimport isNumber from 'lodash/isNumber'\nimport omit from 'lodash/omit'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n", "import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: readonly BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n", "import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n", "import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n", "import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n", "import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n", "import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n", "import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n", "import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n", "import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n", "import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n", "import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n", "import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n", "import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { BarCanvasLayerId, BarLayerId, ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n\n    enableTotals: false,\n    totalsOffset: 10,\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'markers', 'legends', 'annotations'] as BarLayerId[],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'legends', 'annotations'] as BarCanvasLayerId[],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n", "import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: readonly RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: readonly RawDatum[], keys: readonly string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n", "import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: readonly RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n", "import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n", "import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport uniqBy from 'lodash/uniqBy'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n", "import { AnyScale, ScaleBand } from '@nivo/scales'\nimport { defaultProps } from '../props'\nimport { BarCommonProps, BarDatum, ComputedBarDatum } from '../types'\n\nexport interface BarTotalsData {\n    key: string\n    x: number\n    y: number\n    value: number\n    formattedValue: string\n    animationOffset: number\n}\n\nexport const computeBarTotals = <RawDatum extends BarDatum>(\n    bars: ComputedBarDatum<RawDatum>[],\n    xScale: ScaleBand<string> | AnyScale,\n    yScale: ScaleBand<string> | AnyScale,\n    layout: BarCommonProps<RawDatum>['layout'] = defaultProps.layout,\n    groupMode: BarCommonProps<RawDatum>['groupMode'] = defaultProps.groupMode,\n    totalsOffset: number,\n    formatValue: (value: number) => string\n) => {\n    const totals = [] as BarTotalsData[]\n\n    if (bars.length === 0) return totals\n\n    const totalsByIndex = new Map<string | number, number>()\n\n    const barWidth = bars[0].width\n    const barHeight = bars[0].height\n\n    if (groupMode === 'stacked') {\n        const totalsPositivesByIndex = new Map<string | number, number>()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateTotalsPositivesByIndex(totalsPositivesByIndex, indexValue, Number(value))\n        })\n\n        totalsPositivesByIndex.forEach((totalsPositive, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(totalsPositive)\n                animationOffset = yScale(totalsPositive / 2)\n            } else {\n                xPosition = xScale(totalsPositive)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(totalsPositive / 2)\n            }\n\n            xPosition += layout === 'vertical' ? barWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : barHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    } else if (groupMode === 'grouped') {\n        const greatestValueByIndex = new Map<string | number, number>()\n        const numberOfBarsByIndex = new Map()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateGreatestValueByIndex(greatestValueByIndex, indexValue, Number(value))\n            updateNumberOfBarsByIndex(numberOfBarsByIndex, indexValue)\n        })\n\n        greatestValueByIndex.forEach((greatestValue, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n            const numberOfBars = numberOfBarsByIndex.get(indexValue)\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(greatestValue)\n                animationOffset = yScale(greatestValue / 2)\n            } else {\n                xPosition = xScale(greatestValue)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(greatestValue / 2)\n            }\n\n            const indexBarsWidth = numberOfBars * barWidth\n            const indexBarsHeight = numberOfBars * barHeight\n\n            xPosition += layout === 'vertical' ? indexBarsWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : indexBarsHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    }\n    return totals\n}\n\n// this function is used to compute the total value for the indexes. The total value is later rendered on the chart\nexport const updateTotalsByIndex = (\n    totalsByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsByIndex.get(indexValue) || 0\n    totalsByIndex.set(indexValue, currentIndexValue + value)\n}\n\n// this function is used to compute only the positive values of the indexes. Useful to position the text right above the last stacked bar. It prevents overlapping in case of negative values\nexport const updateTotalsPositivesByIndex = (\n    totalsPositivesByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsPositivesByIndex.get(indexValue) || 0\n    totalsPositivesByIndex.set(indexValue, currentIndexValue + (value > 0 ? value : 0))\n}\n\n// this function is used to keep track of the highest value for the indexes. Useful to position the text above the longest grouped bar\nexport const updateGreatestValueByIndex = (\n    greatestValueByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentGreatestValue = greatestValueByIndex.get(indexValue) || 0\n    greatestValueByIndex.set(indexValue, Math.max(currentGreatestValue, Number(value)))\n}\n\n// this function is used to save the number of bars for the indexes. Useful to position the text in the middle of the grouped bars\nexport const updateNumberOfBarsByIndex = (\n    numberOfBarsByIndex: Map<string | number, number>,\n    indexValue: string | number\n) => {\n    const currentNumberOfBars = numberOfBarsByIndex.get(indexValue) || 0\n    numberOfBarsByIndex.set(indexValue, currentNumberOfBars + 1)\n}\n", "import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { computeBarTotals } from './compute/totals'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n    totalsOffset = defaultProps.totalsOffset,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n    totalsOffset?: BarCommonProps<RawDatum>['totalsOffset']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    const barTotals = useMemo(\n        () => computeBarTotals(bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue),\n        [bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    }\n}\n", "import { useTheme } from '@nivo/core'\nimport { AnimationConfig, animated, useTransition } from '@react-spring/web'\nimport { BarCommonProps, BarDatum } from './types'\nimport { svgDefaultProps } from './props'\nimport { BarTotalsData } from './compute/totals'\n\ninterface Props<RawDatum extends BarDatum> {\n    data: BarTotalsData[]\n    springConfig: Partial<AnimationConfig>\n    animate: boolean\n    layout?: BarCommonProps<RawDatum>['layout']\n}\n\nexport const BarTotals = <RawDatum extends BarDatum>({\n    data,\n    springConfig,\n    animate,\n    layout = svgDefaultProps.layout,\n}: Props<RawDatum>) => {\n    const theme = useTheme()\n    const totalsTransition = useTransition<\n        BarTotalsData,\n        {\n            x: number\n            y: number\n            labelOpacity: number\n        }\n    >(data, {\n        keys: barTotal => barTotal.key,\n        from: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        enter: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        update: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        leave: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    return totalsTransition((style, barTotal) => (\n        <animated.text\n            key={barTotal.key}\n            x={style.x}\n            y={style.y}\n            fillOpacity={style.labelOpacity}\n            style={{\n                ...theme.labels.text,\n                pointerEvents: 'none',\n                fill: theme.text.fill,\n            }}\n            fontWeight=\"bold\"\n            fontSize={theme.labels.text.fontSize}\n            fontFamily={theme.labels.text.fontFamily}\n            textAnchor={layout === 'vertical' ? 'middle' : 'start'}\n            alignmentBaseline={layout === 'vertical' ? 'alphabetic' : 'middle'}\n        >\n            {barTotal.formattedValue}\n        </animated.text>\n    ))\n}\n", "import { Axes, Grid } from '@nivo/axes'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { useTransition } from '@react-spring/web'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarLegends } from './BarLegends'\nimport { useBar } from './hooks'\nimport { svgDefaultProps } from './props'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarTotals } from './BarTotals'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as readonly BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n\n    enableTotals = svgDefaultProps.enableTotals,\n    totalsOffset = svgDefaultProps.totalsOffset,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n        totalsOffset,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    if (layers.includes('totals') && enableTotals) {\n        layerById.totals = (\n            <BarTotals\n                key=\"totals\"\n                data={barTotals}\n                springConfig={springConfig}\n                animate={animate}\n                layout={layout}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    CompleteTheme,\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\nimport { BarTotalsData } from './compute/totals'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nfunction renderTotalsToCanvas<RawDatum extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    barTotals: BarTotalsData[],\n    theme: CompleteTheme,\n    layout: BarCommonProps<RawDatum>['layout'] = canvasDefaultProps.layout\n) {\n    ctx.fillStyle = theme.text.fill\n    ctx.font = `bold ${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n    ctx.textBaseline = layout === 'vertical' ? 'alphabetic' : 'middle'\n    ctx.textAlign = layout === 'vertical' ? 'center' : 'start'\n\n    barTotals.forEach(barTotal => {\n        ctx.fillText(barTotal.formattedValue, barTotal.x, barTotal.y)\n    })\n}\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n\n    enableTotals = canvasDefaultProps.enableTotals,\n    totalsOffset = canvasDefaultProps.totalsOffset,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n        barTotals,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        totalsOffset,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (layer === 'totals' && enableTotals) {\n                renderTotalsToCanvas(ctx, barTotals, theme, layout)\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n        barTotals,\n        enableTotals,\n        formatValue,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n", "import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarSvgProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: ResponsiveBarSvgProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n", "import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: ResponsiveBarCanvasProps<RawDatum>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAYA,aAAS,OAAO;AAAA,IAEhB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AAAA,QAAI,MAAM;AAAV,QACI,OAAO;AADX,QAEI,aAAa;AAGjB,QAAI,WAAW,IAAI;AASnB,QAAI,YAAY,EAAE,OAAQ,IAAI,WAAW,IAAI,IAAI,CAAC,EAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAM,YAAY,OAAO,SAAS,QAAQ;AAClG,aAAO,IAAI,IAAI,MAAM;AAAA,IACvB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClBjB;AAAA;AAAA,QAAI,WAAW;AAAf,QACI,gBAAgB;AADpB,QAEI,oBAAoB;AAFxB,QAGI,WAAW;AAHf,QAII,YAAY;AAJhB,QAKI,aAAa;AAGjB,QAAI,mBAAmB;AAWvB,aAAS,SAAS,OAAO,UAAU,YAAY;AAC7C,UAAI,QAAQ,IACR,WAAW,eACX,SAAS,MAAM,QACf,WAAW,MACX,SAAS,CAAC,GACV,OAAO;AAEX,UAAI,YAAY;AACd,mBAAW;AACX,mBAAW;AAAA,MACb,WACS,UAAU,kBAAkB;AACnC,YAAI,MAAM,WAAW,OAAO,UAAU,KAAK;AAC3C,YAAI,KAAK;AACP,iBAAO,WAAW,GAAG;AAAA,QACvB;AACA,mBAAW;AACX,mBAAW;AACX,eAAO,IAAI;AAAA,MACb,OACK;AACH,eAAO,WAAW,CAAC,IAAI;AAAA,MACzB;AACA;AACA,eAAO,EAAE,QAAQ,QAAQ;AACvB,cAAI,QAAQ,MAAM,KAAK,GACnB,WAAW,WAAW,SAAS,KAAK,IAAI;AAE5C,kBAAS,cAAc,UAAU,IAAK,QAAQ;AAC9C,cAAI,YAAY,aAAa,UAAU;AACrC,gBAAI,YAAY,KAAK;AACrB,mBAAO,aAAa;AAClB,kBAAI,KAAK,SAAS,MAAM,UAAU;AAChC,yBAAS;AAAA,cACX;AAAA,YACF;AACA,gBAAI,UAAU;AACZ,mBAAK,KAAK,QAAQ;AAAA,YACpB;AACA,mBAAO,KAAK,KAAK;AAAA,UACnB,WACS,CAAC,SAAS,MAAM,UAAU,UAAU,GAAG;AAC9C,gBAAI,SAAS,QAAQ;AACnB,mBAAK,KAAK,QAAQ;AAAA,YACpB;AACA,mBAAO,KAAK,KAAK;AAAA,UACnB;AAAA,QACF;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvEjB;AAAA;AAAA,QAAI,WAAW;AAoBf,aAAS,KAAK,OAAO;AACnB,aAAQ,SAAS,MAAM,SAAU,SAAS,KAAK,IAAI,CAAC;AAAA,IACtD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACxBjB;AAAA;AAAA,QAAI,QAAQ;AAAZ,QACI,cAAc;AAGlB,QAAI,uBAAuB;AAA3B,QACI,yBAAyB;AAY7B,aAAS,YAAY,QAAQ,QAAQ,WAAW,YAAY;AAC1D,UAAI,QAAQ,UAAU,QAClB,SAAS,OACT,eAAe,CAAC;AAEpB,UAAI,UAAU,MAAM;AAClB,eAAO,CAAC;AAAA,MACV;AACA,eAAS,OAAO,MAAM;AACtB,aAAO,SAAS;AACd,YAAI,OAAO,UAAU,KAAK;AAC1B,YAAK,gBAAgB,KAAK,CAAC,IACnB,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,CAAC,IAC1B,EAAE,KAAK,CAAC,KAAK,SACf;AACJ,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO,EAAE,QAAQ,QAAQ;AACvB,eAAO,UAAU,KAAK;AACtB,YAAI,MAAM,KAAK,CAAC,GACZ,WAAW,OAAO,GAAG,GACrB,WAAW,KAAK,CAAC;AAErB,YAAI,gBAAgB,KAAK,CAAC,GAAG;AAC3B,cAAI,aAAa,UAAa,EAAE,OAAO,SAAS;AAC9C,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,cAAI,QAAQ,IAAI;AAChB,cAAI,YAAY;AACd,gBAAI,SAAS,WAAW,UAAU,UAAU,KAAK,QAAQ,QAAQ,KAAK;AAAA,UACxE;AACA,cAAI,EAAE,WAAW,SACT,YAAY,UAAU,UAAU,uBAAuB,wBAAwB,YAAY,KAAK,IAChG,SACD;AACL,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7DjB;AAAA;AAAA,QAAI,WAAW;AAUf,aAAS,mBAAmB,OAAO;AACjC,aAAO,UAAU,SAAS,CAAC,SAAS,KAAK;AAAA,IAC3C;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACdjB;AAAA;AAAA,QAAI,qBAAqB;AAAzB,QACI,OAAO;AASX,aAAS,aAAa,QAAQ;AAC5B,UAAI,SAAS,KAAK,MAAM,GACpB,SAAS,OAAO;AAEpB,aAAO,UAAU;AACf,YAAI,MAAM,OAAO,MAAM,GACnB,QAAQ,OAAO,GAAG;AAEtB,eAAO,MAAM,IAAI,CAAC,KAAK,OAAO,mBAAmB,KAAK,CAAC;AAAA,MACzD;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvBjB;AAAA;AASA,aAAS,wBAAwB,KAAK,UAAU;AAC9C,aAAO,SAAS,QAAQ;AACtB,YAAI,UAAU,MAAM;AAClB,iBAAO;AAAA,QACT;AACA,eAAO,OAAO,GAAG,MAAM,aACpB,aAAa,UAAc,OAAO,OAAO,MAAM;AAAA,MACpD;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnBjB;AAAA;AAAA,QAAI,cAAc;AAAlB,QACI,eAAe;AADnB,QAEI,0BAA0B;AAS9B,aAAS,YAAY,QAAQ;AAC3B,UAAI,YAAY,aAAa,MAAM;AACnC,UAAI,UAAU,UAAU,KAAK,UAAU,CAAC,EAAE,CAAC,GAAG;AAC5C,eAAO,wBAAwB,UAAU,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAAA,MACjE;AACA,aAAO,SAAS,QAAQ;AACtB,eAAO,WAAW,UAAU,YAAY,QAAQ,QAAQ,SAAS;AAAA,MACnE;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrBjB;AAAA;AAAA,QAAI,cAAc;AAAlB,QACI,MAAM;AADV,QAEI,QAAQ;AAFZ,QAGI,QAAQ;AAHZ,QAII,qBAAqB;AAJzB,QAKI,0BAA0B;AAL9B,QAMI,QAAQ;AAGZ,QAAI,uBAAuB;AAA3B,QACI,yBAAyB;AAU7B,aAAS,oBAAoB,MAAM,UAAU;AAC3C,UAAI,MAAM,IAAI,KAAK,mBAAmB,QAAQ,GAAG;AAC/C,eAAO,wBAAwB,MAAM,IAAI,GAAG,QAAQ;AAAA,MACtD;AACA,aAAO,SAAS,QAAQ;AACtB,YAAI,WAAW,IAAI,QAAQ,IAAI;AAC/B,eAAQ,aAAa,UAAa,aAAa,WAC3C,MAAM,QAAQ,IAAI,IAClB,YAAY,UAAU,UAAU,uBAAuB,sBAAsB;AAAA,MACnF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChCjB;AAAA;AAOA,aAAS,aAAa,KAAK;AACzB,aAAO,SAAS,QAAQ;AACtB,eAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,MAChD;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACbjB;AAAA;AAAA,QAAI,UAAU;AASd,aAAS,iBAAiB,MAAM;AAC9B,aAAO,SAAS,QAAQ;AACtB,eAAO,QAAQ,QAAQ,IAAI;AAAA,MAC7B;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA,QAAI,eAAe;AAAnB,QACI,mBAAmB;AADvB,QAEI,QAAQ;AAFZ,QAGI,QAAQ;AAwBZ,aAAS,SAAS,MAAM;AACtB,aAAO,MAAM,IAAI,IAAI,aAAa,MAAM,IAAI,CAAC,IAAI,iBAAiB,IAAI;AAAA,IACxE;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC/BjB;AAAA;AAAA,QAAI,cAAc;AAAlB,QACI,sBAAsB;AAD1B,QAEI,WAAW;AAFf,QAGI,UAAU;AAHd,QAII,WAAW;AASf,aAAS,aAAa,OAAO;AAG3B,UAAI,OAAO,SAAS,YAAY;AAC9B,eAAO;AAAA,MACT;AACA,UAAI,SAAS,MAAM;AACjB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,QAAQ,KAAK,IAChB,oBAAoB,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,IACtC,YAAY,KAAK;AAAA,MACvB;AACA,aAAO,SAAS,KAAK;AAAA,IACvB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9BjB;AAAA;AAAA,QAAI,eAAe;AAAnB,QACI,WAAW;AAyBf,aAAS,OAAO,OAAO,UAAU;AAC/B,aAAQ,SAAS,MAAM,SAAU,SAAS,OAAO,aAAa,UAAU,CAAC,CAAC,IAAI,CAAC;AAAA,IACjF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9BjB;AAAA;AAAA,QAAI,UAAU;AAAd,QACI,OAAO;AAUX,aAAS,WAAW,QAAQ,UAAU;AACpC,aAAO,UAAU,QAAQ,QAAQ,UAAU,IAAI;AAAA,IACjD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA,QAAI,cAAc;AAUlB,aAAS,eAAe,UAAU,WAAW;AAC3C,aAAO,SAAS,YAAY,UAAU;AACpC,YAAI,cAAc,MAAM;AACtB,iBAAO;AAAA,QACT;AACA,YAAI,CAAC,YAAY,UAAU,GAAG;AAC5B,iBAAO,SAAS,YAAY,QAAQ;AAAA,QACtC;AACA,YAAI,SAAS,WAAW,QACpB,QAAQ,YAAY,SAAS,IAC7B,WAAW,OAAO,UAAU;AAEhC,eAAQ,YAAY,UAAU,EAAE,QAAQ,QAAS;AAC/C,cAAI,SAAS,SAAS,KAAK,GAAG,OAAO,QAAQ,MAAM,OAAO;AACxD;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC/BjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,iBAAiB;AAUrB,QAAI,WAAW,eAAe,UAAU;AAExC,WAAO,UAAU;AAAA;AAAA;;;ACbjB;AAAA;AAAA,QAAI,WAAW;AAAf,QACI,cAAc;AAUlB,aAAS,QAAQ,YAAY,UAAU;AACrC,UAAI,QAAQ,IACR,SAAS,YAAY,UAAU,IAAI,MAAM,WAAW,MAAM,IAAI,CAAC;AAEnE,eAAS,YAAY,SAAS,OAAO,KAAKA,aAAY;AACpD,eAAO,EAAE,KAAK,IAAI,SAAS,OAAO,KAAKA,WAAU;AAAA,MACnD,CAAC;AACD,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrBjB;AAAA;AAUA,aAAS,WAAW,OAAO,UAAU;AACnC,UAAI,SAAS,MAAM;AAEnB,YAAM,KAAK,QAAQ;AACnB,aAAO,UAAU;AACf,cAAM,MAAM,IAAI,MAAM,MAAM,EAAE;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA;AAAA,QAAI,WAAW;AAUf,aAAS,iBAAiB,OAAO,OAAO;AACtC,UAAI,UAAU,OAAO;AACnB,YAAI,eAAe,UAAU,QACzB,YAAY,UAAU,MACtB,iBAAiB,UAAU,OAC3B,cAAc,SAAS,KAAK;AAEhC,YAAI,eAAe,UAAU,QACzB,YAAY,UAAU,MACtB,iBAAiB,UAAU,OAC3B,cAAc,SAAS,KAAK;AAEhC,YAAK,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,QAAQ,SACtD,eAAe,gBAAgB,kBAAkB,CAAC,aAAa,CAAC,eAChE,aAAa,gBAAgB,kBAC7B,CAAC,gBAAgB,kBAClB,CAAC,gBAAgB;AACnB,iBAAO;AAAA,QACT;AACA,YAAK,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,QAAQ,SACtD,eAAe,gBAAgB,kBAAkB,CAAC,aAAa,CAAC,eAChE,aAAa,gBAAgB,kBAC7B,CAAC,gBAAgB,kBAClB,CAAC,gBAAgB;AACnB,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACxCjB;AAAA;AAAA,QAAI,mBAAmB;AAgBvB,aAAS,gBAAgB,QAAQ,OAAO,QAAQ;AAC9C,UAAI,QAAQ,IACR,cAAc,OAAO,UACrB,cAAc,MAAM,UACpB,SAAS,YAAY,QACrB,eAAe,OAAO;AAE1B,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,SAAS,iBAAiB,YAAY,KAAK,GAAG,YAAY,KAAK,CAAC;AACpE,YAAI,QAAQ;AACV,cAAI,SAAS,cAAc;AACzB,mBAAO;AAAA,UACT;AACA,cAAI,QAAQ,OAAO,KAAK;AACxB,iBAAO,UAAU,SAAS,SAAS,KAAK;AAAA,QAC1C;AAAA,MACF;AAQA,aAAO,OAAO,QAAQ,MAAM;AAAA,IAC9B;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC3CjB;AAAA;AAAA,QAAI,WAAW;AAAf,QACI,UAAU;AADd,QAEI,eAAe;AAFnB,QAGI,UAAU;AAHd,QAII,aAAa;AAJjB,QAKI,YAAY;AALhB,QAMI,kBAAkB;AANtB,QAOI,WAAW;AAPf,QAQI,UAAU;AAWd,aAAS,YAAY,YAAY,WAAW,QAAQ;AAClD,UAAI,UAAU,QAAQ;AACpB,oBAAY,SAAS,WAAW,SAAS,UAAU;AACjD,cAAI,QAAQ,QAAQ,GAAG;AACrB,mBAAO,SAAS,OAAO;AACrB,qBAAO,QAAQ,OAAO,SAAS,WAAW,IAAI,SAAS,CAAC,IAAI,QAAQ;AAAA,YACtE;AAAA,UACF;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,OAAO;AACL,oBAAY,CAAC,QAAQ;AAAA,MACvB;AAEA,UAAI,QAAQ;AACZ,kBAAY,SAAS,WAAW,UAAU,YAAY,CAAC;AAEvD,UAAI,SAAS,QAAQ,YAAY,SAAS,OAAO,KAAKC,aAAY;AAChE,YAAI,WAAW,SAAS,WAAW,SAAS,UAAU;AACpD,iBAAO,SAAS,KAAK;AAAA,QACvB,CAAC;AACD,eAAO,EAAE,YAAY,UAAU,SAAS,EAAE,OAAO,SAAS,MAAM;AAAA,MAClE,CAAC;AAED,aAAO,WAAW,QAAQ,SAAS,QAAQ,OAAO;AAChD,eAAO,gBAAgB,QAAQ,OAAO,MAAM;AAAA,MAC9C,CAAC;AAAA,IACH;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChDjB;AAAA;AAAA,QAAI,cAAc;AAAlB,QACI,cAAc;AADlB,QAEI,WAAW;AAFf,QAGI,iBAAiB;AA+BrB,QAAI,SAAS,SAAS,SAAS,YAAY,WAAW;AACpD,UAAI,cAAc,MAAM;AACtB,eAAO,CAAC;AAAA,MACV;AACA,UAAI,SAAS,UAAU;AACvB,UAAI,SAAS,KAAK,eAAe,YAAY,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG;AACxE,oBAAY,CAAC;AAAA,MACf,WAAW,SAAS,KAAK,eAAe,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG;AACjF,oBAAY,CAAC,UAAU,CAAC,CAAC;AAAA,MAC3B;AACA,aAAO,YAAY,YAAY,YAAY,WAAW,CAAC,GAAG,CAAC,CAAC;AAAA,IAC9D,CAAC;AAED,WAAO,UAAU;AAAA;AAAA;;;AC/CjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,eAAe;AAGnB,QAAI,UAAU;AASd,aAAS,WAAW,OAAO;AACzB,aAAO,aAAa,KAAK,KAAK,WAAW,KAAK,KAAK;AAAA,IACrD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,YAAY;AADhB,QAEI,WAAW;AAGf,QAAI,aAAa,YAAY,SAAS;AAmBtC,QAAI,SAAS,aAAa,UAAU,UAAU,IAAI;AAElD,WAAO,UAAU;AAAA;AAAA;;;AC1BjB;AAAA;AAAA,QAAI,WAAW;AAUf,aAAS,WAAW,YAAY,WAAW;AACzC,UAAI,SAAS,CAAC;AACd,eAAS,YAAY,SAAS,OAAO,OAAOC,aAAY;AACtD,YAAI,UAAU,OAAO,OAAOA,WAAU,GAAG;AACvC,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA;AAAA,QAAI,cAAc;AAAlB,QACI,aAAa;AADjB,QAEI,eAAe;AAFnB,QAGI,UAAU;AA2Cd,aAAS,OAAO,YAAY,WAAW;AACrC,UAAI,OAAO,QAAQ,UAAU,IAAI,cAAc;AAC/C,aAAO,KAAK,YAAY,aAAa,WAAW,CAAC,CAAC;AAAA,IACpD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnDjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,eAAe;AAGnB,QAAI,YAAY;AA4BhB,aAAS,SAAS,OAAO;AACvB,aAAO,OAAO,SAAS,YACpB,aAAa,KAAK,KAAK,WAAW,KAAK,KAAK;AAAA,IACjD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrCjB;AAAA;AASA,aAAS,UAAU,OAAO,UAAU;AAClC,UAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,SAAS,MAAM,KAAK,GAAG,OAAO,KAAK,MAAM,OAAO;AAClD;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrBjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,OAAO;AAWX,aAAS,WAAW,QAAQ,QAAQ;AAClC,aAAO,UAAU,WAAW,QAAQ,KAAK,MAAM,GAAG,MAAM;AAAA,IAC1D;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,SAAS;AAWb,aAAS,aAAa,QAAQ,QAAQ;AACpC,aAAO,UAAU,WAAW,QAAQ,OAAO,MAAM,GAAG,MAAM;AAAA,IAC5D;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,aAAa;AAUjB,aAAS,YAAY,QAAQ,QAAQ;AACnC,aAAO,WAAW,QAAQ,WAAW,MAAM,GAAG,MAAM;AAAA,IACtD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA,QAAI,YAAY;AAAhB,QACI,eAAe;AADnB,QAEI,aAAa;AAFjB,QAGI,YAAY;AAGhB,QAAI,mBAAmB,OAAO;AAS9B,QAAI,eAAe,CAAC,mBAAmB,YAAY,SAAS,QAAQ;AAClE,UAAI,SAAS,CAAC;AACd,aAAO,QAAQ;AACb,kBAAU,QAAQ,WAAW,MAAM,CAAC;AACpC,iBAAS,aAAa,MAAM;AAAA,MAC9B;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACxBjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,eAAe;AAUnB,aAAS,cAAc,QAAQ,QAAQ;AACrC,aAAO,WAAW,QAAQ,aAAa,MAAM,GAAG,MAAM;AAAA,IACxD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA,QAAI,iBAAiB;AAArB,QACI,eAAe;AADnB,QAEI,SAAS;AAUb,aAAS,aAAa,QAAQ;AAC5B,aAAO,eAAe,QAAQ,QAAQ,YAAY;AAAA,IACpD;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AACA,QAAI,cAAc,OAAO;AAGzB,QAAI,iBAAiB,YAAY;AASjC,aAAS,eAAe,OAAO;AAC7B,UAAI,SAAS,MAAM,QACf,SAAS,IAAI,MAAM,YAAY,MAAM;AAGzC,UAAI,UAAU,OAAO,MAAM,CAAC,KAAK,YAAY,eAAe,KAAK,OAAO,OAAO,GAAG;AAChF,eAAO,QAAQ,MAAM;AACrB,eAAO,QAAQ,MAAM;AAAA,MACvB;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACzBjB;AAAA;AAAA,QAAI,mBAAmB;AAUvB,aAAS,cAAc,UAAU,QAAQ;AACvC,UAAI,SAAS,SAAS,iBAAiB,SAAS,MAAM,IAAI,SAAS;AACnE,aAAO,IAAI,SAAS,YAAY,QAAQ,SAAS,YAAY,SAAS,UAAU;AAAA,IAClF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AACA,QAAI,UAAU;AASd,aAAS,YAAY,QAAQ;AAC3B,UAAI,SAAS,IAAI,OAAO,YAAY,OAAO,QAAQ,QAAQ,KAAK,MAAM,CAAC;AACvE,aAAO,YAAY,OAAO;AAC1B,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AAAA,QAAI,SAAS;AAGb,QAAI,cAAc,SAAS,OAAO,YAAY;AAA9C,QACI,gBAAgB,cAAc,YAAY,UAAU;AASxD,aAAS,YAAY,QAAQ;AAC3B,aAAO,gBAAgB,OAAO,cAAc,KAAK,MAAM,CAAC,IAAI,CAAC;AAAA,IAC/D;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAAA,QAAI,mBAAmB;AAAvB,QACI,gBAAgB;AADpB,QAEI,cAAc;AAFlB,QAGI,cAAc;AAHlB,QAII,kBAAkB;AAGtB,QAAI,UAAU;AAAd,QACI,UAAU;AADd,QAEI,SAAS;AAFb,QAGI,YAAY;AAHhB,QAII,YAAY;AAJhB,QAKI,SAAS;AALb,QAMI,YAAY;AANhB,QAOI,YAAY;AAEhB,QAAI,iBAAiB;AAArB,QACI,cAAc;AADlB,QAEI,aAAa;AAFjB,QAGI,aAAa;AAHjB,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,WAAW;AANf,QAOI,WAAW;AAPf,QAQI,kBAAkB;AARtB,QASI,YAAY;AAThB,QAUI,YAAY;AAchB,aAAS,eAAe,QAAQ,KAAK,QAAQ;AAC3C,UAAI,OAAO,OAAO;AAClB,cAAQ,KAAK;AAAA,QACX,KAAK;AACH,iBAAO,iBAAiB,MAAM;AAAA,QAEhC,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI,KAAK,CAAC,MAAM;AAAA,QAEzB,KAAK;AACH,iBAAO,cAAc,QAAQ,MAAM;AAAA,QAErC,KAAK;AAAA,QAAY,KAAK;AAAA,QACtB,KAAK;AAAA,QAAS,KAAK;AAAA,QAAU,KAAK;AAAA,QAClC,KAAK;AAAA,QAAU,KAAK;AAAA,QAAiB,KAAK;AAAA,QAAW,KAAK;AACxD,iBAAO,gBAAgB,QAAQ,MAAM;AAAA,QAEvC,KAAK;AACH,iBAAO,IAAI;AAAA,QAEb,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI,KAAK,MAAM;AAAA,QAExB,KAAK;AACH,iBAAO,YAAY,MAAM;AAAA,QAE3B,KAAK;AACH,iBAAO,IAAI;AAAA,QAEb,KAAK;AACH,iBAAO,YAAY,MAAM;AAAA,MAC7B;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5EjB;AAAA;AAAA,QAAI,SAAS;AAAb,QACI,eAAe;AAGnB,QAAI,SAAS;AASb,aAAS,UAAU,OAAO;AACxB,aAAO,aAAa,KAAK,KAAK,OAAO,KAAK,KAAK;AAAA,IACjD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAAA,QAAI,YAAY;AAAhB,QACI,YAAY;AADhB,QAEI,WAAW;AAGf,QAAI,YAAY,YAAY,SAAS;AAmBrC,QAAI,QAAQ,YAAY,UAAU,SAAS,IAAI;AAE/C,WAAO,UAAU;AAAA;AAAA;;;AC1BjB;AAAA;AAAA,QAAI,SAAS;AAAb,QACI,eAAe;AAGnB,QAAI,SAAS;AASb,aAAS,UAAU,OAAO;AACxB,aAAO,aAAa,KAAK,KAAK,OAAO,KAAK,KAAK;AAAA,IACjD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAAA,QAAI,YAAY;AAAhB,QACI,YAAY;AADhB,QAEI,WAAW;AAGf,QAAI,YAAY,YAAY,SAAS;AAmBrC,QAAI,QAAQ,YAAY,UAAU,SAAS,IAAI;AAE/C,WAAO,UAAU;AAAA;AAAA;;;AC1BjB;AAAA;AAAA,QAAI,QAAQ;AAAZ,QACI,YAAY;AADhB,QAEI,cAAc;AAFlB,QAGI,aAAa;AAHjB,QAII,eAAe;AAJnB,QAKI,cAAc;AALlB,QAMI,YAAY;AANhB,QAOI,cAAc;AAPlB,QAQI,gBAAgB;AARpB,QASI,aAAa;AATjB,QAUI,eAAe;AAVnB,QAWI,SAAS;AAXb,QAYI,iBAAiB;AAZrB,QAaI,iBAAiB;AAbrB,QAcI,kBAAkB;AAdtB,QAeI,UAAU;AAfd,QAgBI,WAAW;AAhBf,QAiBI,QAAQ;AAjBZ,QAkBI,WAAW;AAlBf,QAmBI,QAAQ;AAnBZ,QAoBI,OAAO;AApBX,QAqBI,SAAS;AAGb,QAAI,kBAAkB;AAAtB,QACI,kBAAkB;AADtB,QAEI,qBAAqB;AAGzB,QAAI,UAAU;AAAd,QACI,WAAW;AADf,QAEI,UAAU;AAFd,QAGI,UAAU;AAHd,QAII,WAAW;AAJf,QAKI,UAAU;AALd,QAMI,SAAS;AANb,QAOI,SAAS;AAPb,QAQI,YAAY;AARhB,QASI,YAAY;AAThB,QAUI,YAAY;AAVhB,QAWI,SAAS;AAXb,QAYI,YAAY;AAZhB,QAaI,YAAY;AAbhB,QAcI,aAAa;AAEjB,QAAI,iBAAiB;AAArB,QACI,cAAc;AADlB,QAEI,aAAa;AAFjB,QAGI,aAAa;AAHjB,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,WAAW;AANf,QAOI,WAAW;AAPf,QAQI,kBAAkB;AARtB,QASI,YAAY;AAThB,QAUI,YAAY;AAGhB,QAAI,gBAAgB,CAAC;AACrB,kBAAc,OAAO,IAAI,cAAc,QAAQ,IAC/C,cAAc,cAAc,IAAI,cAAc,WAAW,IACzD,cAAc,OAAO,IAAI,cAAc,OAAO,IAC9C,cAAc,UAAU,IAAI,cAAc,UAAU,IACpD,cAAc,OAAO,IAAI,cAAc,QAAQ,IAC/C,cAAc,QAAQ,IAAI,cAAc,MAAM,IAC9C,cAAc,SAAS,IAAI,cAAc,SAAS,IAClD,cAAc,SAAS,IAAI,cAAc,MAAM,IAC/C,cAAc,SAAS,IAAI,cAAc,SAAS,IAClD,cAAc,QAAQ,IAAI,cAAc,eAAe,IACvD,cAAc,SAAS,IAAI,cAAc,SAAS,IAAI;AACtD,kBAAc,QAAQ,IAAI,cAAc,OAAO,IAC/C,cAAc,UAAU,IAAI;AAkB5B,aAAS,UAAU,OAAO,SAAS,YAAY,KAAK,QAAQ,OAAO;AACjE,UAAI,QACA,SAAS,UAAU,iBACnB,SAAS,UAAU,iBACnB,SAAS,UAAU;AAEvB,UAAI,YAAY;AACd,iBAAS,SAAS,WAAW,OAAO,KAAK,QAAQ,KAAK,IAAI,WAAW,KAAK;AAAA,MAC5E;AACA,UAAI,WAAW,QAAW;AACxB,eAAO;AAAA,MACT;AACA,UAAI,CAAC,SAAS,KAAK,GAAG;AACpB,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,QAAQ,KAAK;AACzB,UAAI,OAAO;AACT,iBAAS,eAAe,KAAK;AAC7B,YAAI,CAAC,QAAQ;AACX,iBAAO,UAAU,OAAO,MAAM;AAAA,QAChC;AAAA,MACF,OAAO;AACL,YAAI,MAAM,OAAO,KAAK,GAClB,SAAS,OAAO,WAAW,OAAO;AAEtC,YAAI,SAAS,KAAK,GAAG;AACnB,iBAAO,YAAY,OAAO,MAAM;AAAA,QAClC;AACA,YAAI,OAAO,aAAa,OAAO,WAAY,UAAU,CAAC,QAAS;AAC7D,mBAAU,UAAU,SAAU,CAAC,IAAI,gBAAgB,KAAK;AACxD,cAAI,CAAC,QAAQ;AACX,mBAAO,SACH,cAAc,OAAO,aAAa,QAAQ,KAAK,CAAC,IAChD,YAAY,OAAO,WAAW,QAAQ,KAAK,CAAC;AAAA,UAClD;AAAA,QACF,OAAO;AACL,cAAI,CAAC,cAAc,GAAG,GAAG;AACvB,mBAAO,SAAS,QAAQ,CAAC;AAAA,UAC3B;AACA,mBAAS,eAAe,OAAO,KAAK,MAAM;AAAA,QAC5C;AAAA,MACF;AAEA,gBAAU,QAAQ,IAAI;AACtB,UAAI,UAAU,MAAM,IAAI,KAAK;AAC7B,UAAI,SAAS;AACX,eAAO;AAAA,MACT;AACA,YAAM,IAAI,OAAO,MAAM;AAEvB,UAAI,MAAM,KAAK,GAAG;AAChB,cAAM,QAAQ,SAAS,UAAU;AAC/B,iBAAO,IAAI,UAAU,UAAU,SAAS,YAAY,UAAU,OAAO,KAAK,CAAC;AAAA,QAC7E,CAAC;AAAA,MACH,WAAW,MAAM,KAAK,GAAG;AACvB,cAAM,QAAQ,SAAS,UAAUC,MAAK;AACpC,iBAAO,IAAIA,MAAK,UAAU,UAAU,SAAS,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,QAC7E,CAAC;AAAA,MACH;AAEA,UAAI,WAAW,SACV,SAAS,eAAe,aACxB,SAAS,SAAS;AAEvB,UAAI,QAAQ,QAAQ,SAAY,SAAS,KAAK;AAC9C,gBAAU,SAAS,OAAO,SAAS,UAAUA,MAAK;AAChD,YAAI,OAAO;AACT,UAAAA,OAAM;AACN,qBAAW,MAAMA,IAAG;AAAA,QACtB;AAEA,oBAAY,QAAQA,MAAK,UAAU,UAAU,SAAS,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,MACtF,CAAC;AACD,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrKjB;AAAA;AASA,aAAS,UAAU,OAAO,OAAO,KAAK;AACpC,UAAI,QAAQ,IACR,SAAS,MAAM;AAEnB,UAAI,QAAQ,GAAG;AACb,gBAAQ,CAAC,QAAQ,SAAS,IAAK,SAAS;AAAA,MAC1C;AACA,YAAM,MAAM,SAAS,SAAS;AAC9B,UAAI,MAAM,GAAG;AACX,eAAO;AAAA,MACT;AACA,eAAS,QAAQ,MAAM,IAAM,MAAM,UAAW;AAC9C,iBAAW;AAEX,UAAI,SAAS,MAAM,MAAM;AACzB,aAAO,EAAE,QAAQ,QAAQ;AACvB,eAAO,KAAK,IAAI,MAAM,QAAQ,KAAK;AAAA,MACrC;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9BjB;AAAA;AAAA,QAAI,UAAU;AAAd,QACI,YAAY;AAUhB,aAAS,OAAO,QAAQ,MAAM;AAC5B,aAAO,KAAK,SAAS,IAAI,SAAS,QAAQ,QAAQ,UAAU,MAAM,GAAG,EAAE,CAAC;AAAA,IAC1E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA,QAAI,WAAW;AAAf,QACI,OAAO;AADX,QAEI,SAAS;AAFb,QAGI,QAAQ;AAUZ,aAAS,UAAU,QAAQ,MAAM;AAC/B,aAAO,SAAS,MAAM,MAAM;AAC5B,eAAS,OAAO,QAAQ,IAAI;AAC5B,aAAO,UAAU,QAAQ,OAAO,OAAO,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,IAC1D;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnBjB;AAAA;AAAA,QAAI,gBAAgB;AAWpB,aAAS,gBAAgB,OAAO;AAC9B,aAAO,cAAc,KAAK,IAAI,SAAY;AAAA,IAC5C;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA,QAAI,WAAW;AAAf,QACI,YAAY;AADhB,QAEI,YAAY;AAFhB,QAGI,WAAW;AAHf,QAII,aAAa;AAJjB,QAKI,kBAAkB;AALtB,QAMI,WAAW;AANf,QAOI,eAAe;AAGnB,QAAI,kBAAkB;AAAtB,QACI,kBAAkB;AADtB,QAEI,qBAAqB;AAsBzB,QAAI,OAAO,SAAS,SAAS,QAAQ,OAAO;AAC1C,UAAI,SAAS,CAAC;AACd,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AACA,UAAI,SAAS;AACb,cAAQ,SAAS,OAAO,SAAS,MAAM;AACrC,eAAO,SAAS,MAAM,MAAM;AAC5B,mBAAW,SAAS,KAAK,SAAS;AAClC,eAAO;AAAA,MACT,CAAC;AACD,iBAAW,QAAQ,aAAa,MAAM,GAAG,MAAM;AAC/C,UAAI,QAAQ;AACV,iBAAS,UAAU,QAAQ,kBAAkB,kBAAkB,oBAAoB,eAAe;AAAA,MACpG;AACA,UAAI,SAAS,MAAM;AACnB,aAAO,UAAU;AACf,kBAAU,QAAQ,MAAM,MAAM,CAAC;AAAA,MACjC;AACA,aAAO;AAAA,IACT,CAAC;AAED,WAAO,UAAU;AAAA;AAAA;;;;;;;;;;;;IC1CJC,IAA6C,CACtD,SAAAC,IAAAA;AAAI,SAAIA,GAAKC,gBAAgB,CAAA;AAAE,GAC/B,SAAAD,IAAAA;AAAI,SAAIA,GAAKE,WAAW,CAAA;AAAE,GAC1B,SAAAF,IAAAA;AAAI,SAAIA,GAAKG,WAAW,CAAA;AAAE,GAC1B,SAAAH,IAAAA;AAAI,SAAIA,GAAKI,SAAS,CAAA;AAAE,GACxB,SAAAJ,IAAAA;AAAI,SAAIA,GAAKK,QAAQ,CAAA;AAAE,GACvB,SAAAL,IAAAA;AAAI,SAAIA,GAAKM,SAAS,CAAA;AAAE,CAAA;IAGfC,IAA2E,EACpFC,aAAa,CAAA,GACbC,QAAQV,EAAiBW,MAAM,GAAG,CAAA,GAClCC,QAAQZ,EAAiBW,MAAM,GAAG,CAAA,GAClCE,MAAMb,EAAiBW,MAAM,GAAG,CAAA,GAChCG,KAAKd,EAAiBW,MAAM,GAAG,CAAA,GAC/BI,OAAOf,EAAiBW,MAAM,GAAG,CAAA,GACjCK,MAAMhB,EAAiBW,MAAM,GAAG,CAAA,EAAA;IAGvBM,IAAwB,SAACC,IAAAA;AAAyB,SAAK,SAACjB,IAAAA;AAKjE,WAJAO,EAAuBU,EAAAA,EAAWC,QAAQ,SAAAC,IAAAA;AACtCA,MAAAA,GAAOnB,EAAAA;IACX,CAAA,GAEOA;EAAAA;AACV;IAEYoB,IAAuB,SAAHC,IAAAA;AAQ3B,MAAAC,KAAAD,GAPFE,QAAAA,KAAAA,WAAMD,KAAG,WAAQA,IAAAE,KAAAH,GACjBJ,WAAAA,KAAAA,WAASO,KAAG,gBAAaA,IAAAC,IAAAJ,GACzBK,QAAAA,IAAAA,WAAMD,KAAOA,GAMPE,IAAcX,EAAsBC,EAAAA;AAE1C,SAAO,SAACW,IAAAA;AACJ,QAAA,WAAIA;AACA,aAAOA;AAGX,QAAe,aAAXL,MAAuBK,cAAiBC;AACxC,aAAOF,EAAYC,EAAAA;AAGvB,QAAME,KAAYJ,IAASK,SAASR,EAAAA,IAAUS,UAAUT,EAAAA;AACxD,WAAOI,EAAYG,GAAUF,EAAAA,CAAAA;EAAAA;AAErC;IC7DaK,IAAoB,SAAHZ,IAS1Ba,IACAC,IACAC,IAAAA;AACC,MACGC,IACgBC,IAMhBC,IACgBC,GATnBC,IAAApB,GAVGqB,KAAAA,IAAAA,WAAGD,IAAG,IAACA,GAAAE,IAAAtB,GACPuB,KAAAA,IAAAA,WAAGD,IAAG,SAAMA,GAAAE,KAAAxB,GACZyB,SAAAA,KAAAA,WAAOD,MAAQA,IAAAE,IAAA1B,GACf2B,SAAAA,KAAAA,WAAOD,KAAQA,GAAAE,IAAA5B,GACf6B,OAAAA,KAAAA,WAAKD,KAAQA,GAAAE,KAAA9B,GACb+B,MAAAA,KAAAA,WAAID,MAAQA;AAOJ,aAART,IACAL,KAAAA,SAAWS,KAAAA,SAAgBR,KAAGJ,GAAKmB,cAAUf,KAAI,IAAIJ,GAAKQ,MAE1DL,KAAWK;AAIH,aAARE,IACAL,KAAAA,SAAWO,KAAAA,SAAgBN,IAAGN,GAAKoB,cAAUd,IAAI,IAAIN,GAAKU,MAE1DL,KAAWK;AAGf,MAAMW,KAAQC,OAAAA,EACTC,WAAoB,QAATrB,KAAe,CAAC,GAAGD,EAAAA,IAAQ,CAACA,IAAM,CAAA,CAAA,EAC7CuB,OAAOV,KAAU,CAACT,IAAUF,EAAAA,IAAY,CAACA,IAAUE,EAAAA,CAAAA,EACnDW,MAAMA,EAAAA;AAKX,SAAA,SAHIE,KAAeG,GAAMH,KAAAA,IACA,YAAA,OAATA,MAAmBG,GAAMH,KAAKA,EAAAA,GAEvCO,EAAgCJ,IAAOT,EAAAA;AAClD;IAEaa,IAAkB,SAC3BJ,IACAT,IAAAA;AAAAA,aAAAA,OAAAA,KAAAA;AAEA,MAAMc,KAAaL;AAInB,SAHAK,GAAWC,OAAO,UAClBD,GAAWd,UAAUA,IAEdc;AACX;IC/CaE,IAAmB,SAC5BC,IACA7B,IACAC,IAAAA;AAEA,MAEMyB,KAFQI,MAAAA,EAAoBC,MAAM,CAAC,GAAG9B,EAAAA,CAAAA,EAAOuB,OAAOxB,GAAKgC,GAAAA;AAK/D,SAFAN,GAAWC,OAAO,SAEXD;AACX;ICXaO,IAAkB,SAAHC,IAExBC,IACAC,IACAC,IAAAA;AACC,MAAAC,KAAAJ,GAJCK,OAAAA,KAAAA,WAAKD,MAAOA,IAKRE,KAAQC,KAAAA,EACTC,MAAe,QAATL,KAAe,CAAC,GAAGD,EAAAA,IAAQ,CAACA,IAAM,CAAA,CAAA,EACxCO,OAAOR,GAAKS,GAAAA,EACZL,MAAMA,EAAAA;AAEX,SAAOM,GAAqBL,EAAAA;AAChC;IAEaK,KAAgB,SAA4BL,IAAAA;AACrD,MAAMM,KAAaN;AAGnB,SAFAM,GAAWC,OAAO,QAEXD;AACX;IClBaE,KAAkB,SAAHd,IASxBC,IACAC,IAAAA;AACC,MAGGa,IASAC,IAZHC,KAAAjB,GATGkB,QAAAA,KAAAA,WAAMD,KAAG,WAAQA,IAAAE,IAAAnB,GACjBoB,WAAAA,IAAAA,WAASD,IAAG,gBAAaA,GAAAE,IAAArB,GACzBsB,KAAAA,IAAAA,WAAGD,IAAG,SAAMA,GAAAE,KAAAvB,GACZwB,KAAAA,KAAAA,WAAGD,KAAG,SAAMA,IAAAE,IAAAzB,GACZ0B,QAAAA,KAAAA,WAAMD,KAAOA,GAAAE,IAAA3B,GACb4B,MAAAA,KAAAA,WAAID,KAAQA,GAKVE,KAAYC,EAAqB,EAAEZ,QAAAA,IAAQE,WAAAA,GAAWM,QAAAA,GAAAA,CAAAA;AAIxDX,EAAAA,KADQ,WAARO,IACWO,GAAU5B,GAAKqB,GAAAA,IACR,aAAXJ,KACIW,GAAUP,CAAAA,IAEVA,GAKXN,KADQ,WAARQ,KACWK,GAAU5B,GAAKuB,GAAAA,IACR,aAAXN,KACIW,GAAUL,EAAAA,IAEVA;AAGf,MAAMlB,KAAQoB,KAASK,QAAAA,IAAaC,KAAAA;AAEpC1B,EAAAA,GAAME,MAAM,CAAC,GAAGN,EAAAA,CAAAA,GAEZa,MAAYC,MAAUV,GAAMG,OAAO,CAACM,IAAUC,EAAAA,CAAAA,GAAAA,SAE9CY,KAAetB,GAAMsB,KAAAA,IACA,YAAA,OAATA,MAAqC,YAAA,OAATA,MAAmBtB,GAAMsB,KAAKA,EAAAA;AAE1E,MAAMhB,KAAaN;AAKnB,SAHAM,GAAWC,OAAO,QAClBD,GAAWc,SAASA,IAEbd;AACX;IChDaqB,MAAiB,SAAHjC,IAEvBC,IACAC,IACAC,IAAAA;AACC,MAMG+B,IANHC,KAAAnC,GAJCoC,MAAAA,KAAAA,WAAID,KAAG,KAAEA,IAAAd,IAAArB,GAAEsB,KAAAA,IAAAA,WAAGD,IAAG,SAAMA,GAAAE,IAAAvB,GAAEwB,KAAAA,IAAAA,WAAGD,IAAG,SAAMA;AAMvC,MADgBtB,GAAKS,IAAI2B,KAAK,SAAAC,IAAAA;AAAC,WAAU,MAANA;EAAAA,CAAAA;AAE/B,UAAM,IAAIC,MAAK,mDAAA;AAInB,MAgBIxB,GAOAC,IAvBAwB,KAAAA;AAYJ,MAXAvC,GAAKS,IACA+B,OAAO,SAAAH,IAAAA;AAAC,WAAS,QAALA;EAAS,CAAA,EACrBI,QAAQ,SAAAJ,IAAAA;AACDE,IAAAA,OAAAA,WACAN,KACAA,KAAOS,KAAKT,KAAKI,EAAAA,IACVK,KAAKT,KAAKI,EAAAA,MAAOJ,OACxBM,KAAAA;EAER,CAAA,GAEAA;AACA,UAAM,IAAID,MAAK,mEAAA;AAKfxB,MADQ,WAARO,IACWrB,GAAKqB,MAELA,GAKXN,KADQ,WAARQ,IACWvB,GAAKuB,MAELA;AAGf,MAMMZ,IANQgC,IAAAA,EACTnC,OAAO,CAACM,GAAUC,EAAAA,CAAAA,EAClB6B,WAAoB,QAAT1C,KAAe,CAAC,GAAGD,EAAAA,IAAQ,CAACA,IAAM,CAAA,CAAA,EAC7CkC,KAAKA,EAAAA,EACLR,KAAAA;AAKL,SAFAhB,EAAWC,OAAO,OAEXD;AACX;ICpDakC,KAAoB,SAAH9C,IAE1BC,IACAC,IACAC,IAAAA;AACC,MACGY,IAOAC,IARH+B,KAAA/C,GAJCgD,UAAAA,IAAAA,WAAQD,KAAG,IAACA,IAAA1B,IAAArB,GAAEsB,KAAAA,IAAAA,WAAGD,IAAG,SAAMA,GAAAE,IAAAvB,GAAEwB,KAAAA,IAAAA,WAAGD,IAAG,SAAMA,GAAA0B,IAAAjD,GAAEkD,SAAAA,KAAAA,WAAOD,KAAQA;AAOvDlC,EAAAA,KADQ,WAARO,IACWrB,GAAKqB,MAELA,GAKXN,KADQ,WAARQ,IACWvB,GAAKuB,MAELA;AAGf,MAAMlB,IAAQ6C,OAAAA,EACTH,SAASA,CAAAA,EACTH,WAAoB,QAAT1C,KAAe,CAAC,GAAGD,EAAAA,IAAQ,CAACA,IAAM,CAAA,CAAA,EAC7C0B,KAAAA;AAAAA,WAEDsB,KAAkB5C,EAAMG,OAAO,CAACO,IAAUD,EAAAA,CAAAA,IACzCT,EAAMG,OAAO,CAACM,IAAUC,EAAAA,CAAAA;AAE7B,MAAMJ,KAAaN;AAGnB,SAFAM,GAAWC,OAAO,UAEXD;AACX;ACwBO,SAASwC,GACZC,IACAC,IACAC,IACAC,IAAAA;AAEA,UAAQH,GAAKI,MAAAA;IACT,KAAK;AACD,aAAOC,EAAkBL,IAAMC,IAAMC,IAAMC,EAAAA;IAC/C,KAAK;AACD,aAAOG,EAAwBN,IAAMC,IAAMC,EAAAA;IAC/C,KAAK;AACD,aAAOK,EAAuBP,IAAMC,IAAMC,IAAMC,EAAAA;IACpD,KAAK;AACD,aAAOK,GAAgBR,IAAMC,IAAMC,EAAAA;IACvC,KAAK;AACD,aAAOO,IAAeT,IAAMC,IAAMC,IAAMC,EAAAA;IAC5C,KAAK;AACD,aAAOO,GAAkBV,IAAMC,IAAMC,IAAMC,EAAAA;IAC/C;AACI,YAAM,IAAIQ,MAAM,oBAAA;EAAA;AAE5B;AASA,ICxDaC,KAAc,SAAQC,IAAAA;AAC/B,MAAMC,KAAYD,GAAMC,UAAAA;AAExB,MAAkB,MAAdA;AAAiB,WAAOD;AAE5B,MAAIE,KAASD,KAAY;AAKzB,SAJID,GAAMG,MAAAA,MACND,KAASE,KAAKD,MAAMD,EAAAA,IAGjB,SAAkBG,IAAAA;AAAI,QAAAC;AAAA,YAAc,SAATA,KAACN,GAAMK,EAAAA,KAAEC,KAAI,KAAKJ;EAAM;AAC9D;AD6CA,IC7BMK,KAA6E,EAC/EC,aAAa,CAACC,qBAAiBC,mBAAAA,GAC/BC,QAAQ,CAACC,gBAAYC,cAAAA,GACrBC,QAAQ,CAACC,gBAAYC,iBAAAA,GACrBC,MAAM,CAACC,cAAUC,eAAAA,GACjBC,KAAK,CAnBOC,YACZ,SAAAC,IAAAA;AAAI,SAAIA,GAAKC,SAAS,GAAG,GAAG,GAAG,CAAA;AAAE,GACjC,SAACD,IAAME,IAAAA;AAAI,SAAKF,GAAKG,QAAQH,GAAKI,QAAAA,IAAYF,EAAAA;AAAK,GACnD,SAACG,IAAOC,IAAAA;AAAG,UAAMA,GAAIC,QAAAA,IAAYF,GAAME,QAAAA,KAAa;AAAK,GACzD,SAAAP,IAAAA;AAAI,SAAIlB,KAAK0B,MAAMR,GAAKO,QAAAA,IAAY,KAAA;AAAM,CAAA,GAG/BR,YACX,SAAAC,IAAAA;AAAI,SAAIA,GAAKS,YAAY,GAAG,GAAG,GAAG,CAAA;AAAE,GACpC,SAACT,IAAME,IAAAA;AAAI,SAAKF,GAAKU,WAAWV,GAAKW,WAAAA,IAAeT,EAAAA;AAAK,GACzD,SAACG,IAAOC,IAAAA;AAAG,UAAMA,GAAIC,QAAAA,IAAYF,GAAME,QAAAA,KAAa;AAAK,GACzD,SAAAP,IAAAA;AAAI,SAAIlB,KAAK0B,MAAMR,GAAKO,QAAAA,IAAY,KAAA;AAAM,CAAA,CAAA,GAS1CK,MAAM,CAACC,QAAUC,SAAAA,GACjBC,QAAQ,CAACC,QAAYC,SAAAA,GACrBC,QAAQ,CAACC,QAAYC,SAAAA,GACrBC,SAAS,CAACC,SAAaC,UAAAA,GACvBC,WAAW,CAACC,WAAeC,YAAAA,GAC3BC,UAAU,CAACC,UAAcC,WAAAA,GACzBC,QAAQ,CAACC,QAAYC,SAAAA,GACrBC,UAAU,CAACC,UAAcC,WAAAA,GACzBC,OAAO,CAACC,eAAWC,gBAAAA,GACnBC,MAAM,CAACC,cAAUC,eAAAA,EAAAA;ADcrB,ICXMC,MAAYC,OAAOC,KAAK3D,EAAAA;ADW9B,ICVM4D,KAAqB,IAAIC,OAAgCJ,2BAAAA,IAAUK,KAAK,GAAA,IAAI,QAAQ,GAAA;ADU1F,ICLaC,KAAgB,SACzBtE,IACAuE,IAAAA;AAGA,MAAIC,MAAMC,QAAQF,EAAAA;AACd,WAAOA;AAGX,MAAoB,YAAA,OAATA,MAAqB,YAAYvE,IAAO;AAE/C,QAAM0E,KAAUH,GAAKI,MAAMR,EAAAA;AAE3B,QAAIO,IAAS;AACT,UAASE,KAAgBF,GAAO,CAAA,GAAfG,KAAQH,GAAO,CAAA,GAI1BI,KAAWvE,GAAWsE,EAAAA,EAAM7E,GAAM+E,SAAS,IAAI,CAAA;AAErD,UAAa,UAATF,IAAgB;AAAA,YAAAG,IAAAC,GAChBC,IAA8BlF,GAAMmF,OAAAA,GAA7BxD,IAAKuD,EAAA,CAAA,GAAEE,IAAYF,EAAA,CAAA,GACpBG,IAAO,IAAIC,KAAKF,CAAAA;AAKtB,eAFAC,EAAK5D,QAAQ4D,EAAK3D,QAAAA,IAAY,CAAA,GAEgCsD,SAA9DA,KAA0C,SAA1CC,IAAOH,GAASS,MAAMC,OAAa,QAANZ,KAAAA,KAAU,CAAA,CAAA,KAAA,SAAhCK,EAAqCQ,MAAM9D,GAAO0D,CAAAA,KAAKL,KAAI,CAAA;MACtE;AAEA,UAAA,WAAIJ;AACA,eAAO5E,GAAM0F,MAAMZ,EAAAA;AAGvB,UAAMa,IAAWb,GAASS,MAAMC,OAAOZ,EAAAA,CAAAA;AAEvC,UAAIe;AACA,eAAO3F,GAAM0F,MAAMC,CAAAA;IAE3B;AAEA,UAAM,IAAIC,MAA6BrB,yBAAAA,EAAAA;EAC3C;AAGA,MAAI,WAAWvE,IAAO;AAElB,QAAA,WAAIuE;AACA,aAAOvE,GAAM0F,MAAAA;AAIjB,QAtDa,YAAA,QADFG,KAuDGtB,OAtDWuB,SAASD,EAAAA,KAAUzF,KAAK0B,MAAM+D,EAAAA,MAAWA;AAuD9D,aAAO7F,GAAM0F,MAAMnB,EAAAA;EAE3B;AA1Dc,MAACsB;AA6Df,SAAO7F,GAAMmF,OAAAA;AACjB;;;;;;;;;;;;;;ACzIA,IAEaY,IAAwB,SAAHC,IAAAA;AAoB5B,MAUEC,IA7BJC,KAAIF,GAAJE,MACAC,KAAKH,GAALG,OACAC,KAAaJ,GAAbI,eACAC,KAAUL,GAAVK,YACAC,IAAQN,GAARM,UACAC,IAAWP,GAAXO,aACAC,IAAYR,GAAZQ,cACAC,IAAcT,GAAdS,gBAAcC,IAAAV,GACdW,QAAAA,IAAAA,WAAMD,IAAG,QAAKA,GAYRE,KAASC,GAAqBV,IAAOE,EAAAA,GAErCS,KAAYC,GAAkBJ,CAAAA,GAE9BK,KAAW,eAAeb,KAAQc,GAAYd,EAAAA,IAASA,IACvDe,KAAO,EAAEC,OAAO,GAAGC,OAAO,EAAA,GAC1BC,KAAO,EAAEC,OAAO,GAAGC,OAAO,EAAA,GAE1BC,KAA4B,YAAA,OAAbC,YAAyC,UAAjBA,SAASC,KAElDC,KAA6Bb,GAAUc,MAAMC,QAC7CC,KAAmChB,GAAUiB,SAASF;AAE7C,UAAT3B,MACAD,KAAY,SAAA+B,IAAAA;AAAC,QAAAC;AAAA,WAAK,EAAEC,GAAc,SAAbD,KAAEjB,GAASgB,EAAAA,KAAEC,KAAI,GAAGE,GAAG,EAAA;EAAA,GAE5CjB,GAAKE,QAAQd,KAA8B,YAAlBF,KAA4B,IAAA,KACrDiB,GAAKE,SAASjB,IAAWC,MAAkC,YAAlBH,KAA4B,IAAA,KAGjE0B,KADkB,YAAlB1B,KACeU,GAAUiB,SAASK,MAEnBtB,GAAUiB,SAASM,QAGjB,MAAjB7B,IACAmB,KAAYb,GAAUc,MAAMC,SAET,YAAlBzB,MAA6BI,IAAe,KAC1B,aAAlBJ,MAA8BI,IAAe,KAE9CmB,KAAYb,GAAUc,MAAMJ,KAAQ,SAAS,OAAA,GAC7CM,KAAehB,GAAUiB,SAASF,WAEf,YAAlBzB,MAA6BI,IAAe,KAC1B,aAAlBJ,MAA8BI,IAAe,OAE9CmB,KAAYb,GAAUc,MAAMJ,KAAQ,UAAU,MAAA,GAC9CM,KAAehB,GAAUiB,SAASF,YAGtC5B,KAAY,SAAA+B,IAAAA;AAAC,QAAAM;AAAA,WAAK,EAAEJ,GAAG,GAAGC,GAAcG,SAAbA,KAAEtB,GAASgB,EAAAA,KAAEM,KAAI,EAAA;EAAA,GAE5CpB,GAAKC,QAAQb,KAA8B,YAAlBF,KAA4B,IAAA,KACrDiB,GAAKC,SAAShB,IAAWC,MAAkC,YAAlBH,KAA4B,IAAA,KAGjEuB,KADkB,YAAlBvB,KACYU,GAAUc,MAAMW,OAEhBzB,GAAUc,MAAMY;AAyBpC,SAAO,EACHC,OAbU7B,GAAO8B,IAAI,SAACC,IAAAA;AACtB,QAAMC,KACe,YAAA,OAAVD,KAXM,SAACA,IAAAA;AAClB,UAAME,KAAcC,OAAOH,EAAAA,EAAOI;AAElC,aAAItC,KAAkBA,IAAiB,KAAKoC,KAAcpC,IACtD,KAAUqC,OAAOH,EAAAA,EAAOK,MAAM,GAAGvC,CAAAA,EAAgBwC,OAAO,KAAA,IAE5D,KAAUN;IAAAA,EAKoCA,EAAAA,IAA8BA;AAC5E,WAAAO,EAAA,EACIC,KAAKR,cAAiBS,OAAI,KAAMT,GAAMU,QAAAA,IAAS,KAAQV,IACvDA,OAAOC,GAAAA,GACJ3C,GAAU0C,EAAAA,GACVzB,IACAG,EAAAA;EAEX,CAAA,GAIIM,WAAAA,IACAG,cAAAA,GAAAA;AAER;AAtGA,IAwGawB,IAAe,SACxBC,IACApD,IAAAA;AAEA,MAAA,WAAWoD,MAA4C,cAAA,OAAXA;AAAuB,WAAOA;AAE1E,MAAmB,WAAfpD,GAAMqD,MAAiB;AACvB,QAAMC,KAAYC,WAAWH,EAAAA;AAE7B,WAAQ,SAACvB,IAAAA;AAAM,aAAKyB,GAAUzB,cAAaoB,OAAOpB,KAAI,IAAIoB,KAAKpB,EAAAA,CAAAA;IAAG;EACtE;AAEA,SAAO2B,OAASJ,EAAAA;AACpB;AArHA,IAuHaK,IAAmB,SAAHC,IAAAA;AAYvB,MAnIclB,IAwHhBmB,KAAKD,GAALC,OACAC,KAAMF,GAANE,QACA5D,KAAK0D,GAAL1D,OACAD,KAAI2D,GAAJ3D,MACQ8D,KAAOH,GAAfjD,QASMA,KArIU+B,KAoImBqB,IApIcC,MAAMC,QAAQvB,EAAAA,IAoIjBqB,KAAAA,WACjBnD,GAAqBV,IAAO6D,EAAAA,GACnDhD,IAAW,eAAeb,KAAQc,GAAYd,EAAAA,IAASA,IAEvDgE,IACO,QAATjE,KACMU,EAAO8B,IAAI,SAACC,IAAAA;AAAY,QAAAyB,IAAAC;AAAA,WAAM,EAC1BlB,KAAKR,cAAiBS,OAAI,KAAMT,GAAMU,QAAAA,IAAS,KAAQV,IACvD2B,IAAmB,SAAjBF,KAAEpD,EAAS2B,EAAAA,KAAMyB,KAAI,GACvBG,IAAmB,SAAjBF,KAAErD,EAAS2B,EAAAA,KAAM0B,KAAI,GACvBG,IAAI,GACJC,IAAIV,GAAAA;EACN,CAAA,IACFnD,EAAO8B,IAAI,SAACC,IAAAA;AAAY,QAAA+B,IAAAC;AAAA,WAAM,EAC1BxB,KAAKR,cAAiBS,OAAI,KAAMT,GAAMU,QAAAA,IAAS,KAAQV,IACvD2B,IAAI,GACJC,IAAIT,IACJU,IAAmB,SAAjBE,KAAE1D,EAAS2B,EAAAA,KAAM+B,KAAI,GACvBD,IAAmBE,SAAjBA,KAAE3D,EAAS2B,EAAAA,KAAMgC,KAAI,EAAA;EAC1B,CAAA;AAEX,SAAOR;AACX;AA1JA,ICyDMS,QAAmBC,aAAAA,MAzDR,SAAH7E,IAAAA;AASc,MAAA8E,IARjBC,KAAM/E,GAAb2C,OACAY,KAAMvD,GAANuD,QACApC,KAAKnB,GAALmB,OACAC,IAAKpB,GAALoB,OACA4D,IAAOhF,GAAPgF,SACAlD,IAAY9B,GAAZ8B,cACAmD,IAAUjF,GAAViF,YACAC,KAAalF,GAAbkF,eAEMC,KAAQC,GAAAA,GACRC,IAAYF,GAAMjF,KAAKuC,MAAMvB,MAC7BoE,IAAYH,GAAMjF,KAAKuC,MAAMpB,MAE7BsB,KAAwBmC,SAAnBA,KAAS,QAANvB,KAAAA,SAAAA,GAASwB,EAAAA,KAAOD,KAAIC,IAE5BQ,SAAQC,aAAAA,SAAQ,WAAA;AAClB,QAAMC,KAAQ,EAAEC,SAASR,GAAcQ,QAAAA;AAEvC,WAAKV,IAIE,EACHS,OAAKvC,EAAA,CAAA,GAAOuC,IAAK,EAAEE,QAAQ,UAAA,CAAA,GAC3BX,SAAS,SAACY,IAAAA;AAAgD,aAAKZ,EAAQY,IAAOjD,EAAAA;IAAM,EAAA,IAL7E,EAAE8C,OAAAA,GAAAA;EAOhB,GAAE,CAACP,GAAcQ,SAASV,GAASrC,EAAAA,CAAAA;AAEpC,aACIkD,mBAAAA,MAACC,SAASC,GAAC7C,EAAA,EAAC8C,WAAWd,GAAcc,UAAAA,GAAeT,IAAK,EAAAU,UAAAA,KACrDC,mBAAAA,KAAA,QAAA,EAAM5B,IAAI,GAAGC,IAAIpD,IAAOqD,IAAI,GAAGC,IAAIrD,GAAOqE,OAAOJ,EAAAA,CAAAA,GAChDC,EAAUa,eAAe,SACtBD,mBAAAA,KAACJ,SAASzE,MAAI,EACV+E,kBAAkBtE,GAClBmD,YAAYA,GACZe,WAAWd,GAAcmB,eACzBZ,OAAOH,GACPgB,aAAsC,IAAzBhB,EAAUa,cACvBI,QAAQjB,EAAUkB,cAClBC,gBAAe,SAAOR,UAElBtD,KAAAA,GAAAA,CAAAA,OAGZuD,mBAAAA,KAACJ,SAASzE,MAAI,EACV+E,kBAAkBtE,GAClBmD,YAAYA,GACZe,WAAWd,GAAcmB,eACzBZ,OAAOiB,GAAqBpB,CAAAA,GAAWW,UAEnCtD,KAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAIpB,CAAA;ADvDA,IEEagE,IAAkB,SAAH3G,IAAAA;AA0BtB,MAzBFE,KAAIF,GAAJE,MACAC,KAAKH,GAALG,OAAKyG,IAAA5G,GACLkC,GAAAA,IAAAA,WAAC0E,IAAG,IAACA,GAAAC,KAAA7G,GACLmC,GAAAA,KAAAA,WAAC0E,KAAG,IAACA,IACL9D,IAAM/C,GAAN+C,QACA3C,IAAaJ,GAAbI,eACAC,KAAUL,GAAVK,YAAUyG,KAAA9G,GACVM,UAAAA,KAAAA,WAAQwG,KAAG,IAACA,IAAAC,KAAA/G,GACZO,aAAAA,KAAAA,WAAWwG,KAAG,IAACA,IAAAC,KAAAhH,GACfQ,cAAAA,KAAAA,WAAYwG,KAAG,IAACA,IAChBzD,KAAMvD,GAANuD,QAAM0D,KAAAjH,GACNkH,YAAAA,KAAAA,WAAUD,KAAGE,IAAQF,IACrBxG,KAAcT,GAAdS,gBACA2G,KAAMpH,GAANoH,QAAMC,KAAArH,GACNsH,gBAAAA,KAAAA,WAAcD,KAAG,QAAKA,IAAAE,KAAAvH,GACtBwH,cAAAA,KAAAA,WAAYD,KAAG,IAACA,IAChBvC,IAAOhF,GAAPgF,SACAyC,KAAUzH,GAAVyH,YASMtC,KAAQC,GAAAA,GACRsC,KAAkBvC,GAAMjF,KAAKkH,OAAO/F,MAEpCsG,SAAcnC,aAAAA,SAAQ,WAAA;AAAA,WAAMlC,EAAaC,IAAQpD,EAAAA;EAAM,GAAE,CAACoD,IAAQpD,EAAAA,CAAAA,GAExEyH,KAA2C7H,EAAsB,EAC7DG,MAAAA,IACAC,OAAAA,IACAC,eAAAA,GACAC,YAAAA,IACAC,UAAAA,IACAC,aAAAA,IACAC,cAAAA,IACAC,gBAAAA,GAAAA,CAAAA,GARIgC,IAAKmF,GAALnF,OAAOd,KAASiG,GAATjG,WAAWG,KAAY8F,GAAZ9F,cAWtB+F,KAAa;AACjB,MAAA,WAAIT,IAAsB;AACtB,QAGInC,IAHA6C,KAAU,GACVC,KAAU,GACVC,KAAiB;AAGR,YAAT9H,MACA8H,KAAAA,KACAF,KAAUN,IACa,YAAnBF,MACArC,KAAa,SACb8C,KAAUhF,KACgB,aAAnBuE,MACPrC,KAAa,UACb8C,KAAUhF,IAAS,KACO,UAAnBuE,OACPrC,KAAa,WAGjB8C,KAAUP,IACa,YAAnBF,KACArC,KAAa,UACa,aAAnBqC,MACPrC,KAAa,UACb6C,KAAU/E,IAAS,KACO,UAAnBuE,OACPrC,KAAa,OACb6C,KAAU/E,KAIlB8E,SACIhC,mBAAAA,MAAAoC,mBAAAA,UAAA,EAAAhC,UAAAA,CACKyB,GAAgBvB,eAAe,SAC5BD,mBAAAA,KAAA,QAAA,EACIF,WAAAA,eAAwB8B,KAAO,OAAKC,KAAO,cAAYC,KAAkB,KACzE/C,YAAYA,IACZQ,OAAKvC,EAAA,EACDkD,kBAAkB,UAAA,GACfsB,EAAAA,GAEPpB,aAA4C,IAA/BoB,GAAgBvB,cAC7BI,QAAQmB,GAAgBlB,cACxBC,gBAAe,SAAOR,UAErBmB,GAAAA,CAAAA,OAGTlB,mBAAAA,KAAA,QAAA,EACIF,WAAAA,eAAwB8B,KAAO,OAAKC,KAAO,cAAYC,KAAkB,KACzE/C,YAAYA,IACZQ,OAAKvC,EAAA,EACDkD,kBAAkB,UAAA,GACfsB,EAAAA,GACLzB,UAEDmB,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA;EAIjB;AAEA,MAAAc,KAA0CC,GAAAA,GAAlCC,KAAOF,GAAPE,SAAiBC,KAAYH,GAApBI,QAEXpD,KAAgBqD,UAAU,EAC5BvC,WAAwB9D,eAAAA,IAAKC,MAAAA,KAAI,KACjCqG,QAAiB,QAATtI,KAAe6C,IAAS,GAChC0F,QAAiB,QAATvI,KAAe,IAAI6C,GAC3BuF,QAAQD,IACRK,WAAAA,CAAYN,GAAAA,CAAAA,GAGVO,SAAmBC,aAAAA,aACrB,SAACC,IAAAA;AACG,WAAO,EACHnD,SAAS,GACTM,WAAS,eAAe6C,GAAK3G,IAAAA,MAAK2G,GAAK1G,IAAI,KAC3CkE,eAAa,eAAewC,GAAKvH,QAAAA,MAASuH,GAAKtH,QAAK,cAAYf,KAAY,IAAA;EAEpF,GACA,CAACA,EAAAA,CAAAA,GAECsI,SAAuBF,aAAAA,aACzB,SAACC,IAAAA;AAAuB,WAAM,EAC1BnD,SAAS,GACTM,WAAS,eAAe6C,GAAK3G,IAAAA,MAAK2G,GAAK1G,IAAI,KAC3CkE,eAAa,eAAewC,GAAKvH,QAAAA,MAASuH,GAAKtH,QAAK,cAAYf,KAAY,IAAA;EAC/E,GACD,CAACA,EAAAA,CAAAA,GAGCuI,KAAaC,cAGjBvG,GAAO,EACLwG,MAAM,SAAAJ,IAAAA;AAAI,WAAIA,GAAK1F;EAAG,GACtB+F,SAASP,IACTQ,MAAML,IACNM,OAAOT,IACPU,QAAQV,IACRW,OAAO,EACH5D,SAAS,EAAA,GAEb4C,QAAQD,IACRK,WAAAA,CAAYN,GAAAA,CAAAA;AAGhB,aACIvC,mBAAAA,MAACC,SAASC,GAAC,EAACC,WAAWd,GAAcc,WAAW,eAAayB,IAAWxB,UAAA,CACnE8C,GAAW,SAACQ,IAAiBV,IAAMW,IAAQC,IAAAA;AACxC,WAAaC,iBAAcxC,IAAUhE,EAAA,EACjCuG,WAAAA,IACAlG,QAAQoE,IACRgC,QAAQnJ,IACRsB,cAAAA,IACAmD,YAAYtD,IACZlB,gBAAgBA,IAChByE,eAAeqE,GAAAA,GACZV,IACC7D,IAAU,EAAEA,SAAAA,EAAAA,IAAY,CAAA,CAAA,CAAA;EAEpC,CAAA,OACAkB,mBAAAA,KAACJ,SAAS5E,MAAI,EACVuE,OAAON,GAAMjF,KAAK0J,OAAO1I,MACzBoD,IAAI,GACJC,IAAIW,GAAcsD,QAClBhE,IAAI,GACJC,IAAIS,GAAcuD,OAAAA,CAAAA,GAErBZ,EAAAA,EAAAA,CAAAA;AAGb;AFlLA,IEoLagC,SAAOhF,aAAAA,MAAK8B,CAAAA;AFpLzB,IGPamD,KAAY,CAAC,OAAO,SAAS,UAAU,MAAA;AHOpD,IIDaC,QAAOlF,aAAAA,MAChB,SAAA7E,IAAAA;AAkBM,MAjBFgK,KAAMhK,GAANgK,QACAC,KAAMjK,GAANiK,QACAnG,KAAK9D,GAAL8D,OACAC,KAAM/D,GAAN+D,QAeMmG,KAAO,EAAE9H,KAdZpC,GAAHoC,KAcoBI,OAbfxC,GAALwC,OAa2BH,QAZrBrC,GAANqC,QAYmCE,MAX/BvC,GAAJuC,KAAAA;AAaA,aACI2D,mBAAAA,KAAA+B,mBAAAA,UAAA,EAAAhC,UACK6D,GAAUpH,IAAI,SAAA1B,IAAAA;AACX,QAAMd,KAAOgK,GAAKlJ,EAAAA;AAIlB,QAAA,CAAKd;AAAM,aAAO;AAElB,QAAMiK,IAAuB,UAAbnJ,MAAmC,aAAbA;AAItC,eACIkF,mBAAAA,KAAC2D,IAAI3G,EAAAA,CAAAA,GAEGhD,IAAI,EACRA,MAAMiK,IAAU,MAAM,KACtBjI,GAAgB,YAAblB,KAAuB8C,KAAQ,GAClC3B,GAAgB,aAAbnB,KAAwB+C,KAAS,GACpC5D,OAAOgK,IAAUH,KAASC,IAC1BlH,QAAQoH,IAAUrG,KAAQC,IAC1B3D,eAXS,UAAbY,MAAmC,WAAbA,KAAsB,WAAW,SAYnDP,gBAAgBP,GAAKO,eAAAA,CAAAA,GARhBO,EAAAA;EAAAA,CAAAA,EAAAA,CAAAA;AAc7B,CAAA;AJlDJ,IKHaoJ,SAAWvF,aAAAA,MACpB,SAAA7E,IAAAA;AAUM,MATFkF,KAAalF,GAAbkF,eAUMC,KAAQC,GAAAA;AAEd,aACIc,mBAAAA,KAACJ,SAAS5E,MAAIgC,EAAA,CAAA,GACNgC,IACCC,GAAMkF,KAAKnJ,IAAAA,CAAAA;AAG5B,CAAA;ALjBJ,IMDaoJ,SAAYzF,aAAAA,MAAK,SAAA7E,IAAAA;AAAkC,MAA/BmE,KAAKnE,GAALmE,OAC7B+D,KAA0CC,GAAAA,GAAlCC,KAAOF,GAAPE,SAAiBC,KAAYH,GAApBI,QAEXS,KAAaC,cACf7E,IACA,EACI8E,MAAM,SAAA/H,IAAAA;AAAI,WAAIA,GAAKiC;EAAG,GACtB+F,SAAS,SAAAhI,IAAAA;AAAI,WAAK,EACdwE,SAAS,GACTpB,IAAIpD,GAAKoD,IACTC,IAAIrD,GAAKqD,IACTC,IAAItD,GAAKsD,IACTC,IAAIvD,GAAKuD,GAAAA;EACX,GACF0E,MAAM,SAAAjI,IAAAA;AAAI,WAAK,EACXwE,SAAS,GACTpB,IAAIpD,GAAKoD,IACTC,IAAIrD,GAAKqD,IACTC,IAAItD,GAAKsD,IACTC,IAAIvD,GAAKuD,GAAAA;EACX,GACF2E,OAAO,SAAAlI,IAAAA;AAAI,WAAK,EACZwE,SAAS,GACTpB,IAAIpD,GAAKoD,IACTC,IAAIrD,GAAKqD,IACTC,IAAItD,GAAKsD,IACTC,IAAIvD,GAAKuD,GAAAA;EACX,GACF4E,QAAQ,SAAAnI,IAAAA;AAAI,WAAK,EACbwE,SAAS,GACTpB,IAAIpD,GAAKoD,IACTC,IAAIrD,GAAKqD,IACTC,IAAItD,GAAKsD,IACTC,IAAIvD,GAAKuD,GAAAA;EACX,GACF6E,OAAO,EACH5D,SAAS,EAAA,GAEb4C,QAAQD,IACRK,WAAAA,CAAYN,GAAAA,CAAAA;AAIpB,aACIlC,mBAAAA,KAAA,KAAA,EAAAD,UACK8C,GAAW,SAAC7D,IAAehE,IAAAA;AAAI,eAC5BqJ,aAAAA,eAACH,IAAQlH,EAAAA,CAAAA,GAAKhC,IAAI,EAAEiC,KAAKjC,GAAKiC,KAAK+B,eAAeA,GAAAA,CAAAA,CAAAA;EAAAA,CAAAA,EAAAA,CAAAA;AAIlE,CAAA;ANjDA,IOFasF,QAAO3F,aAAAA,MAChB,SAAA7E,IAAAA;AAcM,MAbF8D,KAAK9D,GAAL8D,OACAC,KAAM/D,GAAN+D,QACAiG,KAAMhK,GAANgK,QACAC,KAAMjK,GAANiK,QACAQ,KAAOzK,GAAPyK,SACAC,IAAO1K,GAAP0K,SASMC,QAASnF,aAAAA,SAAQ,WAAA;AACnB,WAAA,CAAA,CAAKwE,MAEEpG,EAAiB,EACpBE,OAAAA,IACAC,QAAAA,IACA5D,OAAO6J,IACP9J,MAAM,KACNU,QAAQ6J,GAAAA,CAAAA;EAEf,GAAE,CAACT,IAAQS,IAAS3G,IAAOC,EAAAA,CAAAA,GAEtB6G,QAASpF,aAAAA,SAAQ,WAAA;AACnB,WAAA,CAAA,CAAKyE,MAEErG,EAAiB,EACpBE,OAAAA,IACAC,QAAAA,IACA5D,OAAO8J,IACP/J,MAAM,KACNU,QAAQ8J,EAAAA,CAAAA;EAEf,GAAE,CAAC3G,IAAQD,IAAOmG,IAAQS,CAAAA,CAAAA;AAE3B,aACI7E,mBAAAA,MAAAoC,mBAAAA,UAAA,EAAAhC,UACK0E,CAAAA,SAAUzE,mBAAAA,KAACoE,IAAS,EAACnG,OAAOwG,EAAAA,CAAAA,GAC5BC,SAAU1E,mBAAAA,KAACoE,IAAS,EAACnG,OAAOyG,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAGzC,CAAA;AP5CJ,IQDaC,KAAqB,SAC9BC,IAA6B9K,IAAAA;AAqC5B,MAAA+K,IAnCG7K,KAAIF,GAAJE,MACAC,KAAKH,GAALG,OAAKyG,KAAA5G,GACLkC,GAAAA,KAAAA,WAAC0E,KAAG,IAACA,IAAAC,IAAA7G,GACLmC,GAAAA,IAAAA,WAAC0E,IAAG,IAACA,GACL9D,IAAM/C,GAAN+C,QAEA3C,IAAaJ,GAAbI,eACAC,IAAUL,GAAVK,YAAUyG,KAAA9G,GACVM,UAAAA,KAAAA,WAAQwG,KAAG,IAACA,IAAAC,IAAA/G,GACZO,aAAAA,IAAAA,WAAWwG,IAAG,IAACA,GAAAC,KAAAhH,GACfQ,cAAAA,KAAAA,WAAYwG,KAAG,IAACA,IACRlC,KAAO9E,GAAfuD,QAEA6D,KAAMpH,GAANoH,QAAMC,KAAArH,GACNsH,gBAAAA,KAAAA,WAAcD,KAAG,QAAKA,IAAAE,KAAAvH,GACtBwH,cAAAA,KAAAA,WAAYD,KAAG,IAACA,IAEhBpC,KAAKnF,GAALmF,OAmBJyC,KAA2C7H,EAAsB,EAC7DG,MAAAA,IACAC,OAAAA,IACAC,eAAAA,GACAC,YAAAA,GACAC,UAAAA,IACAC,aAAAA,GACAC,cAAAA,IACAG,QAAQ,SAAA,CAAA,GARJ8B,KAAKmF,GAALnF,OAAOd,KAASiG,GAATjG,WAAWG,KAAY8F,GAAZ9F;AAW1BgJ,EAAAA,GAAIE,KAAAA,GACJF,GAAI7K,UAAUiC,IAAGC,CAAAA,GAEjB2I,GAAInJ,YAAYA,IAChBmJ,GAAIhJ,eAAeA;AAEnB,MAAMwD,KAAYH,GAAMjF,KAAKuC,MAAMpB;AACnCyJ,EAAAA,GAAIG,QAAU3F,GAAU4F,aAAgB5F,GAAU4F,aAAgB,MAAA,MAAK5F,GAAU6F,WAC7E7F,QAAAA,GAAU8F,aAGyBL,SAAnCA,KAAC5F,GAAMjF,KAAK0J,OAAO1I,KAAKoF,eAAWyE,KAAI,KAAK,MAC5CD,GAAIO,YAAYC,OAAOnG,GAAMjF,KAAK0J,OAAO1I,KAAKoF,WAAAA,GAC9CwE,GAAIS,UAAU,UAEVpG,GAAMjF,KAAK0J,OAAO1I,KAAKqF,WACvBuE,GAAIU,cAAcrG,GAAMjF,KAAK0J,OAAO1I,KAAKqF,SAG7CuE,GAAIW,UAAAA,GACJX,GAAIY,OAAO,GAAG,CAAA,GACdZ,GAAIa,OAAgB,QAATzL,KAAe6C,IAAS,GAAY,QAAT7C,KAAe,IAAI6C,CAAAA,GACzD+H,GAAIvE,OAAAA;AAGR,MAAMhD,KAA4B,cAAA,OAAZuB,KAAyBA,KAAU,SAACnC,IAAAA;AAAc,WAAA,KAAQA;EAAAA;AAsChF,MApCAF,GAAMmJ,QAAQ,SAAA/C,IAAAA;AAAQ,QAAAgD;AAAAA,KACoBA,SAAlCA,KAAC1G,GAAMjF,KAAKuC,MAAMvB,KAAKoF,eAAWuF,KAAI,KAAK,MAC3Cf,GAAIO,YAAYC,OAAOnG,GAAMjF,KAAKuC,MAAMvB,KAAKoF,WAAAA,GAC7CwE,GAAIS,UAAU,UAEVpG,GAAMjF,KAAKuC,MAAMvB,KAAKqF,WACtBuE,GAAIU,cAAcrG,GAAMjF,KAAKuC,MAAMvB,KAAKqF,SAG5CuE,GAAIW,UAAAA,GACJX,GAAIY,OAAO7C,GAAK3G,GAAG2G,GAAK1G,CAAAA,GACxB2I,GAAIa,OAAO9C,GAAK3G,IAAI2G,GAAK1H,OAAO0H,GAAK1G,IAAI0G,GAAKzH,KAAAA,GAC9C0J,GAAIvE,OAAAA;AAGR,QAAM5D,KAAQY,GAAOsF,GAAKlG,KAAAA;AAE1BmI,IAAAA,GAAIE,KAAAA,GACJF,GAAI7K,UAAU4I,GAAK3G,IAAI2G,GAAKvH,OAAOuH,GAAK1G,IAAI0G,GAAKtH,KAAAA,GACjDuJ,GAAInB,OAAOmC,GAAiBtL,EAAAA,CAAAA,GAExB8E,GAAUa,eAAe,MACzB2E,GAAIU,cAAclG,GAAUkB,cAC5BsE,GAAIO,YAAqC,IAAzB/F,GAAUa,cAC1B2E,GAAIiB,WAAW,SACfjB,GAAIkB,WAAcrJ,KAAAA,IAAS,GAAG,CAAA,IAG9BwC,GAAMjF,KAAKuC,MAAMpB,KAAK4K,SACtBnB,GAAIoB,YAAY5G,GAAU2G,OAG9BnB,GAAIqB,SAAYxJ,KAAAA,IAAS,GAAG,CAAA,GAC5BmI,GAAIsB,QAAAA;EACR,CAAA,GAAA,WAEIhF,IAAsB;AACtB,QAAIU,KAAU,GACVC,KAAU,GACVC,KAAiB,GACjBrG,KAA6B;AAEpB,YAATzB,MACA8H,KAAAA,KACAF,KAAUN,IACa,YAAnBF,MACA3F,KAAY,SACZoG,KAAUhF,KACgB,aAAnBuE,MACP3F,KAAY,UACZoG,KAAUhF,IAAS,KACO,UAAnBuE,OACP3F,KAAY,WAGhBoG,KAAUP,IACa,YAAnBF,KACA3F,KAAY,UACc,aAAnB2F,MACP3F,KAAY,UACZmG,KAAU/E,IAAS,KACO,UAAnBuE,OACP3F,KAAY,OACZmG,KAAU/E,KAIlB+H,GAAI7K,UAAU6H,IAASC,EAAAA,GACvB+C,GAAInB,OAAOmC,GAAiB9D,EAAAA,CAAAA,GAC5B8C,GAAIG,QACA9F,GAAMjF,KAAKkH,OAAO/F,KAAK6J,aAAgB/F,GAAMjF,KAAKkH,OAAO/F,KAAK6J,aAAgB,MAAA,MAC/E/F,GAAMjF,KAAKkH,OAAO/F,KAAK8J,WAAchG,QAAAA,GAAMjF,KAAKkH,OAAO/F,KAAK+J,YAE3DjG,GAAMjF,KAAKkH,OAAO/F,KAAK4K,SACvBnB,GAAIoB,YAAY/G,GAAMjF,KAAKkH,OAAO/F,KAAK4K,OAG3CnB,GAAInJ,YAAYA,IAChBmJ,GAAIhJ,eAAe,UACnBgJ,GAAIqB,SAAS/E,IAAQ,GAAG,CAAA;EAC5B;AAEA0D,EAAAA,GAAIsB,QAAAA;AACR;AR/JA,IQiKaC,IAAqB,SAC9BvB,IAA6BjH,IAAAA;AAwB5B,MAtBGmG,KAAMnG,GAANmG,QACAC,KAAMpG,GAANoG,QACAnG,KAAKD,GAALC,OACAC,KAAMF,GAANE,QAEA3B,KAAGyB,GAAHzB,KACAI,IAAKqB,GAALrB,OACAH,IAAMwB,GAANxB,QACAE,IAAIsB,GAAJtB,MAEA4C,IAAKtB,GAALsB,OAaE+E,IAAO,EAAE9H,KAAAA,IAAKI,OAAAA,GAAOH,QAAAA,GAAQE,MAAAA,EAAAA;AAEnCuH,EAAAA,GAAU8B,QAAQ,SAAA5K,IAAAA;AACd,QAAMd,KAAOgK,EAAKlJ,EAAAA;AAIlB,QAAA,CAAKd;AAAM,aAAO;AAElB,QAAMiK,KAAuB,UAAbnJ,MAAmC,aAAbA,IAChCZ,KAA6B,UAAbY,MAAmC,WAAbA,KAAsB,WAAW,SACvEb,KAAQgK,KAAUH,KAASC,IAC3B1G,IAASD,EAAapD,GAAKqD,QAAQpD,EAAAA;AAEzC0K,IAAAA,GAAmBC,IAAG5H,EAAAA,CAAAA,GACfhD,IAAI,EACPA,MAAMiK,KAAU,MAAM,KACtBjI,GAAgB,YAAblB,KAAuB8C,KAAQ,GAClC3B,GAAgB,aAAbnB,KAAwB+C,KAAS,GACpC5D,OAAAA,IACAoD,QAAAA,GACAR,QAAQoH,KAAUrG,KAAQC,IAC1B3D,eAAAA,IACA+E,OAAAA,EAAAA,CAAAA,CAAAA;EAER,CAAA;AACJ;ARrNA,IQuNamH,IAA0B,SACnCxB,IAA6ByB,IAAAA;AAc5B,MAZGzI,KAAKyI,GAALzI,OACAC,KAAMwI,GAANxI,QACA5D,KAAKoM,GAALpM,OACAD,KAAIqM,GAAJrM,MACAU,KAAM2L,GAAN3L;AASUgD,IAAiB,EAAEE,OAAAA,IAAOC,QAAAA,IAAQ5D,OAAAA,IAAOD,MAAAA,IAAMU,QAAAA,GAAAA,CAAAA,EAEvDgL,QAAQ,SAAA1K,IAAAA;AACV4J,IAAAA,GAAIW,UAAAA,GACJX,GAAIY,OAAOxK,GAAKoD,IAAIpD,GAAKsD,EAAAA,GACzBsG,GAAIa,OAAOzK,GAAKqD,IAAIrD,GAAKuD,EAAAA,GACzBqG,GAAIvE,OAAAA;EACR,CAAA;AACJ;;;;;;;;;;;;;;;;;;;;;ACtPO,IAAMiG,KAAe,EACxBC,SAAS,GACTC,WAAW,KACXC,gBAAgB,GAChBC,SAAAA,KAAS;AAJN,ICWMC,KAAY,SAAQC,IAAAA;AAC7B,MAAMC,KAAAA,OAAkBD;AAExB,aACIE,cAAAA,gBAAeF,EAAAA,KACF,aAAbC,MACa,eAAbA,MACa,aAAbA;AAER;ADpBO,ICsBME,KAAe,SAAQH,IAAAA;AAChC,MAAMC,KAAAA,OAAkBD;AAExB,SAAoB,aAAbC,MAAsC,eAAbA;AACpC;AD1BO,IC4BMG,KAAqB,SAC9BC,IAAAA;AAAqC,SACmC,aAAxBA,GAAeC;AAAiB;AD9B7E,ICgCMC,KAAkB,SAC3BF,IAAAA;AAAqC,SACgC,UAAxBA,GAAeC;AAAc;ADlCvE,ICoCME,KAAmB,SAC5BH,IAAAA;AAAqC,SACiC,WAAxBA,GAAeC;AAAe;ADtCzE,IEmBMG,KAAkB,SAAHC,IAAAA;AAAA,MAMxBC,KAAID,GAAJC,MACAC,KAAWF,GAAXE,aACAC,KAAWH,GAAXG,aACAC,KAAaJ,GAAbI;AAAa,SAObF,GAAYG,OAAO,SAACC,IAA+BC,IAAAA;AAC/C,QAAMC,IAASD,GAAWC,UAAU;AAEpC,WAAA,CAAA,EAAAC,OACOH,QACAI,cAAAA,SAAcT,IAAMM,GAAWI,KAAAA,EAAOC,IAAI,SAAAC,IAAAA;AACzC,UAAMC,KAAWX,GAAYU,EAAAA,GACvBE,KAAaX,GAAcS,EAAAA;AAyBjC,cAvBInB,GAAmBa,EAAAA,KAAeT,GAAiBS,EAAAA,OACnDQ,GAAWC,OAAOD,GAAWC,OAAgB,IAATR,GACpCO,GAAWE,QAAQF,GAAWE,QAAiB,IAATT,GACtCO,GAAWG,SAASH,GAAWG,SAAkB,IAATV,IAoB5CW,GAAA,CAAA,OACOC,YAAAA,SAAKb,IAAY,CAAC,SAAS,QAAA,CAAA,GAC3BO,IACAC,IAAU,EACbC,MAAMT,GAAWS,QAAQD,GAAWC,MACpCH,OAAAA,GAAAA,CAAAA;IAEP,CAAA,CAAA;EAIR,GAAE,CAAA,CAAA;AAAG;AF9EH,IEgFMQ,KAAe,SACxBC,IACAC,IACAC,IACAC,IAAAA;AAEA,MAAMC,KAAQC,KAAKC,MAAMH,KAAUF,IAASC,KAAUF,EAAAA;AAEtD,SAAOO,GAAqBC,GAAiBJ,EAAAA,CAAAA;AACjD;AFzFO,IE2FMK,KAAoB,SAC7BxB,IAAAA;AAEA,MASIyB,IACAC,IATAC,KAMA3B,GANA2B,GACAC,KAKA5B,GALA4B,GACAC,KAIA7B,GAJA6B,OACAC,IAGA9B,GAHA8B,OAAKC,IAGL/B,GAFArB,WAAAA,IAAAA,WAASoD,IAAGtD,GAAaE,YAASoD,GAAAC,IAElChC,GADApB,gBAAAA,IAAAA,WAAcoD,IAAGvD,GAAaG,iBAAcoD;AAMhD,UAAIC,gBAAAA,SAASJ,EAAAA;AACTJ,IAAAA,KAAgBE,KAAIE;OACjB;AAAA,QAAA,WAAIA,GAAMK;AAGb,YAAM,IAAIC,MAAK,2EAAA;AAFfV,IAAAA,KAAgBI,GAAMK;EAG1B;AAEA,UAAID,gBAAAA,SAASH,CAAAA;AACTJ,IAAAA,KAAgBE,KAAIE;OACjB;AAAA,QAAA,WAAIA,EAAMI;AAGb,YAAM,IAAIC,MAAK,2EAAA;AAFfT,IAAAA,KAAgBI,EAAMI;EAG1B;AAEA,MAAIE,IAAYT,IACZU,KAAYT,IAEVT,KAAQL,GAAaa,IAAGC,IAAGH,IAAeC,EAAAA;AAEhD,MAAIvC,GAA0Ba,EAAAA,GAAa;AACvC,QAAMO,KAAW+B,GAAkBC,GAAiBpB,EAAAA,GAAQnB,GAAWS,OAAO,CAAA;AAC9E2B,SAAa7B,GAASoB,GACtBU,MAAa9B,GAASqB;EAC1B;AAEA,MAAIrC,GAAwBS,EAAAA,GAAa;AACrC,QAAMwC,KAASpB,KAAKqB,OAAOtB,KAAQ,MAAM,EAAA,IAAM;AAChC,UAAXqB,OACAH,MAAarC,GAAWW,SAAS,IAEtB,MAAX6B,OACAJ,KAAapC,GAAWU,QAAQ,GAChC2B,MAAarC,GAAWW,SAAS,IAEtB,MAAX6B,OACAJ,KAAapC,GAAWU,QAAQ,IAErB,MAAX8B,OACAJ,KAAapC,GAAWU,QAAQ,GAChC2B,MAAarC,GAAWW,SAAS,IAEtB,MAAX6B,OACAH,MAAarC,GAAWW,SAAS,IAEtB,MAAX6B,OACAJ,KAAapC,GAAWU,QAAQ,GAChC2B,MAAarC,GAAWW,SAAS,IAEtB,MAAX6B,OACAJ,KAAapC,GAAWU,QAAQ,IAErB,MAAX8B,OACAJ,KAAapC,GAAWU,QAAQ,GAChC2B,MAAarC,GAAWW,SAAS;EAEzC;AAEA,MAAI+B,KAAQjB,IAGRkB,KAAYlB;AAUhB,UAPKN,KAAQ,MAAM,MAAM,OACrBuB,MAAS/D,GACTgE,MAAahE,KAEbgE,MAAahE,GAGV,EACHiE,QAAQ,CACJ,CAACR,GAAWC,EAAAA,GACZ,CAACZ,IAAeC,EAAAA,GAChB,CAACiB,IAbSjB,EAAAA,CAAAA,GAedmB,MAAM,CAACH,IAlBGhB,KAAgB9C,CAAAA,GAmB1BuC,OAAOA,KAAQ,GAAA;AAEvB;AF3LO,IGYM2B,KAAiB,SAAHrD,IAAAA;AAAA,MACvBC,KAAID,GAAJC,MACAC,KAAWF,GAAXE,aACAC,KAAWH,GAAXG,aACAC,KAAaJ,GAAbI;AAAa,aAObkD,cAAAA,SACI,WAAA;AAAA,WACIvD,GAAuB,EACnBE,MAAAA,IACAC,aAAAA,IACAC,aAAAA,IACAC,eAAAA,GAAAA,CAAAA;EAER,GAAA,CAACH,IAAMC,IAAaC,IAAaC,EAAAA,CAAAA;AACpC;AHhCE,IGkCMmD,KAAyB,SAAHC,IAAAA;AAAA,MAC/BtD,KAAWsD,GAAXtD;AAAW,aAIXoD,cAAAA,SACI,WAAA;AAAA,WACIpD,GAAYU,IAAI,SAAAL,IAAAA;AAAU,aAAAY,GAAAA,CAAAA,GACnBZ,IAAU,EACbkD,UAAU1B,GAAiBZ,GAAA,CAAA,GACpBZ,EAAAA,CAAAA,EAAAA,CAAAA;IACL,CAAA;EAAA,GAEV,CAACL,EAAAA,CAAAA;AACJ;AHhDE,IGkDMwD,IAAwB,SAAQnD,IAAAA;AAAkC,aAC3E+C,cAAAA,SAAQ,WAAA;AAAA,WAAMvB,GAAyBxB,EAAAA;EAAAA,GAAa,CAACA,EAAAA,CAAAA;AAAY;AHnD9D,IIMMoD,KAAiB,SAAH3D,IAAAA;AAUrB,MATFa,KAAKb,GAALa,OACAqB,KAAClC,GAADkC,GACAC,KAACnC,GAADmC,GACA7C,KAAIU,GAAJV,MAOMsE,IAAQC,GAAAA,GACdC,IAA0CC,GAAAA,GAAlC3E,IAAO0E,EAAP1E,SAAiB4E,IAAYF,EAApBG,QAEXC,KAAgBC,UAAU,EAC5BjC,GAAAA,IACAC,GAAAA,IACA8B,QAAQD,GACRI,WAAAA,CAAYhF,EAAAA,CAAAA;AAGhB,SAAoB,cAAA,OAATE,SACA+E,cAAAA,eAAc/E,IAAM,EAAE4C,GAAAA,IAAGC,GAAAA,IAAGtB,OAAAA,GAAAA,CAAAA,QAInCyD,oBAAAA,MAAAC,oBAAAA,UAAA,EAAAC,UACKZ,CAAAA,EAAM1D,YAAYkD,KAAKqB,eAAe,SACnCC,oBAAAA,KAACC,SAASvB,MAAI,EACVlB,GAAGgC,GAAchC,GACjBC,GAAG+B,GAAc/B,GACjByC,OAAKzD,GAAA,CAAA,GACEyC,EAAM1D,YAAYkD,MAAI,EACzByB,gBAAgB,SAChBC,aAAmD,IAAtClB,EAAM1D,YAAYkD,KAAKqB,cACpCM,QAAQnB,EAAM1D,YAAYkD,KAAK4B,aAAAA,CAAAA,GACjCR,UAEDlF,GAAAA,CAAAA,OAGToF,oBAAAA,KAACC,SAASvB,MAAI,EACVlB,GAAGgC,GAAchC,GACjBC,GAAG+B,GAAc/B,GACjByC,WAAOxD,YAAAA,SAAKwC,EAAM1D,YAAYkD,MAAM,CAAC,gBAAgB,cAAA,CAAA,GAAiBoB,UAErElF,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAIjB;AJxDO,IKIM2F,IAAiB,SAAHjF,IAAAA;AAMrB,MALFmD,KAAMnD,GAANmD,QAAM+B,KAAAlF,GACNmF,WAAAA,KAAAA,WAASD,MAAQA,IAKXtB,KAAQC,GAAAA,GAERuB,SAAO9B,cAAAA,SAAQ,WAAA;AACjB,QAAO+B,KAA8BlC,GAAM,CAAA;AAE3C,WAFqCA,GAAMmC,MAAA,CAAA,EAExBjF,OACf,SAACC,IAAGkD,IAAAA;AAAO,aAASlD,KAAG,OAAfkD,GAAA,CAAA,IAAqB,MAAlBA,GAAA,CAAA;IAAA,GAAyB,MAChC6B,GAAW,CAAA,IAAA,MAAMA,GAAW,CAAA,CAAA;EAExC,GAAG,CAAClC,EAAAA,CAAAA,GAEEoC,IAAeC,GAAgBJ,EAAAA;AAErC,MAAID,MAAavB,GAAM1D,YAAYuF,KAAKhB,gBAAgB;AACpD,WAAO;AAGX,MAAMG,IAAKzD,GAAA,CAAA,GAAQyC,GAAM1D,YAAYuF,IAAAA;AASrC,SARIN,OACAP,EAAMc,gBAAgB,UACtBd,EAAME,cACFlB,GAAM1D,YAAYuF,KAAKX,cAAoD,IAAtClB,GAAM1D,YAAYuF,KAAKhB,cAChEG,EAAMG,SAASnB,GAAM1D,YAAYuF,KAAKT,cACtCJ,EAAMe,UAAU/B,GAAM1D,YAAYuF,KAAKG,qBAGpClB,oBAAAA,KAACC,SAASS,MAAI,EAACS,MAAK,QAAOC,GAAGP,GAAcX,OAAOA,EAAAA,CAAAA;AAC9D;ALtCO,IMGMmB,IAA0B,SAAH/F,IAAAA;AAA+D,MAAzDkC,KAAClC,GAADkC,GAAGC,KAACnC,GAADmC,GAAGnB,KAAIhB,GAAJgB,MACtC4C,KAAQC,GAAAA,GACdC,KAA0CC,GAAAA,GAAlC3E,KAAO0E,GAAP1E,SAAiB4E,IAAYF,GAApBG,QAEXC,IAAgBC,UAAU,EAC5BjC,GAAAA,IACAC,GAAAA,IACA6D,QAAQhF,KAAO,GACfiD,QAAQD,GACRI,WAAAA,CAAYhF,GAAAA,CAAAA;AAGhB,aACIkF,oBAAAA,MAAAC,oBAAAA,UAAA,EAAAC,UACKZ,CAAAA,GAAM1D,YAAY+F,QAAQxB,eAAe,SACtCC,oBAAAA,KAACC,SAASuB,QAAM,EACZC,IAAIjC,EAAchC,GAClBkE,IAAIlC,EAAc/B,GAClBkE,GAAGnC,EAAc8B,QACjBpB,OAAKzD,GAAA,CAAA,GACEyC,GAAM1D,YAAY+F,SAAO,EAC5BJ,MAAM,QACNf,aACIlB,GAAM1D,YAAY+F,QAAQnB,cACe,IAAzClB,GAAM1D,YAAY+F,QAAQxB,cAC9BM,QAAQnB,GAAM1D,YAAY+F,QAAQjB,cAClCW,SAAS/B,GAAM1D,YAAY+F,QAAQL,eAAAA,CAAAA,EAAAA,CAAAA,OAI/ClB,oBAAAA,KAACC,SAASuB,QAAM,EACZC,IAAIjC,EAAchC,GAClBkE,IAAIlC,EAAc/B,GAClBkE,GAAGnC,EAAc8B,QACjBpB,OAAOhB,GAAM1D,YAAY+F,QAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAIzC;ANzCO,IOIMK,IAAuB,SAAHtG,IAAAA;AAQ3B,MAPFkC,KAAClC,GAADkC,GACAC,KAACnC,GAADmC,GAACoE,KAAAvG,GACDgB,MAAAA,KAAAA,WAAIuF,KAAGvH,GAAaC,UAAOsH,IAMrB3C,KAAQC,GAAAA,GACdC,KAA0CC,GAAAA,GAAlC3E,IAAO0E,GAAP1E,SAAiB4E,IAAYF,GAApBG,QAEXC,IAAgBC,UAAU,EAC5BjC,GAAAA,IACAC,GAAAA,IACA6D,QAAQhF,KAAO,GACfiD,QAAQD,GACRI,WAAAA,CAAYhF,EAAAA,CAAAA;AAGhB,aACIkF,oBAAAA,MAAAC,oBAAAA,UAAA,EAAAC,UACKZ,CAAAA,GAAM1D,YAAY+F,QAAQxB,eAAe,SACtCC,oBAAAA,KAACC,SAASuB,QAAM,EACZC,IAAIjC,EAAchC,GAClBkE,IAAIlC,EAAc/B,GAClBkE,GAAGnC,EAAc8B,QACjBpB,OAAKzD,GAAA,CAAA,GACEyC,GAAM1D,YAAY+F,SAAO,EAC5BJ,MAAM,QACNf,aAAsD,IAAzClB,GAAM1D,YAAY+F,QAAQxB,cACvCM,QAAQnB,GAAM1D,YAAY+F,QAAQjB,cAClCW,SAAS/B,GAAM1D,YAAY+F,QAAQL,eAAAA,CAAAA,EAAAA,CAAAA,OAI/ClB,oBAAAA,KAACC,SAASuB,QAAM,EACZC,IAAIjC,EAAchC,GAClBkE,IAAIlC,EAAc/B,GAClBkE,GAAGnC,EAAc8B,QACjBpB,OAAOhB,GAAM1D,YAAYsG,OAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAIzC;APhDO,IQGMC,KAAwB,SAAHzG,IAAAA;AAY5B,MAXFkC,KAAClC,GAADkC,GACAC,KAACnC,GAADmC,GACAlB,KAAKjB,GAALiB,OACAC,KAAMlB,GAANkB,QAAMwF,KAAA1G,GACN2G,cAAAA,KAAAA,WAAYD,KAAG,IAACA,IAQV9C,IAAQC,GAAAA,GACdC,IAA0CC,GAAAA,GAAlC3E,IAAO0E,EAAP1E,SAAiB4E,IAAYF,EAApBG,QAEXC,KAAgBC,UAAU,EAC5BjC,GAAGA,KAAIjB,KAAQ,GACfkB,GAAGA,KAAIjB,KAAS,GAChBD,OAAAA,IACAC,QAAAA,IACA+C,QAAQD,GACRI,WAAAA,CAAYhF,EAAAA,CAAAA;AAGhB,aACIkF,oBAAAA,MAAAC,oBAAAA,UAAA,EAAAC,UACKZ,CAAAA,EAAM1D,YAAY+F,QAAQxB,eAAe,SACtCC,oBAAAA,KAACC,SAASiC,MAAI,EACV1E,GAAGgC,GAAchC,GACjBC,GAAG+B,GAAc/B,GACjB0E,IAAIF,IACJG,IAAIH,IACJ1F,OAAOiD,GAAcjD,OACrBC,QAAQgD,GAAchD,QACtB0D,OAAKzD,GAAA,CAAA,GACEyC,EAAM1D,YAAY+F,SAAO,EAC5BJ,MAAM,QACNf,aACIlB,EAAM1D,YAAY+F,QAAQnB,cACe,IAAzClB,EAAM1D,YAAY+F,QAAQxB,cAC9BM,QAAQnB,EAAM1D,YAAY+F,QAAQjB,cAClCW,SAAS/B,EAAM1D,YAAY+F,QAAQL,eAAAA,CAAAA,EAAAA,CAAAA,OAI/ClB,oBAAAA,KAACC,SAASiC,MAAI,EACV1E,GAAGgC,GAAchC,GACjBC,GAAG+B,GAAc/B,GACjB0E,IAAIF,IACJG,IAAIH,IACJ1F,OAAOiD,GAAcjD,OACrBC,QAAQgD,GAAchD,QACtB0D,OAAOhB,EAAM1D,YAAY+F,QAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAIzC;AR5DO,ISSMc,IAAa,SAASxG,IAAAA;AAC/B,MAAQM,KAAsBN,GAAtBM,OAAOqB,KAAe3B,GAAf2B,GAAGC,KAAY5B,GAAZ4B,GAAG7C,KAASiB,GAATjB,MACfmE,KAAWC,EAAsBnD,EAAAA;AAEvC,MAAA,CAAKlB,GAAUC,EAAAA;AACX,UAAM,IAAIoD,MAAM,sCAAA;AAGpB,aACI4B,oBAAAA,MAAAC,oBAAAA,UAAA,EAAAC,UAAA,KACIE,oBAAAA,KAACO,GAAc,EAAC9B,QAAQM,GAASN,QAAQgC,WAAAA,KAAW,CAAA,GACnDzF,GAAmBa,EAAAA,SAChBmE,oBAAAA,KAACqB,GAAuB,EAAC7D,GAAGA,IAAGC,GAAGA,IAAGnB,MAAMT,GAAWS,KAAAA,CAAAA,GAEzDnB,GAAgBU,EAAAA,SACbmE,oBAAAA,KAAC4B,GAAoB,EAACpE,GAAGA,IAAGC,GAAGA,IAAGnB,MAAMT,GAAWS,KAAAA,CAAAA,GAEtDlB,GAAiBS,EAAAA,SACdmE,oBAAAA,KAAC+B,IAAqB,EAClBvE,GAAGA,IACHC,GAAGA,IACHlB,OAAOV,GAAWU,OAClBC,QAAQX,GAAWW,QACnByF,cAAcpG,GAAWoG,aAAAA,CAAAA,OAGjCjC,oBAAAA,KAACO,GAAc,EAAC9B,QAAQM,GAASN,OAAAA,CAAAA,OACjCuB,oBAAAA,KAACf,IAAc,EAAC9C,OAAOA,IAAOqB,GAAGuB,GAASL,KAAK,CAAA,GAAIjB,GAAGsB,GAASL,KAAK,CAAA,GAAI9D,MAAMA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAG1F;ATvCO,IUID0H,IAAa,SAACC,IAA+B9D,IAAAA;AAC/CA,EAAAA,GAAO+D,QAAQ,SAAAlH,IAASmH,IAAAA;AAAU,QAAjBjF,KAAClC,GAAA,CAAA,GAAEmC,KAACnC,GAAA,CAAA;AACH,UAAVmH,KACAF,GAAIG,OAAOlF,IAAGC,EAAAA,IAEd8E,GAAII,OAAOnF,IAAGC,EAAAA;EAEtB,CAAA;AACJ;AVZO,IUcMmF,KAA4B,SACrCL,IAA6BzD,IAAAA;AAQ5B,MANGtD,KAAWsD,GAAXtD,aACA0D,KAAKJ,GAALI;AAMuB,QAAvB1D,GAAYqH,WAEhBN,GAAIO,KAAAA,GACJtH,GAAYgH,QAAQ,SAAA3G,IAAAA;AAChB,QAAA,CAAKd,GAAac,GAAWjB,IAAAA;AACzB,YAAM,IAAIoD,MAAM,2CAAA;AAGhBkB,IAAAA,GAAM1D,YAAYuF,KAAKhB,eAAe,MACtCwC,GAAIQ,UAAU,UACdR,GAAIS,cAAc9D,GAAM1D,YAAYuF,KAAKT,cACzCiC,GAAIU,YACA/D,GAAM1D,YAAYuF,KAAKX,cAAoD,IAAtClB,GAAM1D,YAAYuF,KAAKhB,cAChEwC,GAAIW,UAAAA,GACJZ,EAAWC,IAAK1G,GAAWkD,SAASN,MAAAA,GACpC8D,GAAIlC,OAAAA,GACJkC,GAAIQ,UAAU,SAGd/H,GAAmBa,EAAAA,KAAeqD,GAAM1D,YAAY+F,QAAQxB,eAAe,MAC3EwC,GAAIS,cAAc9D,GAAM1D,YAAY+F,QAAQjB,cAC5CiC,GAAIU,YACA/D,GAAM1D,YAAY+F,QAAQnB,cAAuD,IAAzClB,GAAM1D,YAAY+F,QAAQxB,cACtEwC,GAAIW,UAAAA,GACJX,GAAIY,IAAItH,GAAW2B,GAAG3B,GAAW4B,GAAG5B,GAAWS,OAAO,GAAG,GAAG,IAAIW,KAAKmG,EAAAA,GACrEb,GAAIlC,OAAAA,IAGJlF,GAAgBU,EAAAA,KAAeqD,GAAM1D,YAAYsG,OAAO/B,eAAe,MACvEwC,GAAIS,cAAc9D,GAAM1D,YAAYsG,OAAOxB,cAC3CiC,GAAIU,YAAoD,IAAxC/D,GAAM1D,YAAYsG,OAAO/B,cACzCwC,GAAIW,UAAAA,GACJX,GAAIY,IAAItH,GAAW2B,GAAG3B,GAAW4B,GAAG5B,GAAWS,OAAO,GAAG,GAAG,IAAIW,KAAKmG,EAAAA,GACrEb,GAAIlC,OAAAA,IAGJjF,GAAiBS,EAAAA,KAAeqD,GAAM1D,YAAY+F,QAAQxB,eAAe,MACzEwC,GAAIS,cAAc9D,GAAM1D,YAAY+F,QAAQjB,cAC5CiC,GAAIU,YACA/D,GAAM1D,YAAY+F,QAAQnB,cAAuD,IAAzClB,GAAM1D,YAAY+F,QAAQxB,cACtEwC,GAAIW,UAAAA,GACJX,GAAIL,KACArG,GAAW2B,IAAI3B,GAAWU,QAAQ,GAClCV,GAAW4B,IAAI5B,GAAWW,SAAS,GACnCX,GAAWU,OACXV,GAAWW,MAAAA,GAEf+F,GAAIlC,OAAAA,IAGRkC,GAAIS,cAAc9D,GAAM1D,YAAYuF,KAAKV,QACzCkC,GAAIU,YAAY/D,GAAM1D,YAAYuF,KAAKX,aACvCmC,GAAIW,UAAAA,GACJZ,EAAWC,IAAK1G,GAAWkD,SAASN,MAAAA,GACpC8D,GAAIlC,OAAAA,GAEArF,GAAmBa,EAAAA,MACnB0G,GAAIS,cAAc9D,GAAM1D,YAAY+F,QAAQlB,QAC5CkC,GAAIU,YAAY/D,GAAM1D,YAAY+F,QAAQnB,aAC1CmC,GAAIW,UAAAA,GACJX,GAAIY,IAAItH,GAAW2B,GAAG3B,GAAW4B,GAAG5B,GAAWS,OAAO,GAAG,GAAG,IAAIW,KAAKmG,EAAAA,GACrEb,GAAIlC,OAAAA,IAGJlF,GAAgBU,EAAAA,MAChB0G,GAAIc,YAAYnE,GAAM1D,YAAYsG,OAAOX,MACzCoB,GAAIW,UAAAA,GACJX,GAAIY,IAAItH,GAAW2B,GAAG3B,GAAW4B,GAAG5B,GAAWS,OAAO,GAAG,GAAG,IAAIW,KAAKmG,EAAAA,GACrEb,GAAIpB,KAAAA,IAGJ/F,GAAiBS,EAAAA,MACjB0G,GAAIS,cAAc9D,GAAM1D,YAAY+F,QAAQlB,QAC5CkC,GAAIU,YAAY/D,GAAM1D,YAAY+F,QAAQnB,aAC1CmC,GAAIW,UAAAA,GACJX,GAAIL,KACArG,GAAW2B,IAAI3B,GAAWU,QAAQ,GAClCV,GAAW4B,IAAI5B,GAAWW,SAAS,GACnCX,GAAWU,OACXV,GAAWW,MAAAA,GAEf+F,GAAIlC,OAAAA,IAGuB,cAAA,OAApBxE,GAAWjB,OAClBiB,GAAWjB,KAAK2H,IAAK,EACjBpG,OAAON,GAAWM,OAClBqB,GAAG3B,GAAWkD,SAASL,KAAK,CAAA,GAC5BjB,GAAG5B,GAAWkD,SAASL,KAAK,CAAA,GAC5BQ,OAAAA,GAAAA,CAAAA,KAGJqD,GAAIe,OAAUpE,GAAM1D,YAAYkD,KAAK6E,WAAAA,QAAcrE,GAAM1D,YAAYkD,KAAK8E,YAC1EjB,GAAIkB,YAAY,QAChBlB,GAAImB,eAAe,cAEnBnB,GAAIc,YAAYnE,GAAM1D,YAAYkD,KAAKyC,MACvCoB,GAAIS,cAAc9D,GAAM1D,YAAYkD,KAAK4B,cACzCiC,GAAIU,YAAkD,IAAtC/D,GAAM1D,YAAYkD,KAAKqB,cAEnCb,GAAM1D,YAAYkD,KAAKqB,eAAe,MACtCwC,GAAIoB,WAAW,SACfpB,GAAIqB,WACA/H,GAAWjB,MACXiB,GAAWkD,SAASL,KAAK,CAAA,GACzB7C,GAAWkD,SAASL,KAAK,CAAA,CAAA,GAE7B6D,GAAIoB,WAAW,UAEnBpB,GAAIsB,SAAShI,GAAWjB,MAAMiB,GAAWkD,SAASL,KAAK,CAAA,GAAI7C,GAAWkD,SAASL,KAAK,CAAA,CAAA;EAE5F,CAAA,GACA6D,GAAIuB,QAAAA;AACR;;;;;;;;;;;;;;;;;;;;;;;ACtIO,IAAAC;AAAA,IAAMC,KAAiB,SAAHC,IAAAA;AAAwE,MAAvDC,KAAID,GAAJC,MAAMC,KAAWF,GAAXE,aACxCC,KAAmBC,GAAe,EACpCC,MAAMJ,IACNC,aAAAA,IACAI,aAAa,SAAAC,IAAAA;AAAG,WAAK,EACjBC,GAAGD,GAAIC,IAAID,GAAIE,QAAQ,GACvBC,GAAGH,GAAIG,IAAIH,GAAII,SAAS,EAAA;EAC1B,GACFC,eAAe,SAAAC,IAAAA;AAAA,QAAGF,KAAME,GAANF,QAAQF,KAAKI,GAALJ;AAAK,WAAQ,EACnCA,OAAAA,IACAE,QAAAA,IACAG,MAAMC,KAAKC,IAAIP,IAAOE,EAAAA,EAAAA;EACzB,EAAA,CAAA;AAGL,aACIM,oBAAAA,KAAAC,oBAAAA,UAAA,EAAAC,UACKhB,GAAiBiB,IAAI,SAACC,IAAYC,IAAAA;AAAC,eAChCL,oBAAAA,KAACM,GAAUC,GAAaH,CAAAA,GAAAA,EAAAA,GAAPC,EAAAA;EAAAA,CAAAA,EAAAA,CAAAA;AAIjC;AAtBO,ICOMG,KAAa,SAAHzB,IAAAA;AAAA,MAAMS,KAAKT,GAALS,OAAOE,KAAMX,GAANW,QAAQe,KAAO1B,GAAP0B,SAASC,KAAW3B,GAAX2B;AAAW,aAC5DV,oBAAAA,KAAAC,oBAAAA,UAAA,EAAAC,UACKO,GAAQN,IAAI,SAAAP,IAAiBS,IAAAA;AAAC,QAAAM,GAAhBC,KAAMhB,GAAA,CAAA,GAAER,KAAIQ,GAAA,CAAA;AAAA,eACvBI,oBAAAA,KAACa,GAAYN,GAAAA,CAAAA,GAELK,IAAM,EACVE,gBAAgBtB,IAChBuB,iBAAiBrB,IACjBN,MAAiB,SAAbuB,IAAEC,GAAOxB,QAAIuB,IAAIvB,IACrBsB,aACIE,GAAOF,eAAmC,WAApBE,GAAOI,WAAsBN,KAAAA,OAAcO,CAAAA,GANhEZ,EAAAA;EAAAA,CAAAA,EAAAA,CAAAA;AAUd;ADrBA,ICqBAa,KAAA,CAAA,MAAA;ADrBA,IEGMC,IAAU,SAAHpC,IAAAA;AAgCU,MAAAqC,IAAAC,KAAAtC,GA/B1BO,KAAOF,KAAIiC,GAAJjC,MAASE,IAAGgC,GAAAD,IAAAE,EAAAA,GAAAC,KAAAzC,GAEnB0C,OACIC,KAAWF,GAAXE,aACAC,IAAKH,GAALG,OACAjC,IAAM8B,GAAN9B,QACAkC,IAAUJ,GAAVI,YACAC,IAAYL,GAAZK,cACAC,IAAMN,GAANM,QACAC,IAAMP,GAANO,QACAC,KAASR,GAATQ,WACAxC,KAAKgC,GAALhC,OAGJyC,KAAYlD,GAAZkD,cACAC,IAAWnD,GAAXmD,aAEAC,KAAKpD,GAALoD,OACAC,KAAiBrD,GAAjBqD,mBAEAC,KAAatD,GAAbsD,eACAC,KAAOvD,GAAPuD,SACAC,KAAYxD,GAAZwD,cACAC,KAAYzD,GAAZyD,cAEAC,KAAO1D,GAAP0D,SAEAC,KAAW3D,GAAX2D,aACAC,KAAS5D,GAAT4D,WACAC,KAAc7D,GAAd6D,gBACAC,KAAe9D,GAAf8D,iBAEMC,KAAQC,GAAAA,GACdC,IAA6DC,EAAAA,GAArDC,KAAoBF,EAApBE,sBAAsBC,KAAaH,EAAbG,eAAeC,KAAWJ,EAAXI,aAEvCC,QAAgBC,cAAAA,SAClB,WAAA;AAAA,WAAM,WAAA;AAAA,iBAAMC,cAAAA,eAAcd,IAAOlC,GAAAA,CAAAA,GAAOjB,GAAQF,EAAAA,CAAAA;IAAO;EAAA,GACvD,CAACqD,IAASnD,GAAKF,EAAAA,CAAAA,GAGboE,SAAcC,cAAAA,aAChB,SAACC,IAAAA;AACU,YAAPpB,MAAAA,GAAO/B,GAAA,EAAKoB,OAAOrC,EAAIqC,MAAAA,GAAUvC,EAAAA,GAAQsE,EAAAA;EAC5C,GACD,CAACpE,GAAKF,IAAMkD,EAAAA,CAAAA,GAEVqB,SAAgBF,cAAAA,aAClB,SAACC,IAAAA;AAAiC,WAAKR,GAAqBG,EAAAA,GAAiBK,EAAAA;EAAM,GACnF,CAACR,IAAsBG,CAAAA,CAAAA,GAErBO,SAAmBH,cAAAA,aACrB,SAACC,IAAAA;AAAAA,YACGnB,MAAAA,GAAenD,IAAMsE,EAAAA,GACrBR,GAAqBG,EAAAA,GAAiBK,EAAAA;EACzC,GACD,CAACtE,IAAMmD,IAAcW,IAAsBG,CAAAA,CAAAA,GAEzCQ,SAAmBJ,cAAAA,aACrB,SAACC,IAAAA;AAAAA,YACGlB,MAAAA,GAAepD,IAAMsE,EAAAA,GACrBN,GAAAA;EACH,GACD,CAAChE,IAAMgE,IAAaZ,EAAAA,CAAAA,GAIlBsB,SAAcL,cAAAA,aAAY,WAAA;AAC5BN,IAAAA,GAAcE,EAAAA,GAAiB,CAAC/D,EAAIyE,OAAOzE,EAAIE,QAAQ,GAAGF,EAAI0E,IAAAA,CAAAA;EACjE,GAAE,CAACb,IAAeE,GAAe/D,CAAAA,CAAAA,GAC5B2E,SAAaR,cAAAA,aAAY,WAAA;AAC3BL,IAAAA,GAAAA;EACJ,GAAG,CAACA,EAAAA,CAAAA;AAEJ,aACIc,oBAAAA,MAACC,SAASC,GAAC,EAACpC,WAAWA,IAAU9B,UAC7BF,KAAAA,oBAAAA,KAACmE,SAASE,MAAI,EACV7E,OAAO8E,GAAG9E,IAAO,SAAA+E,IAAAA;AAAK,WAAIzE,KAAKC,IAAIwE,IAAO,CAAA;EAAA,CAAA,GAC1C7E,QAAQ4E,GAAG5E,GAAQ,SAAA6E,IAAAA;AAAK,WAAIzE,KAAKC,IAAIwE,IAAO,CAAA;EAAA,CAAA,GAC5CC,IAAIvC,IACJwC,IAAIxC,IACJyC,MAAe,SAAXtD,KAAEhC,GAAKsF,QAAItD,KAAIO,GACnBgD,aAAazC,GACb0C,QAAQlD,IACRmD,WAAWnC,IACXoC,UAAUpC,KAAc,IAAA,QACxB,cAAYC,KAAYA,GAAUvD,EAAAA,IAAAA,QAClC,mBAAiBwD,KAAiBA,GAAexD,EAAAA,IAAAA,QACjD,oBAAkByD,KAAkBA,GAAgBzD,EAAAA,IAAAA,QACpDmD,cAAcF,KAAgBuB,KAAAA,QAC9BmB,aAAa1C,KAAgBsB,KAAAA,QAC7BnB,cAAcH,KAAgBwB,KAAAA,QAC9BvB,SAASD,KAAgBmB,KAAAA,QACzBwB,SAAS3C,MAAiBK,KAAcoB,KAAAA,QACxCmB,QAAQ5C,MAAiBK,KAAcuB,KAAAA,OAAahD,CAAAA,GAEvDmB,UACGpC,oBAAAA,KAACmE,SAASe,MAAI,EACV3F,GAAGuC,GACHrC,GAAGsC,GACHoD,YAAW,UACXC,kBAAiB,WACjBC,aAAaxD,GACbJ,OAAKlB,GAAA,CAAA,GACEuC,GAAMwC,OAAOJ,MAAI,EACpBK,eAAe,QACfb,MAAM9C,EAAAA,CAAAA,GACR1B,UAEDiC,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAKrB;AFrHO,IEqHP,IAAA,CAAA,SAAA,OAAA;AFrHO,IGAMqD,IAAa,SAAHzG,IAAAA;AAAwE,MAAvD4C,KAAK5C,GAAL4C,OAAOQ,KAAKpD,GAALoD,OAAU/C,KAAIkC,GAAAvC,IAAAwC,CAAAA;AACzD,aAAOvB,oBAAAA,KAACyF,GAAY,EAACC,IAAIvD,IAAOoC,OAAOnF,GAAKuG,gBAAgBC,YAAAA,MAAkBjE,OAAOA,GAAAA,CAAAA;AACzF;AHFO,IIGMkE,KAAe,EACxBC,SAAS,MACTC,MAAM,CAAC,OAAA,GAEPC,WAAW,WACXC,QAAQ,YACRC,SAAAA,OAEAC,UAAU,QACVC,UAAU,QAEVC,YAAY,EAAEC,MAAM,SAAA,GACpBC,YAAY,EAAED,MAAM,QAAQE,OAAAA,KAAO,GAEnCC,SAAS,KACTC,cAAc,GAEdC,YAAY,CAAE,GACdC,UAAU,CAAE,GACZC,aAAAA,OACAC,aAAAA,MAEAC,aAAAA,MACA5E,OAAO,kBACP6E,gBAAgB,GAChBC,iBAAiB,GACjBC,gBAAgB,EAAEC,MAAM,SAASrE,OAAO,mBAAA,GAExCsE,SAAS,MACTC,QAAQ,EAAEC,QAAQ,OAAA,GAElBrF,cAAc,GACdC,aAAa,GACbR,aAAa,EAAEyF,MAAM,QAAA,GAErB9E,eAAAA,MACAI,SAAS+C,GACT+B,cAAc,SAAWC,IAAAA;AAA8B,SAAQA,GAAM9B,KAAQ8B,QAAAA,GAAMC;AAAY,GAE/FhH,SAAS,CAAA,GACTiH,kBAAkB,CAAA,GAClBzI,aAAa,CAAA,GACb0I,SAAS,CAAA,GAETC,cAAAA,OACAC,cAAc,GAAA;AJhDX,IImDMC,KAAevH,GAAAA,CAAAA,GACrBsF,IAAY,EACfkC,QAAQ,CAAC,QAAQ,QAAQ,QAAQ,UAAU,WAAW,WAAW,aAAA,GACjEC,cAAc7G,GAEd8G,MAAM,CAAA,GACNvD,MAAM,CAAA,GAENwD,SAAAA,MACAC,cAAc,WAEdC,MAAM,OACN1F,aAAAA,MAAa,CAAA;AJ/DV,IIkEM2F,KAAkB9H,GAAAA,CAAAA,GACxBsF,IAAY,EACfkC,QAAQ,CAAC,QAAQ,QAAQ,QAAQ,UAAU,WAAW,aAAA,GAEtDO,YAA8B,eAAA,OAAXC,UAAgD,SAA1BC,KAAGD,OAAOE,oBAAgBD,KAAQ,EAAA,CAAA;AJtExE,IKEME,KAAgB,SACzBtJ,IACAuJ,IACAlC,IACAF,IACA1G,IACA+I,GAAAA;AAEA,SACIC,GACItC,IACA,EAAEuC,KAAK1J,GAAKe,IAAIwI,EAAAA,GAAWI,KAAK,GAAGhJ,KAAK,EAAA,GACxCF,IACA+I,CAAAA,EAENnC,QAAQA,EAAAA;AACd;ALlBO,IKuBMuC,KAAgB,SAAW5J,IAA2B2G,IAAAA;AAAuB,SACtF3G,GAAKe,IACD,SAAA8I,IAAAA;AAAI,WAAA1I,GAEOwF,CAAAA,GAAAA,GAAKmD,OAAgC,SAACC,IAAKC,IAAAA;AAE1C,aADAD,GAAIC,EAAAA,IAAO,MACJD;IACX,GAAG,CAAE,CAAA,GACFF,EAAAA;EAAI,CAAA;AAElB;ALjCE,IKmCMI,KAAmB,SAA2CjK,IAAAA;AAAc,SACrFkK,OAAOvD,KAAK3G,EAAAA,EAAM8J,OAAgC,SAACC,IAAKC,IAAAA;AAIpD,WAHIhK,GAAKgK,EAAAA,MACLD,GAAIC,EAAAA,IAAOhK,GAAKgK,EAAAA,IAEbD;EACV,GAAE,CAAE,CAAA;AAAC;ALzCH,IK2CMI,KAAc,SAAIhF,IAAAA;AAAQ,SAAK,CAACA,IAAOiF,OAAOjF,EAAAA,CAAAA;AAAO;AL3C3D,IK2C2D,KAAA,CAAA,UAAA,YAAA,YAAA,WAAA,SAAA,UAAA,WAAA,gBAAA,cAAA,cAAA,WAAA;AL3C3D,IMgBDkF,KAAK,SAAClF,IAAemF,IAAAA;AAAa,SAAKnF,KAAQmF;AAAK;ANhBnD,IMiBDC,KAAK,SAACpF,IAAemF,IAAAA;AAAa,SAAKnF,KAAQmF;AAAK;ANjBnD,IMmBDE,KAAQ,SAACC,IAAeC,IAAAA;AAAW,SACrCC,MAAM5C,KAAK,IAAI6C,OAAOF,KAAMD,EAAAA,GAAQ,SAACI,IAAGC,IAAAA;AAAK,WAAKL,KAAQK;EAAAA,CAAAA;AAAM;ANpB7D,IMsBDC,KAAc,SAAC5F,IAAAA;AAAa,SAAMkF,GAAGlF,IAAO,CAAA,IAAK,IAAIA;AAAK;ANtBzD,IM4BD6F,KAA8B,SAAHrL,IAa7BsL,IACAnE,IACAoE,IAAAA;AAC+B,MAd3BlL,KAAIL,GAAJK,MACAmL,IAAWxL,GAAXwL,aACAC,KAAQzL,GAARyL,UACA7B,KAAQ5J,GAAR4J,UACA8B,IAAe1L,GAAf0L,iBAAeC,IAAA3L,GACf2H,cAAAA,IAAAA,WAAYgE,IAAG,IAACA,GAChB3E,IAAIhH,GAAJgH,MACA4E,IAAM5L,GAAN4L,QACAC,IAAM7L,GAAN6L,QACAC,KAAM9L,GAAN8L,QAMEC,KAAU5E,KAAUyD,KAAKF,IAGzBsB,KAAc3L,GAAKe,IAAIkJ,EAAAA,GAEvBrK,KAAqC,CAAA;AAkC3C,SAjCA+G,EAAKiF,QAAQ,SAAC5B,IAAK/I,IAAAA;AAAC,WAChBuJ,GAAM,GAAGe,EAAOM,OAAAA,EAASC,MAAAA,EAAQF,QAAQ,SAAAd,IAAAA;AAAS,UAAAiB,IANxCC,IAASC,GAOfC,KAA0B/B,GAAYnK,GAAK8K,EAAAA,EAAOd,EAAAA,CAAAA,GAA3CmC,KAAQD,GAAA,CAAA,GAAE/G,KAAK+G,GAAA,CAAA,GAChB7D,KAAakB,GAASvJ,GAAK8K,EAAAA,CAAAA,GAC3B3K,MAAuB,SAAnB4L,KAACR,EAAOlD,EAAAA,KAAW0D,KAAI,KAAKd,KAAWhK,KAAIqG,IAAerG,IAC9DZ,KAVeqL,GAAfM,KAUS7G,IAViB,CAAA,IAAc,SAAZ8G,IAAGT,EAAOQ,EAAAA,KAAEC,IAAI,IAAIf,IAWhDkB,KAVI,SAACJ,IAAW3L,IAAAA;AAAS,YAAAgM;AAAA,eAAMX,GAAQM,IAAG,CAAA,IAAKd,KAAO7K,MAAAA,SAAIgM,KAACb,EAAOQ,EAAAA,KAAEK,KAAI,KAAKnB;MAAAA,EAUvD/F,IAAO9E,EAAAA,GAC7BiM,KAAmC,EACrChG,IAAI0D,IACJ7E,OAAoB,SAAbgH,KAAoBA,KAAWhH,IACtCoB,gBAAgB4E,EAAYhG,EAAAA,GAC5BoH,QAAAA,OACAzB,OAAAA,IACAzC,YAAAA,IACArI,MAAM2L,GAAYb,EAAAA,EAAAA;AAGtBlL,MAAAA,GAAK4M,KAAK,EACNxC,KAAQA,KAAOsC,MAAAA,GAAQjE,YACvByC,OAAOlL,GAAKkM,QACZ9L,MAAMsM,IACNnM,GAAAA,IACAE,GAAAA,IACAsE,MAAM8G,GAAOgB,OAAOtM,IACpByE,MAAM6G,GAAOiB,MAAMrM,IACnBD,OAAO6K,IACP3K,QAAQ8L,IACR7J,OAAO6I,GAASkB,EAAAA,GAChBvJ,OAAOsI,EAAgBiB,EAAAA,EAAAA,CAAAA;IAE/B,CAAA;EAAE,CAAA,GAGC1M;AACX;ANrFO,IM0FD+M,KAAgC,SAAHnM,IAa/B4L,IACAtF,IACA8F,IAAAA;AAC+B,MAd3B5M,KAAIQ,GAAJR,MACAmL,IAAW3K,GAAX2K,aACA5B,KAAQ/I,GAAR+I,UACA6B,KAAQ5K,GAAR4K,UACAC,IAAe7K,GAAf6K,iBACA1E,IAAInG,GAAJmG,MAAIkG,IAAArM,GACJ8G,cAAAA,IAAAA,WAAYuF,IAAG,IAACA,GAChBtB,IAAM/K,GAAN+K,QACAC,IAAMhL,GAANgL,QACAC,KAAMjL,GAANiL,QAMEC,KAAU5E,KAAUyD,KAAKF,IAGzBsB,KAAc3L,GAAKe,IAAIkJ,EAAAA,GAEvBrK,KAAqC,CAAA;AAkC3C,SAjCA+G,EAAKiF,QAAQ,SAAC5B,IAAK/I,IAAAA;AAAC,WAChBuJ,GAAM,GAAGgB,EAAOK,OAAAA,EAASC,MAAAA,EAAQF,QAAQ,SAAAd,IAAAA;AAAS,UAAAgC,IANxCd,IAASe,GAOfC,KAA0B7C,GAAYnK,GAAK8K,EAAAA,EAAOd,EAAAA,CAAAA,GAA3CmC,KAAQa,GAAA,CAAA,GAAE7H,KAAK6H,GAAA,CAAA,GAChB3E,KAAakB,GAASvJ,GAAK8K,EAAAA,CAAAA,GAC3B3K,KATeuL,GAAfM,KASS7G,IATiB,CAAA,IAAKyH,KAAgBG,SAAZA,IAAGxB,EAAOS,EAAAA,KAAEe,IAAI,GAUnD1M,MAAuB,SAAnByM,KAACtB,EAAOnD,EAAAA,KAAWyE,KAAI,KAAKV,KAAYnL,KAAIqG,IAAerG,IAC/DgK,KAVG,SAACe,IAAW7L,IAAAA;AAAS,YAAA8M;AAAA,eAAMvB,GAAQM,IAAG,CAAA,KAAeiB,SAAVA,KAAC1B,EAAOS,EAAAA,KAAEiB,KAAI,KAAKL,KAAOA,KAAOzM;MAAAA,EAU3DgF,IAAOhF,EAAAA,GAC3BmM,KAAmC,EACrChG,IAAI0D,IACJ7E,OAAoB,SAAbgH,KAAoBA,KAAWhH,IACtCoB,gBAAgB4E,EAAYhG,EAAAA,GAC5BoH,QAAAA,OACAzB,OAAAA,IACAzC,YAAAA,IACArI,MAAM2L,GAAYb,EAAAA,EAAAA;AAGtBlL,MAAAA,GAAK4M,KAAK,EACNxC,KAAQA,KAAOsC,MAAAA,GAAQjE,YACvByC,OAAOlL,GAAKkM,QACZ9L,MAAMsM,IACNnM,GAAAA,IACAE,GAAAA,IACAsE,MAAM8G,GAAOgB,OAAOtM,IACpByE,MAAM6G,GAAOiB,MAAMrM,IACnBD,OAAO6K,IACP3K,QAAQ8L,IACR7J,OAAO6I,GAASkB,EAAAA,GAChBvJ,OAAOsI,EAAgBiB,EAAAA,EAAAA,CAAAA;IAE/B,CAAA;EAAE,CAAA,GAGC1M;AACX;ANnJO,IMwJMsN,KAAsB,SAAHC,IAAAA;AAkC1B,MAAAC,IAnKmBjI,IAkIrB0B,KAAMsG,GAANtG,QACAE,KAAQoG,GAARpG,UACAC,IAAQmG,GAARnG,UACAF,KAAOqG,GAAPrG,SACA1G,KAAK+M,GAAL/M,OACAE,IAAM6M,GAAN7M,QAAM+M,IAAAF,GACN9F,SAAAA,IAAAA,WAAOgG,IAAG,IAACA,GAAAC,IAAAH,GACX7F,cAAAA,IAAAA,WAAYgG,IAAG,IAACA,GAChBrG,IAAUkG,GAAVlG,YACYsG,KAAgBJ,GAA5BhG,YAAUqG,KAAAL,GACVM,WAAAA,KAAAA,WAASD,KAAG,CAAA,IAAEA,IACXE,KAAKxL,GAAAiL,IAAAhL,EAAAA,GAuBFwE,KAAO+G,GAAM/G,KAAKgH,OAAO,SAAA3D,IAAAA;AAAG,WAAA,CAAKyD,GAAUG,SAAS5D,EAAAA;EAAAA,CAAAA,GACpDhK,IAAO4J,GAAc8D,GAAM1N,MAAM2G,EAAAA,GACvCkH,KACe,eAAXhH,KAAyB,CAAC,KAAK,KAAKzG,EAAAA,IAAoB,CAAC,KAAK,KAAKE,CAAAA,GADhEkJ,KAAIqE,GAAA,CAAA,GAAEC,KAASD,GAAA,CAAA,GAAEpN,KAAIoN,GAAA,CAAA,GAEtB1G,KAAamC,GACftJ,GACA0N,GAAMnE,UACNlC,GACAkG,IACA9M,IACAqN,EAAAA,GAGEC,KAAS5M,GAAA,EACXR,KAAKqG,GACL2C,KAAK5C,IACLD,SAAAA,GAAAA,GACGG,CAAAA,GAGD+G,KAA6B,WAAlBD,GAAUpE,MAAiBoB,KAAc,SAAC5F,IAAAA;AAAa,WAAKA;EAAK,GAE5E8I,KAASjO,EACV8J,OAAiB,SAACC,IAAKmE,IAAAA;AAAK,WAAAC,CAAAA,EAAAA,OAASpE,IAAQpD,GAAK5F,IAAI,SAAAqN,IAAAA;AAAC,aAAIF,GAAME,EAAAA;IAAY,CAAA,CAAA;EAAE,GAAE,CAAA,CAAA,EACjFT,OAAOU,OAAAA,GACN1E,KAAMqE,GAAStN,KAAKiJ,IAAG2E,MAAR5N,MAAYuN,EAAAA,CAAAA,GAC3BtN,MA9LewE,KA8LOzE,KAAKC,IAAG2N,MAAR5N,MAAYuN,EAAAA,GA9LAM,SAASpJ,EAAAA,IAASA,KAAQ,IAgM5DqJ,KAAQ/E,GACVsE,IACA,EAAErE,KAAKuE,IAAQtE,KAAAA,IAAKhJ,KAAAA,GAAAA,GACX,QAAT6I,KAAepJ,KAAQE,GACvBkJ,EAAAA,GAGJiF,KAAoC,eAAX5H,KAAwB,CAACM,IAAYqH,EAAAA,IAAS,CAACA,IAAOrH,EAAAA,GAAxEoE,KAAMkD,GAAA,CAAA,GAAEjD,KAAMiD,GAAA,CAAA,GAEfC,MAAavH,GAAWuH,UAAAA,IAAcpH,KAAgBX,GAAKmF,SAAS,MAAMnF,GAAKmF,QAC/E6C,KAAS,CAAAxN,GAAAA,CAAAA,GACNuM,IAAK,EAAE1N,MAAAA,GAAM2G,MAAAA,IAAMW,cAAAA,GAAciE,QAAAA,IAAQC,QAAAA,GAAAA,CAAAA,GAC9CkD,IACAX,GAAUjH,SACF,SADSsG,KACjBoB,GAAM,CAAA,KAAEpB,KAAI,CAAA;AAUhB,SAAO,EAAE7B,QAAAA,IAAQC,QAAAA,IAAQ5L,MANrB8O,KAAY,IACK,eAAX7H,KACImE,GAA2BsD,MAAAA,QAAIK,EAAAA,IAC/BhC,GAA6B2B,MAAAA,QAAIK,EAAAA,IACrC,CAAA,EAAA;AAGd;ANhPO,IMgPP,KAAA,CAAA,QAAA,UAAA,YAAA,YAAA,WAAA,SAAA,UAAA,WAAA,cAAA,cAAA,WAAA;ANhPO,IOkBDC,KAAc,SAAdA,GAAkBC,IAAAA;AAAQ,MAAAlP;AAAA,SAC5BkP,GAAIC,KAAKnE,MAAMoE,OAAAA,IAAWH,IAAYjP,KAAC,CAAA,GAAWwO,OAAMG,MAAA3O,IAAIkP,EAAAA,CAAAA,IAASA;AAAoB;APnBtF,IO2BDG,KAA8B,SAAHxO,IAY7ByK,IACAnE,IAAAA;AAC+B,MAZ3BqE,KAAW3K,GAAX2K,aACAC,KAAQ5K,GAAR4K,UACA7B,IAAQ/I,GAAR+I,UACA8B,KAAe7K,GAAf6K,iBACA/D,KAAY9G,GAAZ8G,cACA2H,IAAWzO,GAAXyO,aACA1D,IAAM/K,GAAN+K,QACAC,IAAMhL,GAANgL,QACAC,IAAMjL,GAANiL,QAQE7L,IAAqC,CAAA;AAmC3C,SAlCAqP,EAAYrD,QAAQ,SAAAsD,IAAAA;AAAe,WAC/B3D,EAAOM,OAAAA,EAASD,QAAQ,SAACd,IAAO7J,GAAAA;AAAM,UAAA8K,IAAAoD,IAC5BnD,KAAIkD,GAAgBjO,CAAAA,GACpBd,KAA4B4L,SAA3BA,KAAGR,EAAOhC,EAASyC,GAAEhM,IAAAA,CAAAA,KAAM+L,KAAI,GAChC1L,MAAY,SAAR8O,KARL,SAACnD,IAAAA;AAAuB,eAAKR,EAAOQ,GAAElF,KAAU,IAAI,CAAA,CAAA;MAAG,EAQ5CkF,EAAAA,KAAEmD,KAAI,KAAoB,MAAf7H,IACrB8E,IARI,SAACJ,IAAyB3L,IAAAA;AAAS,YAAA4L;AAAA,gBAAgC,SAA3BA,KAACT,EAAOQ,GAAElF,KAAU,IAAI,CAAA,CAAA,KAAGmF,KAAI,KAAK5L;MAAC,EAQ3D2L,IAAG3L,EAAAA,IAAKiH,IACpC4E,KAA0B/B,GAAY6B,GAAEhM,KAAKkP,GAAgBlF,GAAAA,CAAAA,GAAtDmC,KAAQD,GAAA,CAAA,GAAE/G,KAAK+G,GAAA,CAAA,GAEhBI,KAAmC,EACrChG,IAAI4I,GAAgBlF,KACpB7E,OAAoB,SAAbgH,KAAoBA,KAAWhH,IACtCoB,gBAAgB4E,GAAYhG,EAAAA,GAC5BoH,QAAAA,OACAzB,OAAO7J,GACPoH,YAAYyC,IACZ9K,MAAMiK,GAAiB+B,GAAEhM,IAAAA,EAAAA;AAG7BJ,QAAK4M,KAAK,EACNxC,KAAQkF,GAAgBlF,MAAAA,MAAOc,IAC/BA,OAAOlL,EAAKkM,QACZ9L,MAAMsM,IACNnM,GAAAA,IACAE,GAAAA,IACAsE,MAAM8G,EAAOgB,OAAOtM,IACpByE,MAAM6G,EAAOiB,MAAMrM,IACnBD,OAAO6K,IACP3K,QAAQ8L,GACR7J,OAAO6I,GAASkB,EAAAA,GAChBvJ,OAAOsI,GAAgBiB,EAAAA,EAAAA,CAAAA;IAE/B,CAAA;EAAE,CAAA,GAGC1M;AACX;APjFO,IOsFDwP,KAAgC,SAAHjC,IAY/Bf,IACAtF,IAAAA;AAC+B,MAZ3BqE,KAAWgC,GAAXhC,aACAC,KAAQ+B,GAAR/B,UACA7B,IAAQ4D,GAAR5D,UACA8B,KAAe8B,GAAf9B,iBACA/D,KAAY6F,GAAZ7F,cACA2H,IAAW9B,GAAX8B,aACA1D,IAAM4B,GAAN5B,QACAC,IAAM2B,GAAN3B,QACAC,IAAM0B,GAAN1B,QAQE7L,IAAqC,CAAA;AAmC3C,SAlCAqP,EAAYrD,QAAQ,SAAAsD,IAAAA;AAAe,WAC/B1D,EAAOK,OAAAA,EAASD,QAAQ,SAACd,IAAO7J,GAAAA;AAAM,UAAAoL,IAAAgD,IAC5BrD,KAAIkD,GAAgBjO,CAAAA,GACpBZ,KAA4BgM,SAA3BA,KAAGb,EAAOjC,EAASyC,GAAEhM,IAAAA,CAAAA,KAAMqM,KAAI,GAChClM,MAAY,SAARkP,KARL,SAACrD,IAAAA;AAAuB,eAAKT,EAAOS,GAAElF,KAAU,IAAI,CAAA,CAAA;MAAG,EAQ5CkF,EAAAA,KAAEqD,KAAI,KAAoB,MAAf/H,IACrB2D,IARG,SAACe,IAAyB7L,IAAAA;AAAS,YAAA4M;AAAA,gBAAgC,SAA3BA,KAACxB,EAAOS,GAAElF,KAAU,IAAI,CAAA,CAAA,KAAGiG,KAAI,KAAK5M;MAAC,EAQ5D6L,IAAG7L,EAAAA,IAAKmH,IAClC0F,KAA0B7C,GAAY6B,GAAEhM,KAAKkP,GAAgBlF,GAAAA,CAAAA,GAAtDmC,KAAQa,GAAA,CAAA,GAAE7H,KAAK6H,GAAA,CAAA,GAEhBV,KAAmC,EACrChG,IAAI4I,GAAgBlF,KACpB7E,OAAoB,SAAbgH,KAAoBA,KAAWhH,IACtCoB,gBAAgB4E,GAAYhG,EAAAA,GAC5BoH,QAAAA,OACAzB,OAAO7J,GACPoH,YAAYyC,IACZ9K,MAAMiK,GAAiB+B,GAAEhM,IAAAA,EAAAA;AAG7BJ,QAAK4M,KAAK,EACNxC,KAAQkF,GAAgBlF,MAAAA,MAAOc,IAC/BA,OAAOlL,EAAKkM,QACZ9L,MAAMsM,IACNnM,GAAAA,IACAE,GAAAA,IACAsE,MAAM8G,EAAOgB,OAAOtM,IACpByE,MAAM6G,EAAOiB,MAAMrM,IACnBD,OAAO6K,GACP3K,QAAQ8L,IACR7J,OAAO6I,GAASkB,EAAAA,GAChBvJ,OAAOsI,GAAgBiB,EAAAA,EAAAA,CAAAA;IAE/B,CAAA;EAAE,CAAA,GAGC1M;AACX;AP5IO,IOiJM0P,KAAsB,SAAHzB,IAAAA;AAkC1B,MA9JoB0B,IA6HtBvP,KAAI6N,GAAJ7N,MACA6G,KAAMgH,GAANhH,QACAE,KAAQ8G,GAAR9G,UACAC,IAAQ6G,GAAR7G,UACAF,KAAO+G,GAAP/G,SACA1G,KAAKyN,GAALzN,OACAE,IAAMuN,GAANvN,QAAMkP,IAAA3B,GACNxG,SAAAA,IAAAA,WAAOmI,IAAG,IAACA,GACXvI,IAAU4G,GAAV5G,YACYsG,IAAgBM,GAA5B1G,YAAUsI,IAAA5B,GACVJ,WAAAA,KAAAA,WAASgC,IAAG,CAAA,IAAEA,GACX/B,KAAKxL,GAAA2L,IAAA1L,EAAAA,GAuBFwE,KAAO+G,GAAM/G,KAAKgH,OAAO,SAAA3D,IAAAA;AAAG,WAAA,CAAKyD,GAAUG,SAAS5D,EAAAA;EAAAA,CAAAA,GACpDiF,KAAcS,cAAAA,EAA0B/I,KAAKA,EAAAA,EAAMgJ,OAAOC,iBAAAA,EAC5DhG,GAAc5J,IAAM2G,EAAAA,CAAAA,GAGxB8H,KACe,eAAX5H,KAAyB,CAAC,KAAK,KAAKzG,EAAAA,IAAoB,CAAC,KAAK,KAAKE,CAAAA,GADhEkJ,IAAIiF,GAAA,CAAA,GAAEX,KAASW,GAAA,CAAA,GAAEhO,KAAIgO,GAAA,CAAA,GAEtBtH,KAAamC,GACftJ,IACA0N,GAAMnE,UACNlC,GACAkG,GACA9M,IACAqN,EAAAA,GAGEC,KAAS5M,GAAA,EACXR,KAAKqG,GACL2C,KAAK5C,IACLD,SAAAA,GAAAA,GACGG,CAAAA,GAGDgH,MAtLgBsB,KAuLlBX,GAAYK,EAAAA,GAtLP,UAuLLhI,EAAWC,OAvLEqI,GAAM5B,OAAO,SAAAkC,IAAAA;AAAG,WAAY,MAARA;EAAS,CAAA,IAAIN,KAyL5C5F,KAAMjJ,KAAKiJ,IAAG2E,MAAR5N,MAAYuN,EAAAA,GAClBtN,KAAMD,KAAKC,IAAG2N,MAAR5N,MAAYuN,EAAAA,GAElBO,KAAQ/E,GACVsE,IACA,EAAErE,KAAKuE,IAAQtE,KAAAA,IAAKhJ,KAAAA,GAAAA,GACX,QAAT6I,IAAepJ,KAAQE,GACvBkJ,CAAAA,GAGJsG,KAAoC,eAAXjJ,KAAwB,CAACM,IAAYqH,EAAAA,IAAS,CAACA,IAAOrH,EAAAA,GAAxEoE,KAAMuE,GAAA,CAAA,GAAEtE,KAAMsE,GAAA,CAAA,GAEfxI,KAAeoG,GAAMpG,eAAe,IAAIoG,GAAMpG,eAAe,GAC7DoH,KAAYvH,GAAWuH,UAAAA,GACvBC,KAAS,CAAAxN,GAAAA,CAAAA,GACNuM,IAAK,EAAEpG,cAAAA,IAAc2H,aAAAA,IAAa1D,QAAAA,IAAQC,QAAAA,GAAAA,CAAAA,GAC/CkD,IACAX,GAAUjH,OAAAA;AAUd,SAAO,EAAEyE,QAAAA,IAAQC,QAAAA,IAAQ5L,MANrB8O,KAAY,IACK,eAAX7H,KACImI,GAA2BV,MAAAA,QAAIK,EAAAA,IAC/BS,GAA6Bd,MAAAA,QAAIK,EAAAA,IACrC,CAAA,EAAA;AAGd;AP3OO,IQ6DMoB,KAAgB,SAAH5C,IAAAA;AAapB,MAZFvN,KAAIuN,GAAJvN,MACAoQ,KAAS7C,GAAT6C,WACAjI,KAAIoF,GAAJpF,MACAnB,KAASuG,GAATvG,WACAC,KAAMsG,GAANtG,QACAoJ,KAAW9C,GAAX8C,aACAnJ,IAAOqG,GAAPrG,SAOMoJ,IAAiBC,GACnBF,QAAAA,KAAAA,KAAyB,cAATlI,KAAqB,eAAe,IAAA;AAGxD,SAAa,cAATA,KAxC+B,SACnCnI,IACAiH,IACAqJ,IAAAA;AAEA,QAAMlQ,SAAOoQ,eAAAA,SACTxQ,GAAKmB,IAAI,SAAAb,IAAAA;AAAG,UAAAmQ,IAAAC;AAAA,aAAK,EACbhK,IAAuB,SAArB+J,KAAEnQ,GAAIF,KAAKqI,cAAUgI,KAAI,IAC3BtN,OAAOmN,GAAehQ,GAAIF,IAAAA,GAC1BuM,QAAQrM,GAAIF,KAAKuM,QACjBhK,OAAgB,SAAX+N,KAAEpQ,GAAIqC,SAAK+N,KAAI,OAAA;IAAA,CAAA,GAExB,SAAA9P,IAAAA;AAAK,aAAAA,GAAF8F;IAAW,CAAA;AAOlB,WAJe,iBAAXO,MACA7G,GAAK8G,QAAAA,GAGF9G;EACX,EAqBuCJ,IAAMiH,IAAQqJ,CAAAA,IAxEjB,SAChCtQ,IACAiH,IACAmJ,IACApJ,IACAE,IACAoJ,GAAAA;AAEA,QAAMlQ,SAAOoQ,eAAAA,SACTxQ,GAAKmB,IAAI,SAAAb,IAAAA;AAAG,UAAAqQ;AAAA,aAAK,EACbjK,IAAIpG,GAAIF,KAAKsG,IACbvD,OAAOmN,EAAehQ,GAAIF,IAAAA,GAC1BuM,QAAQrM,GAAIF,KAAKuM,QACjBhK,OAAgB,SAAXgO,KAAErQ,GAAIqC,SAAKgO,KAAI,OAAA;IAAA,CAAA,GAExB,SAAA5Q,IAAAA;AAAK,aAAAA,GAAF2G;IAAW,CAAA;AAalB,YATgB,eAAXO,MACiB,cAAdD,MACc,aAAdoJ,MAAAA,SACAlJ,MACQ,iBAAXD,MAAyC,cAAdD,MAAAA,SAA2BE,OAEvD9G,GAAK8G,QAAAA,GAGF9G;EACX,EA8CgCJ,IAAMiH,IAAQmJ,IAAWpJ,IAAWE,GAASoJ,CAAAA;AAC7E;ARpFO,ISmHMM,KAAsB,SAC/BC,IACApI,IACAlD,IAAAA;AAEA,MAAMuL,KAAoBD,GAAcE,IAAItI,EAAAA,KAAe;AAC3DoI,EAAAA,GAAcG,IAAIvI,IAAYqI,KAAoBvL,EAAAA;AACtD;AT1HO,IS6HM0L,KAA+B,SACxCC,IACAzI,IACAlD,IAAAA;AAEA,MAAMuL,KAAoBI,GAAuBH,IAAItI,EAAAA,KAAe;AACpEyI,EAAAA,GAAuBF,IAAIvI,IAAYqI,MAAqBvL,KAAQ,IAAIA,KAAQ,EAAA;AACpF;ATpIO,ISuIM4L,KAA6B,SACtCC,IACA3I,IACAlD,IAAAA;AAEA,MAAM8L,KAAuBD,GAAqBL,IAAItI,EAAAA,KAAe;AACrE2I,EAAAA,GAAqBJ,IAAIvI,IAAY3H,KAAKC,IAAIsQ,IAAsB7G,OAAOjF,EAAAA,CAAAA,CAAAA;AAC/E;AT9IO,ISiJM+L,KAA4B,SACrCC,IACA9I,IAAAA;AAEA,MAAM+I,KAAsBD,GAAoBR,IAAItI,EAAAA,KAAe;AACnE8I,EAAAA,GAAoBP,IAAIvI,IAAY+I,KAAsB,CAAA;AAC9D;ATvJO,IUYMC,KAAS,SAAH1R,IAAAA;AA4Db,MAAA2R,KAAA3R,GA3DF+G,SAAAA,KAAAA,WAAO4K,KAAG7K,GAAaC,UAAO4K,IAAAC,KAAA5R,GAC9BgH,MAAAA,IAAAA,WAAI4K,KAAG9K,GAAaE,OAAI4K,IAAAC,IAAA7R,GACxBoD,OAAAA,IAAAA,WAAKyO,IAAG/K,GAAa1D,QAAKyO,GAAAC,IAAA9R,GAC1BwI,cAAAA,IAAAA,WAAYsJ,IAAGhL,GAAa0B,eAAYsJ,GACxCC,IAAW/R,GAAX+R,aAAWC,IAAAhS,GACXsI,QAAAA,KAAAA,WAAM0J,IAAGlL,GAAawB,SAAM0J,GAAAC,KAAAjS,GAC5BqI,SAAAA,KAAAA,WAAO4J,KAAGnL,GAAauB,UAAO4J,IAAAC,KAAAlS,GAC9B2C,aAAAA,KAAAA,WAAWuP,KAAGpL,GAAanE,cAAWuP,IAAAC,IAAAnS,GACtCmI,gBAAAA,KAAAA,WAAcgK,IAAGrL,GAAaqB,iBAAcgK,GAAAC,KAAApS,GAC5CiH,WAAAA,KAAAA,WAASmL,KAAGtL,GAAaG,YAASmL,IAAAC,KAAArS,GAClCkH,QAAAA,KAAAA,WAAMmL,KAAGvL,GAAaI,SAAMmL,IAAAC,KAAAtS,GAC5BmH,SAAAA,KAAAA,WAAOmL,KAAGxL,GAAaK,UAAOmL,IAC9BjS,KAAIL,GAAJK,MAAIkS,KAAAvS,GACJoH,UAAAA,KAAAA,WAAQmL,KAAGzL,GAAaM,WAAQmL,IAAAC,KAAAxS,GAChCqH,UAAAA,KAAAA,WAAQmL,KAAG1L,GAAaO,WAAQmL,IAChC1G,KAAM9L,GAAN8L,QACArL,KAAKT,GAALS,OACAE,KAAMX,GAANW,QAAM8R,KAAAzS,GACN0H,SAAAA,KAAAA,WAAO+K,KAAG3L,GAAaY,UAAO+K,IAAA9G,IAAA3L,GAC9B2H,cAAAA,KAAAA,WAAYgE,IAAG7E,GAAaa,eAAYgE,GAAA+G,KAAA1S,GACxCsH,YAAAA,KAAAA,WAAUoL,KAAG5L,GAAaQ,aAAUoL,IAAAC,KAAA3S,GACpCwH,YAAAA,KAAAA,WAAUmL,KAAG7L,GAAaU,aAAUmL,IAAAC,KAAA5S,GACpC2I,kBAAAA,KAAAA,WAAgBiK,KAAG9L,GAAa6B,mBAAgBiK,IAAAC,KAAA7S,GAChDgI,aAAAA,KAAAA,WAAW6K,KAAG/L,GAAakB,cAAW6K,IAAAC,KAAA9S,GACtCiI,gBAAAA,MAAAA,WAAc6K,KAAGhM,GAAamB,iBAAc6K,IAAAC,MAAA/S,GAC5CkI,iBAAAA,MAAAA,WAAe6K,MAAGjM,GAAaoB,kBAAe6K,KAAAC,MAAAhT,GAC9C0B,SAAAA,MAAAA,WAAOsR,MAAGlM,GAAapF,UAAOsR,KAC9B1C,MAAWtQ,GAAXsQ,aAAW2C,MAAAjT,GACX8I,cAAAA,MAAAA,WAAYmK,MAAGnM,GAAagC,eAAYmK,KAgCxCC,UAAkCC,cAAAA,UAASxK,QAAAA,KAAAA,KAAoB,CAAA,CAAA,GAAxDmF,MAASoF,IAAA,CAAA,GAAEE,MAAYF,IAAA,CAAA,GACxBvR,UAAc+C,cAAAA,aAAY,SAACiC,IAAAA;AAC7ByM,IAAAA,IAAa,SAAAC,IAAAA;AAAK,aACdA,GAAMC,QAAQ3M,EAAAA,IAAAA,KAAW0M,GAAMrF,OAAO,SAAA9D,IAAAA;AAAI,eAAIA,OAASvD;MAAE,CAAA,IAAA,CAAA,EAAC6H,OAAO6E,IAAK,CAAE1M,EAAAA,CAAAA;IAAG,CAAA;EAElF,GAAE,CAAA,CAAA,GAEGiD,MAAW2J,GAAoBxM,EAAAA,GAC/ByM,MAAWD,GAAoBnQ,CAAAA,GAC/BsI,MAAkB6H,GAAoB/K,CAAAA,GACtCgD,MAAciI,GAAkB1B,CAAAA,GAEhChO,MAAQC,GAAAA,GACRyH,MAAWiI,GAAqBpL,IAAQD,EAAAA,GACxCsL,MAAiBC,GACnBjR,IACAoB,GAAAA,GAEE8P,MAAgBD,GAClBzL,IACApE,GAAAA,GAIJ+P,OADmC,cAAd7M,KAA0BsG,KAAsBoC,IACvB,EAC1CzI,QAAAA,IACAC,SAAAA,IACA9G,MAAAA,IACAuJ,UAAAA,KACA5C,MAAAA,GACAI,UAAAA,IACAC,UAAAA,IACA5G,OAAAA,IACAE,QAAAA,IACA8K,UAAAA,KACA/D,SAAAA,IACAC,cAAAA,IACAL,YAAAA,IACAE,YAAAA,IACAsG,WAAAA,KACAtC,aAAAA,KACAE,iBAAAA,KACAI,QAAAA,GAAAA,CAAAA,GAlBI7L,MAAI6T,IAAJ7T,MAAM2L,MAAMkI,IAANlI,QAAQC,MAAMiI,IAANjI,QAqBhBkI,UAAgBxP,cAAAA,SAClB,WAAA;AAAA,WACItE,IACK+N,OACG,SAACzN,IAAAA;AAAG,aAAoE,SAAnBA,GAAIF,KAAKmF;IAClE,CAAA,EACCpE,IAAI,SAACb,IAAK4K,IAAAA;AAAK,aAAA3J,GAAAA,CAAAA,GACTjB,IAAG,EACN4K,OAAAA,GAAAA,CAAAA;IAAK,CAAA;EAAA,GAEjB,CAAClL,GAAAA,CAAAA,GAGC+T,UAAuBtP,cAAAA,aACzB,SAAA7D,IAAAA;AAA0D,QAAvDJ,KAAKI,GAALJ,OAAOE,KAAME,GAANF;AACN,WAAA,CAAA,CAAKqH,OAAAA,EACDC,MAAiB,KAAKxH,KAAQwH,QAAAA,EAC9BC,MAAkB,KAAKvH,KAASuH;EAEvC,GACD,CAACF,IAAaC,KAAgBC,GAAAA,CAAAA,GAG5B+L,UAAa1P,cAAAA,SACf,WAAA;AAAA,WACIyC,EAAK5F,IAAI,SAAAiJ,IAAAA;AACL,UAAM9J,KAAMN,IAAKiU,KAAK,SAAA3T,IAAAA;AAAG,eAAIA,GAAIF,KAAKsG,OAAO0D;MAAAA,CAAAA;AAE7C,aAAA7I,GAAAA,CAAAA,GAAYjB,IAAG,EAAEF,MAAImB,GAAA,EAAImF,IAAI0D,GAAAA,GAAW,QAAH9J,KAAAA,SAAAA,GAAKF,MAAI,EAAEuM,QAAQkB,IAAUG,SAAS5D,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAC/E,CAAA;EAAE,GACN,CAACyD,KAAW9G,GAAM/G,GAAAA,CAAAA,GAGhBkU,UAAoD5P,cAAAA,SACtD,WAAA;AAAA,WACI7C,IAAQN,IAAI,SAAAS,IAAAA;AAWR,aAAO,CAACA,IAVKuO,GAAc,EACvBnQ,MAA0B,WAApB4B,GAAOI,WAAsBgS,MAAahU,KAChDoQ,WAAWxO,GAAOwO,WAClBjI,MAAMvG,GAAOI,UACbgF,WAAAA,IACAC,QAAAA,IACAoJ,aAAAA,KACAnJ,SAAAA,GAAAA,CAAAA,CAAAA;IAIR,CAAA;EAAE,GACN,CAACzF,KAASuS,KAAYhU,KAAMgH,IAAWC,IAAQoJ,KAAanJ,EAAAA,CAAAA,GAG1DiN,SAAY7P,cAAAA,SACd,WAAA;AAAA,WDhKwB,SAC5BtE,IACA2L,IACAC,IACA3E,IACAD,IACA6B,IACA0C,IAAAA;AAAAA,iBAHAtE,OAAAA,KAA6CJ,GAAaI,SAAAA,WAC1DD,OAAAA,KAAmDH,GAAaG;AAIhE,UAAMoN,KAAS,CAAA;AAEf,UAAoB,MAAhBpU,GAAKkM;AAAc,eAAOkI;AAE9B,UAAMvD,KAAgB,oBAAIwD,OAEpBhJ,KAAWrL,GAAK,CAAA,EAAGQ,OACnBgM,KAAYxM,GAAK,CAAA,EAAGU;AAE1B,UAAkB,cAAdsG,IAAyB;AACzB,YAAMkK,KAAyB,oBAAImD;AAEnCrU,QAAAA,GAAKgM,QAAQ,SAAA1L,IAAAA;AACT,cAAAgU,KAA8BhU,GAAIF,MAA1BqI,KAAU6L,GAAV7L,YAAYlD,KAAK+O,GAAL/O;AACpBqL,aAAoBC,IAAepI,IAAY+B,OAAOjF,EAAAA,CAAAA,GACtD0L,GAA6BC,IAAwBzI,IAAY+B,OAAOjF,EAAAA,CAAAA;QAC5E,CAAA,GAEA2L,GAAuBlF,QAAQ,SAACuI,IAAgB9L,IAAAA;AAC5C,cAEI+L,IACAC,IACAC,IAJEC,KAAa9D,GAAcE,IAAItI,EAAAA,KAAe;AAMrC,yBAAXxB,MACAuN,KAAY7I,GAAOlD,EAAAA,GACnBgM,KAAY7I,GAAO2I,EAAAA,GACnBG,KAAkB9I,GAAO2I,KAAiB,CAAA,MAE1CC,KAAY7I,GAAO4I,EAAAA,GACnBE,KAAY7I,GAAOnD,EAAAA,GACnBiM,KAAkB/I,GAAO4I,KAAiB,CAAA,IAG9CC,MAAwB,eAAXvN,KAAwBoE,KAAW,IAAIxC,IACpD4L,MAAwB,eAAXxN,KAAAA,CAAyB4B,KAAe2D,KAAY,GAEjE4H,GAAOxH,KAAK,EACRxC,KAAK,WAAW3B,IAChBlI,GAAGiU,IACH/T,GAAGgU,IACHlP,OAAOoP,IACPhO,gBAAgB4E,GAAYoJ,EAAAA,GAC5BD,iBAAAA,GAAAA,CAAAA;QAER,CAAA;MACJ,WAAyB,cAAd1N,IAAyB;AAChC,YAAMoK,KAAuB,oBAAIiD,OAC3B9C,KAAsB,oBAAI8C;AAEhCrU,QAAAA,GAAKgM,QAAQ,SAAA1L,IAAAA;AACT,cAAAsU,KAA8BtU,GAAIF,MAA1BqI,KAAUmM,GAAVnM,YAAYlD,KAAKqP,GAALrP;AACpBqL,aAAoBC,IAAepI,IAAY+B,OAAOjF,EAAAA,CAAAA,GACtD4L,GAA2BC,IAAsB3I,IAAY+B,OAAOjF,EAAAA,CAAAA,GACpE+L,GAA0BC,IAAqB9I,EAAAA;QACnD,CAAA,GAEA2I,GAAqBpF,QAAQ,SAAC6I,IAAepM,IAAAA;AACzC,cAGI+L,IACAC,IACAC,IALEC,KAAa9D,GAAcE,IAAItI,EAAAA,KAAe,GAC9CqM,KAAevD,GAAoBR,IAAItI,EAAAA;AAM9B,yBAAXxB,MACAuN,KAAY7I,GAAOlD,EAAAA,GACnBgM,KAAY7I,GAAOiJ,EAAAA,GACnBH,KAAkB9I,GAAOiJ,KAAgB,CAAA,MAEzCL,KAAY7I,GAAOkJ,EAAAA,GACnBJ,KAAY7I,GAAOnD,EAAAA,GACnBiM,KAAkB/I,GAAOkJ,KAAgB,CAAA,IAM7CL,MAAwB,eAAXvN,KAHU6N,KAAezJ,KAGgB,IAAIxC,IAC1D4L,MAAwB,eAAXxN,KAAAA,CAAyB4B,KAHdiM,KAAetI,KAGgC,GAEvE4H,GAAOxH,KAAK,EACRxC,KAAK,WAAW3B,IAChBlI,GAAGiU,IACH/T,GAAGgU,IACHlP,OAAOoP,IACPhO,gBAAgB4E,GAAYoJ,EAAAA,GAC5BD,iBAAAA,GAAAA,CAAAA;QAER,CAAA;MACJ;AACA,aAAON;IACX,EC0D+BpU,KAAM2L,KAAQC,KAAQ3E,IAAQD,IAAW6B,KAAc0C,GAAAA;EAAY,GAC1F,CAACvL,KAAM2L,KAAQC,KAAQ3E,IAAQD,IAAW6B,KAAc0C,GAAAA,CAAAA;AAG5D,SAAO,EACHvL,MAAAA,KACA8T,eAAAA,KACAnI,QAAAA,KACAC,QAAAA,KACAjC,UAAAA,KACA4J,UAAAA,KACA9H,iBAAAA,KACAF,aAAAA,KACAC,UAAAA,KACAkI,gBAAAA,KACAE,eAAAA,KACAG,sBAAAA,KACAlG,WAAAA,KACAnM,aAAAA,KACAwS,iBAAAA,KACAC,WAAAA,GAAAA;AAER;AVhMO,IWUMY,KAAY,SAAHhV,IAAAA;AAKC,MAJnBK,KAAIL,GAAJK,MACA4U,KAAYjV,GAAZiV,cACA9L,KAAOnJ,GAAPmJ,SAAOkJ,IAAArS,GACPkH,QAAAA,KAAAA,WAAMmL,IAAGtJ,GAAgB7B,SAAMmL,GAEzBtO,KAAQC,GAAAA;AAmCd,SAlCyBkR,cAOvB7U,IAAM,EACJ2G,MAAM,SAAAmO,IAAAA;AAAQ,WAAIA,GAAS9K;EAAG,GAC9BjC,MAAM,SAAA+M,IAAAA;AAAQ,WAAK,EACf3U,GAAc,eAAX0G,KAAwBiO,GAAS3U,IAAI2U,GAASR,iBACjDjU,GAAc,eAAXwG,KAAwBiO,GAASR,kBAAkBQ,GAASzU,GAC/DoC,cAAc,EAAA;EAChB,GACFsS,OAAO,SAAAD,IAAAA;AAAQ,WAAK,EAChB3U,GAAG2U,GAAS3U,GACZE,GAAGyU,GAASzU,GACZoC,cAAc,EAAA;EAChB,GACFuS,QAAQ,SAAAF,IAAAA;AAAQ,WAAK,EACjB3U,GAAG2U,GAAS3U,GACZE,GAAGyU,GAASzU,GACZoC,cAAc,EAAA;EAChB,GACFwS,OAAO,SAAAH,IAAAA;AAAQ,WAAK,EAChB3U,GAAc,eAAX0G,KAAwBiO,GAAS3U,IAAI2U,GAASR,iBACjDjU,GAAc,eAAXwG,KAAwBiO,GAASR,kBAAkBQ,GAASzU,GAC/DoC,cAAc,EAAA;EAChB,GACFyS,QAAQN,IACRO,WAAAA,CAAYrM,IACZsM,SAAStM,KAAAA,SAAsB,KAAA,CAAA,EAGX,SAACzG,IAAOyS,IAAAA;AAAQ,eACpClU,oBAAAA,KAACmE,SAASe,MAAI,EAEV3F,GAAGkC,GAAMlC,GACTE,GAAGgC,GAAMhC,GACT4F,aAAa5D,GAAMI,cACnBJ,OAAKlB,GAAA,CAAA,GACEuC,GAAMwC,OAAOJ,MAAI,EACpBK,eAAe,QACfb,MAAM5B,GAAMoC,KAAKR,KAAAA,CAAAA,GAErB+P,YAAW,QACXC,UAAU5R,GAAMwC,OAAOJ,KAAKwP,UAC5BC,YAAY7R,GAAMwC,OAAOJ,KAAKyP,YAC9BxP,YAAuB,eAAXc,KAAwB,WAAW,SAC/C2O,mBAA8B,eAAX3O,KAAwB,eAAe,UAAS/F,UAElEgU,GAASvO,eAAAA,GAfLuO,GAAS9K,GAAAA;EAgBF,CAAA;AAExB;AXvEO,IWuEP,KAAA,CAAA,iBAAA,WAAA,gBAAA,SAAA,eAAA;AXvEO,IY4BDyL,KAAW,SAAH9V,IAAAA;AA6EiB,MA5E3BK,KAAIL,GAAJK,MACA0G,KAAO/G,GAAP+G,SACAC,IAAIhH,GAAJgH,MAEQ+O,KAAa/V,GAArB8L,QACArL,KAAKT,GAALS,OACAE,IAAMX,GAANW,QAEAsG,KAASjH,GAATiH,WACAC,KAAMlH,GAANkH,QACAC,KAAOnH,GAAPmH,SACAC,KAAQpH,GAARoH,UACAC,KAAQrH,GAARqH,UAEAC,KAAUtH,GAAVsH,YACAE,KAAUxH,GAAVwH,YAEAE,KAAO1H,GAAP0H,SACAC,KAAY3H,GAAZ2H,cAEAqO,KAAOhW,GAAPgW,SACAC,KAASjW,GAATiW,WAASC,KAAAlW,GACT4H,YAAAA,KAAAA,WAAUsO,KAAGnN,GAAgBnB,aAAUsO,IAAAC,KAAAnW,GACvC6H,UAAAA,KAAAA,WAAQsO,KAAGpN,GAAgBlB,WAAQsO,IAAAC,KAAApW,GACnC8H,aAAAA,KAAAA,WAAWsO,KAAGrN,GAAgBjB,cAAWsO,IAAAC,KAAArW,GACzC+H,aAAAA,IAAAA,WAAWsO,KAAGtN,GAAgBhB,cAAWsO,IACzCC,KAAWtW,GAAXsW,aACAC,KAAWvW,GAAXuW,aAAWC,KAAAxW,GAEXgJ,QAAAA,KAAAA,WAAMwN,KAAGzN,GAAgBC,SAAMwN,IAAAC,IAAAzW,GAC/BiJ,cAAAA,KAAAA,WAAYwN,IAAG1N,GAAgBE,eAAYwN,GAAA5D,KAAA7S,GAE3CgI,aAAAA,KAAAA,WAAW6K,KAAG9J,GAAgBf,cAAW6K,IACzCzP,KAAKpD,GAALoD,OAAK0P,KAAA9S,GACLiI,gBAAAA,KAAAA,WAAc6K,KAAG/J,GAAgBd,iBAAc6K,IAAAC,KAAA/S,GAC/CkI,iBAAAA,KAAAA,WAAe6K,KAAGhK,GAAgBb,kBAAe6K,IACjD5K,MAAcnI,GAAdmI,gBAAcuO,MAAA1W,GAEd4I,SAAAA,MAAAA,WAAO8N,MAAG3N,GAAgBH,UAAO8N,KAEjCrO,MAAOrI,GAAPqI,SACAC,MAAMtI,GAANsI,QAAMqO,MAAA3W,GACNkJ,MAAAA,MAAAA,WAAIyN,MAAG5N,GAAgBG,OAAIyN,KAAAC,MAAA5W,GAC3B2F,MAAAA,MAAAA,WAAIiR,MAAG7N,GAAgBpD,OAAIiR,KAAAC,MAAA7W,GAC3BkD,cAAAA,MAAAA,WAAY2T,MAAG9N,GAAgB7F,eAAY2T,KAAAC,MAAA9W,GAC3CmD,aAAAA,MAAAA,WAAW2T,MAAG/N,GAAgB5F,cAAW2T,KACzCnU,MAAW3C,GAAX2C,aAAWoU,MAAA/W,GAEXE,aAAAA,MAAAA,WAAW6W,MAAGhO,GAAgB7I,cAAW6W,KAEzCzG,MAAWtQ,GAAXsQ,aACA9H,MAAYxI,GAAZwI,cAEAuJ,MAAW/R,GAAX+R,aAAWiF,MAAAhX,GAEXsD,eAAAA,MAAAA,WAAa0T,MAAGjO,GAAgBzF,gBAAa0T,KAAAC,MAAAjX,GAC7C0D,SAAAA,MAAAA,WAAOuT,MAAGlO,GAAgBrF,UAAOuT,KACjC1T,MAAOvD,GAAPuD,SACAC,MAAYxD,GAAZwD,cACAC,MAAYzD,GAAZyD,cAEA/B,MAAO1B,GAAP0B,SAAOwV,MAAAlX,GAEPqJ,MAAAA,MAAAA,WAAI6N,MAAGnO,GAAgBM,OAAI6N,KAC3BtT,MAAS5D,GAAT4D,WACAC,MAAc7D,GAAd6D,gBACAC,MAAe9D,GAAf8D,iBAAeqT,MAAAnX,GACf2D,aAAAA,KAAAA,WAAWwT,MAAGpO,GAAgBpF,cAAWwT,KACzCC,KAAYpX,GAAZoX,cACAC,MAAiBrX,GAAjBqX,mBACAC,KAAkBtX,GAAlBsX,oBAEA3O,KAAgB3I,GAAhB2I,kBAAgB4O,KAAAvX,GAEhB6I,cAAAA,KAAAA,WAAY0O,KAAGxO,GAAgBF,eAAY0O,IAAAtE,KAAAjT,GAC3C8I,cAAAA,KAAAA,WAAYmK,KAAGlK,GAAgBD,eAAYmK,IAE3CuE,KAA0CC,GAAAA,GAAlCtO,KAAOqO,GAAPrO,SAAiB8L,KAAYuC,GAApBjC,QACjBmC,KAAqEC,GACjElX,IACAE,GACAoV,EAAAA,GAHI6B,KAAUF,GAAVE,YAAYC,KAAWH,GAAXG,aAAa/L,KAAM4L,GAAN5L,QAAQgM,KAAUJ,GAAVI,YAAYC,KAAWL,GAAXK,aAMrDC,KAaItG,GAAiB,EACjB3K,SAAAA,IACA3D,OAAAA,IACAoF,cAAAA,KACAuJ,aAAAA,KACAzJ,QAAAA,KACAD,SAAAA,KACA1F,aAAAA,KACAwF,gBAAAA,KACAlB,WAAAA,IACAC,QAAAA,IACAC,SAAAA,IACA9G,MAAAA,IACA2G,MAAAA,GACAI,UAAAA,IACAC,UAAAA,IACAyE,QAAAA,IACArL,OAAOqX,IACPnX,QAAQoX,IACRrQ,SAAAA,IACAC,cAAAA,IACAL,YAAAA,IACAE,YAAAA,IACAQ,aAAAA,IACAC,gBAAAA,IACAC,iBAAAA,IACAxG,SAAAA,KACA4O,aAAAA,KACA3H,kBAAAA,IACAG,cAAAA,GAAAA,CAAAA,GAzCA7I,KAAI+X,GAAJ/X,MACA8T,KAAaiE,GAAbjE,eACAnI,KAAMoM,GAANpM,QACAC,KAAMmM,GAANnM,QACA2H,KAAQwE,GAARxE,UACA9H,KAAesM,GAAftM,iBACAiI,KAAcqE,GAAdrE,gBACAE,KAAamE,GAAbnE,eACAG,KAAoBgE,GAApBhE,sBACArS,KAAWqW,GAAXrW,aACAwS,KAAe6D,GAAf7D,iBACAC,KAAS4D,GAAT5D,WAiCE6D,KAAa/C,cAcjBnB,IAAe,EACb/M,MAAM,SAAAzG,IAAAA;AAAG,WAAIA,GAAI8J;EAAG,GACpBjC,MAAM,SAAA7H,IAAAA;AAAG,WAAAiB,GAAA,EACLmB,aAAagR,GAAepT,EAAAA,GAC5BqC,OAAOrC,GAAIqC,OACXjC,QAAQ,GACRkC,YAAYgR,GAActT,EAAAA,GAC1BuC,cAAc,GACdC,QAAQxC,GAAIE,QAAQ,GACpBuC,QAAQzC,GAAII,SAAS,GACrBsC,WAAwB1C,eAAAA,GAAIC,IAAMD,QAAAA,GAAIG,IAAIH,GAAII,UAAS,KACvDF,OAAOF,GAAIE,MAAAA,GACI,eAAXyG,KACE,CAAA,IACA,EACIvG,QAAQJ,GAAII,QACZsC,WAAS,eAAe1C,GAAIC,IAAAA,OAAMD,GAAIG,IAAI,KAC1CD,OAAO,EAAA,CAAA;EAEnB,GACF2U,OAAO,SAAA7U,IAAAA;AAAG,WAAK,EACXoC,aAAagR,GAAepT,EAAAA,GAC5BqC,OAAOrC,GAAIqC,OACXjC,QAAQJ,GAAII,QACZkC,YAAYgR,GAActT,EAAAA,GAC1BuC,cAAc,GACdC,QAAQxC,GAAIE,QAAQ,GACpBuC,QAAQzC,GAAII,SAAS,GACrBsC,WAAS,eAAe1C,GAAIC,IAAAA,OAAMD,GAAIG,IAAI,KAC1CD,OAAOF,GAAIE,MAAAA;EACb,GACF4U,QAAQ,SAAA9U,IAAAA;AAAG,WAAK,EACZoC,aAAagR,GAAepT,EAAAA,GAC5BqC,OAAOrC,GAAIqC,OACXjC,QAAQJ,GAAII,QACZkC,YAAYgR,GAActT,EAAAA,GAC1BuC,cAAc,GACdC,QAAQxC,GAAIE,QAAQ,GACpBuC,QAAQzC,GAAII,SAAS,GACrBsC,WAAS,eAAe1C,GAAIC,IAAAA,OAAMD,GAAIG,IAAI,KAC1CD,OAAOF,GAAIE,MAAAA;EACb,GACF6U,OAAO,SAAA/U,IAAAA;AAAG,WAAAiB,GAAA,EACNmB,aAAagR,GAAepT,EAAAA,GAC5BqC,OAAOrC,GAAIqC,OACXjC,QAAQ,GACRkC,YAAYgR,GAActT,EAAAA,GAC1BuC,cAAc,GACdC,QAAQxC,GAAIE,QAAQ,GACpBuC,QAAQ,GACRC,WAAwB1C,eAAAA,GAAIC,IAAMD,QAAAA,GAAIG,IAAIH,GAAII,UAAS,KACvDF,OAAOF,GAAIE,MAAAA,GACI,eAAXyG,KACE,CAAA,IACA,EACInE,QAAQ,GACRC,QAAQzC,GAAII,SAAS,GACrBA,QAAQJ,GAAII,QACZsC,WAAS,eAAe1C,GAAIC,IAAAA,OAAMD,GAAIG,IAAI,KAC1CD,OAAO,EAAA,CAAA;EAEnB,GACF8U,QAAQN,IACRO,WAAAA,CAAYrM,IACZsM,SAAStM,KAAAA,SAAsB,KAAA,CAAA,GAG7B+O,SAAc3T,cAAAA,SAChB,WAAA;AAAA,WAAO,EACHrB,cAAAA,KACAC,aAAAA,KACA6E,aAAAA,IACA1E,eAAAA,KACA2E,gBAAAA,IACAC,iBAAAA,IACA3E,SAAAA,KACAC,cAAAA,KACAC,cAAAA,KACAiI,iBAAAA,IACAhI,SAAAA,KACAC,aAAAA,IACAC,WAAWwT,IACXvT,gBAAgBwT,KAChBvT,iBAAiBwT,GAAAA;EACpB,GACD,CACIpU,KACAC,KACA6E,IACA0D,IACApI,KACA4E,IACAD,IACA1E,KACAC,KACAC,KACAC,KACAC,IACAyT,IACAC,KACAC,EAAAA,CAAAA,GAIFa,KAAYC,GAASlP,KAAMjJ,IAAM0F,KAAM,EACzC0S,SAAS,QACTC,WAAW,YAAA,CAAA,GAGTC,KAA2C,EAC7CrY,aAAa,MACbsY,MAAM,MACNvY,MAAM,MACNwY,MAAM,MACN/W,SAAS,MACTkH,SAAS,MACTyL,QAAQ,KAAA;AAGRrL,EAAAA,GAAOiF,SAAS,aAAA,MAChBsK,GAAUrY,kBACNe,oBAAAA,KAAClB,IAAc,EAAmBE,MAAMA,IAAMC,aAAaA,IAAAA,GAAvC,aAAA,IAIxB8I,GAAOiF,SAAS,MAAA,MAChBsK,GAAUC,WACNvX,oBAAAA,KAACyX,GAAI,EAED9M,QAAQA,IACRC,QAAQA,IACRpL,OAAOqX,IACPnX,QAAQoX,IACRhL,KAAKiJ,IACL2C,OAAO1C,IACP2C,QAAQhR,IACRkF,MAAMjF,GAAAA,GARF,MAAA,IAaZmB,GAAOiF,SAAS,MAAA,MAChBsK,GAAUtY,WACNgB,oBAAAA,KAAC4X,cAAAA,UAAQ,EAAA1X,UACJ8W,GAAW,SAACvV,IAAOnC,IAAAA;AAAG,eACnBiE,cAAAA,eAAcyE,IAAYzH,GAAAA,CAAAA,GACnB0W,IAAW,EACd3X,KAAAA,IACAmC,OAAAA,IACAW,mBAAmB2Q,GAAqBzT,EAAAA,GACxC6C,OAAOoQ,GAASjT,GAAIF,IAAAA,EAAAA,CAAAA,CAAAA;EAAAA,CAAAA,EAAAA,GAPlB,MAAA,IAclB2I,GAAOiF,SAAS,MAAA,MAChBsK,GAAUE,WACNxX,oBAAAA,KAAC6X,GAAI,EAEDrY,OAAOqX,IACPnX,QAAQoX,IACRnM,QAAQ9D,KAAc8D,KAAS,MAC/BC,QAAQ9D,IAAc8D,KAAS,MAC/BkN,SAASzC,IACT0C,SAASzC,GAAAA,GANL,MAAA,IAWZvN,GAAOiF,SAAS,SAAA,MAChBsK,GAAU7W,cACNT,oBAAAA,KAACQ,IAAU,EAEPhB,OAAOqX,IACPnX,QAAQoX,IACRrW,SAASyS,IACTxS,aAAaA,GAAAA,GAJT,SAAA,IASZqH,GAAOiF,SAAS,SAAA,MAChBsK,GAAU3P,cACN3H,oBAAAA,KAACgY,IAAgB,EAEbrQ,SAASA,KACTnI,OAAOqX,IACPnX,QAAQoX,IACRnM,QAAQA,IACRC,QAAQA,GAAAA,GALJ,SAAA,IAUZ7C,GAAOiF,SAAS,QAAA,KAAapF,OAC7B0P,GAAUlE,aACNpT,oBAAAA,KAAC+T,IAAS,EAEN3U,MAAM+T,IACNa,cAAcA,IACd9L,SAASA,IACTjC,QAAQA,GAAAA,GAJJ,QAAA;AAShB,MAAMgS,SAA8C3U,cAAAA,SAChD,WAAA;AAAA,WAAA/C,GAAAA,CAAAA,GACO0W,IAAW,EACdpM,QAAAA,IACArL,OAAAA,IACAE,QAAAA,GACAmX,YAAAA,IACAC,aAAAA,IACA9X,MAAAA,IACAgU,YAAYE,IACZnM,aAAAA,IACA4D,QAAAA,IACAC,QAAAA,IACAnI,SAAAA,KACAgI,iBAAAA,IACAnI,SAAAA,KACAC,cAAAA,KACAC,cAAAA,IAAAA,CAAAA;EAAY,GAEhB,CACIyU,IACApM,IACArL,IACAE,GACAmX,IACAC,IACA9X,IACAkU,IACAnM,IACA4D,IACAC,IACAnI,KACAgI,IACAnI,KACAC,KACAC,GAAAA,CAAAA;AAIR,aACIxC,oBAAAA,KAACkY,IAAU,EACP1Y,OAAOmX,IACPjX,QAAQkX,IACR/L,QAAQA,IACR5C,MAAMiP,IACN9O,MAAMA,KACNzF,WAAWA,KACXC,gBAAgBA,KAChBC,iBAAiBA,KACjBH,aAAaA,IAAYxC,UAExB6H,GAAO5H,IAAI,SAACgY,IAAO9X,IAAAA;AAAM,QAAA+X;AACtB,WAAqB,cAAA,OAAVD,SACAnY,oBAAAA,KAAC4X,cAAAA,UAAQ,EAAA1X,cAAUqD,cAAAA,eAAc4U,IAAOF,EAAAA,EAAAA,GAAzB5X,EAAAA,IAGD,SAAzB+X,KAAOd,QAAAA,KAAAA,SAAAA,GAAYa,EAAAA,KAAMC,KAAI;EAAA,CAAA,EAAA,CAAA;AAI7C;AZxbO,IY0bMC,KAAM,SAAHzY,IAAAA;AAAA,MAAA0Y,KAAA1Y,GACZyC,eAAAA,KAAAA,WAAaiW,KAAGxQ,GAAgBzF,gBAAaiW,IAAAC,KAAA3Y,GAC7CsI,SAAAA,KAAAA,WAAOqQ,KAAGzQ,GAAgBI,UAAOqQ,IAAAC,IAAA5Y,GACjCuI,cAAAA,KAAAA,WAAYqQ,IAAG1Q,GAAgBK,eAAYqQ,GAC3C1V,KAAKlD,GAALkD,OACA2V,IAAa7Y,GAAb6Y,eACGC,IAAUpX,GAAA1B,IAAA2B,EAAAA;AAAA,aAEbvB,oBAAAA,KAAC2Y,IAAS,EAEFzQ,SAAAA,IACA7F,eAAAA,IACA8F,cAAAA,IACAsQ,eAAAA,GACA3V,OAAAA,IAAK5C,cAGTF,oBAAAA,KAAC6U,IAAQtU,GAAA,EAAW8B,eAAeA,GAAAA,GAAmBqW,CAAAA,CAAAA,EAAAA,CAAAA;AAC9C;AZ5cT,IY4cS,KAAA,CAAA,iBAAA,iBAAA,OAAA;AZ5cT,Ia2CDE,KAAqB,SACvBC,IACAhO,IACAtL,IACAE,IAAAA;AAAS,SAEToZ,GAAM5F,KAAK,SAAA6F,IAAAA;AAAI,WACXC,GAAeD,GAAKvZ,IAAIsL,GAAOgB,MAAMiN,GAAKrZ,IAAIoL,GAAOiB,KAAKgN,GAAKtZ,OAAOsZ,GAAKpZ,QAAQH,IAAGE,EAAAA;EAAE,CAAA;AAC3F;AAoBL,IAAMuZ,KAAiB,SAAHja,IAAAA;AAqHiB,MApHjCK,KAAIL,GAAJK,MACA0G,IAAO/G,GAAP+G,SACAC,KAAIhH,GAAJgH,MAEQ+O,IAAa/V,GAArB8L,QACArL,IAAKT,GAALS,OACAE,IAAMX,GAANW,QAEAsG,IAASjH,GAATiH,WACAC,IAAMlH,GAANkH,QACAC,KAAOnH,GAAPmH,SACAC,KAAQpH,GAARoH,UACAC,KAAQrH,GAARqH,UAEAC,KAAUtH,GAAVsH,YACAE,IAAUxH,GAAVwH,YAEAE,KAAO1H,GAAP0H,SACAC,KAAY3H,GAAZ2H,cAEAqO,KAAOhW,GAAPgW,SACAC,KAASjW,GAATiW,WAASC,KAAAlW,GACT4H,YAAAA,KAAAA,WAAUsO,KAAG5M,GAAmB1B,aAAUsO,IAAAC,KAAAnW,GAC1C6H,UAAAA,IAAAA,WAAQsO,KAAG7M,GAAmBzB,WAAQsO,IAAAC,KAAApW,GACtC8H,aAAAA,KAAAA,WAAWsO,KAAG9M,GAAmBxB,cAAWsO,IAAAC,KAAArW,GAC5C+H,aAAAA,IAAAA,WAAWsO,KAAG/M,GAAmBvB,cAAWsO,IAC5CC,KAAWtW,GAAXsW,aACAC,KAAWvW,GAAXuW,aAAWC,KAAAxW,GAEXgJ,QAAAA,KAAAA,WAAMwN,KAAGlN,GAAmBN,SAAMwN,IAAA0D,KAAAla,GAClCma,WAAAA,KAAAA,WAASD,KAAG,SACRE,IAAGvZ,IAAAA;AAWF,QAAAwZ,KAAAxZ,GATGN,KAAOqC,KAAKyX,GAALzX,OAAOjC,KAAM0Z,GAAN1Z,QAAQF,KAAK4Z,GAAL5Z,OAAOD,KAAC6Z,GAAD7Z,GAAGE,KAAC2Z,GAAD3Z,GAEhCiC,KAAW9B,GAAX8B,aACAO,KAAYrC,GAAZqC,cACAC,IAAWtC,GAAXsC,aACAC,KAAKvC,GAALuC,OACAP,KAAUhC,GAAVgC,YACAQ,KAAiBxC,GAAjBwC;AAYJ,QATA+W,GAAIE,YAAY1X,IAEZO,IAAc,MACdiX,GAAIG,cAAc5X,IAClByX,GAAII,YAAYrX,IAGpBiX,GAAIK,UAAAA,GAEAvX,KAAe,GAAG;AAClB,UAAMwX,KAAS3Z,KAAKiJ,IAAI9G,IAAcvC,EAAAA;AAEtCyZ,MAAAA,GAAIO,OAAOna,KAAIka,IAAQha,EAAAA,GACvB0Z,GAAIQ,OAAOpa,KAAIC,KAAQia,IAAQha,EAAAA,GAC/B0Z,GAAIS,iBAAiBra,KAAIC,IAAOC,IAAGF,KAAIC,IAAOC,KAAIga,EAAAA,GAClDN,GAAIQ,OAAOpa,KAAIC,IAAOC,KAAIC,KAAS+Z,EAAAA,GACnCN,GAAIS,iBAAiBra,KAAIC,IAAOC,KAAIC,IAAQH,KAAIC,KAAQia,IAAQha,KAAIC,EAAAA,GACpEyZ,GAAIQ,OAAOpa,KAAIka,IAAQha,KAAIC,EAAAA,GAC3ByZ,GAAIS,iBAAiBra,IAAGE,KAAIC,IAAQH,IAAGE,KAAIC,KAAS+Z,EAAAA,GACpDN,GAAIQ,OAAOpa,IAAGE,KAAIga,EAAAA,GAClBN,GAAIS,iBAAiBra,IAAGE,IAAGF,KAAIka,IAAQha,EAAAA,GACvC0Z,GAAIU,UAAAA;IACR;AACIV,MAAAA,GAAI9U,KAAK9E,IAAGE,IAAGD,IAAOE,EAAAA;AAG1ByZ,IAAAA,GAAIzU,KAAAA,GAEAxC,IAAc,KACdiX,GAAIvU,OAAAA,GAGJxC,OACA+W,GAAIW,eAAe,UACnBX,GAAIY,YAAY,UAChBZ,GAAIE,YAAYzX,IAChBuX,GAAIa,SAAS7X,IAAO5C,KAAIC,KAAQ,GAAGC,KAAIC,KAAS,CAAA;EAExD,IAACuZ,IAAArH,KAAA7S,GAEDgI,aAAAA,KAAAA,WAAW6K,KAAGvJ,GAAmBtB,cAAW6K,IAC5CzP,KAAKpD,GAALoD,OAAK0P,KAAA9S,GACLiI,gBAAAA,MAAAA,WAAc6K,KAAGxJ,GAAmBrB,iBAAc6K,IAAAC,MAAA/S,GAClDkI,iBAAAA,MAAAA,WAAe6K,MAAGzJ,GAAmBpB,kBAAe6K,KACpD5K,MAAcnI,GAAdmI,gBAEAE,MAAOrI,GAAPqI,SACAC,MAAMtI,GAANsI,QAAMuO,MAAA7W,GACNkD,cAAAA,MAAAA,WAAY2T,MAAGvN,GAAmBpG,eAAY2T,KAAAC,MAAA9W,GAC9CmD,aAAAA,MAAAA,WAAW2T,MAAGxN,GAAmBnG,cAAW2T,KAC5CnU,MAAW3C,GAAX2C,aAAWoU,MAAA/W,GAEXE,aAAAA,MAAAA,WAAW6W,MAAGzN,GAAmBpJ,cAAW6W,KAE5CzG,MAAWtQ,GAAXsQ,aACA9H,MAAYxI,GAAZwI,cAEAuJ,MAAW/R,GAAX+R,aAAWiF,MAAAhX,GAEXsD,eAAAA,MAAAA,WAAa0T,MAAG1N,GAAmBhG,gBAAa0T,KAAAC,MAAAjX,GAChD0D,SAAAA,MAAAA,WAAOuT,MAAG3N,GAAmB5F,UAAOuT,KACpC1T,MAAOvD,GAAPuD,SACAC,MAAYxD,GAAZwD,cACAC,MAAYzD,GAAZyD,cAEA/B,MAAO1B,GAAP0B,SAAOwZ,MAAAlb,GAEPuJ,YAAAA,MAAAA,WAAU2R,MAAG5R,GAAmBC,aAAU2R,KAE1CC,MAASnb,GAATmb,WAAS5D,MAAAvX,GAET6I,cAAAA,MAAAA,WAAY0O,MAAGjO,GAAmBT,eAAY0O,KAAAtE,MAAAjT,GAC9C8I,cAAAA,MAAAA,WAAYmK,MAAG3J,GAAmBR,eAAYmK,KAExCmI,UAAWC,cAAAA,QAAiC,IAAA,GAE5CtX,MAAQC,GAAAA,GACd0T,KAAqEC,GACjElX,GACAE,GACAoV,CAAAA,GAHIjK,KAAM4L,GAAN5L,QAAQgM,MAAUJ,GAAVI,YAAYC,KAAWL,GAAXK,aAAaH,KAAUF,GAAVE,YAAYC,KAAWH,GAAXG,aAMrDG,KAYItG,GAAiB,EACjB3K,SAAAA,GACA3D,OAAAA,IACAoF,cAAAA,KACAuJ,aAAAA,KACAzJ,QAAAA,KACAD,SAAAA,KACA1F,aAAAA,KACAwF,gBAAAA,KACAlB,WAAAA,GACAC,QAAAA,GACAC,SAAAA,IACA9G,MAAAA,IACA2G,MAAAA,IACAI,UAAAA,IACAC,UAAAA,IACAyE,QAAAA,IACArL,OAAOqX,KACPnX,QAAQoX,IACRrQ,SAAAA,IACAC,cAAAA,IACAL,YAAAA,IACAE,YAAAA,GACAQ,aAAAA,IACAC,gBAAAA,KACAC,iBAAAA,KACAxG,SAAAA,KACA4O,aAAAA,KACAxH,cAAAA,IAAAA,CAAAA,GAvCA7I,KAAI+X,GAAJ/X,MACA8T,KAAaiE,GAAbjE,eACAnI,KAAMoM,GAANpM,QACAC,KAAMmM,GAANnM,QACA2H,KAAQwE,GAARxE,UACA9H,KAAesM,GAAftM,iBACAiI,KAAcqE,GAAdrE,gBACAE,KAAamE,GAAbnE,eACAG,KAAoBgE,GAApBhE,sBACAG,KAAe6D,GAAf7D,iBACAC,KAAS4D,GAAT5D,WAgCJnQ,KAA8CC,EAAAA,GAAtCC,KAAoBF,GAApBE,sBAAsBE,KAAWJ,GAAXI,aAGxBlE,KAAwBmb,GAAuB,EACjDpb,aAAaE,GAAe,EACxBC,MAAMJ,IACNC,aAAAA,KACAI,aAAa,SAAAyZ,IAAAA;AAAI,WAAK,EAClBvZ,GAAGuZ,GAAKvZ,GACRE,GAAGqZ,GAAKrZ,EAAAA;EACV,GACFE,eAAe,SAAA4M,IAAAA;AAAA,QAAG/M,KAAK+M,GAAL/M,OAAOE,KAAM6M,GAAN7M;AAAM,WAAQ,EACnCF,OAAAA,IACAE,QAAAA,IACAG,MAAMC,KAAKC,IAAIP,IAAOE,EAAAA,EAAAA;EACzB,EAAA,CAAA,EAAA,CAAA,GAKHuY,SAAoD3U,cAAAA,SACtD,WAAA;AAAA,WAAO,EACHrB,cAAAA,KACAC,aAAAA,KACAG,eAAAA,KACAK,aAAAA,OACAsE,gBAAAA,KACAC,iBAAAA,KACA4D,QAAAA,IACArL,OAAAA,GACAE,QAAAA,GACAmX,YAAAA,KACAC,aAAAA,IACA9X,MAAAA,IACAgU,YAAYE,IACZnM,aAAAA,IACA4D,QAAAA,IACAC,QAAAA,IACAnI,SAAAA,KACAgI,iBAAAA,IACAnI,SAAAA,KACAC,cAAAA,KACAC,cAAAA,IAAAA;EACH,GACD,CACIP,KACAC,KACAG,KACA2E,KACAC,KACA4D,IACArL,GACAE,GACAmX,KACAC,IACA9X,IACAkU,IACAnM,IACA4D,IACAC,IACAnI,KACAgI,IACAnI,KACAC,KACAC,GAAAA,CAAAA,GAIF+H,KAAciI,GAAkB1B,GAAAA;AAEtCwJ,oBAAAA,WAAU,WAAA;AAAM,QAAAC,IACNpB,KAAsB,SAAnBoB,KAAGJ,IAASK,WAAAA,SAATD,GAAkBE,WAAW,IAAA;AAEpCN,IAAAA,IAASK,WACTrB,OAELgB,IAASK,QAAQhb,QAAQmX,KAAarO,KACtC6R,IAASK,QAAQ9a,SAASkX,KAActO,KAExC6Q,GAAIvL,MAAMtF,KAAYA,GAAAA,GAEtB6Q,GAAIE,YAAYvW,IAAM4X,YACtBvB,GAAIwB,SAAS,GAAG,GAAGhE,IAAYC,EAAAA,GAC/BuC,GAAIyB,UAAU/P,GAAOgB,MAAMhB,GAAOiB,GAAAA,GAElC/D,GAAOiD,QAAQ,SAAAmN,IAAAA;AACG,iBAAVA,KAlRuD,YAAA,OAmR1CrV,IAAM0U,KAAKqD,KAAKlW,eAAgB7B,IAAM0U,KAAKqD,KAAKlW,cAAc,MACvEwU,GAAII,YAAYzW,IAAM0U,KAAKqD,KAAKlW,aAChCwU,GAAIG,cAAcxW,IAAM0U,KAAKqD,KAAKjW,QAE9BiC,MACAiU,EAAyC3B,IAAK,EAC1C3Z,OAAOqX,KACPnX,QAAQoX,IACRlJ,OAAOjD,IACP/B,MAAM,KACNyE,QAAQgI,GAAAA,CAAAA,GAIZvO,KACAgU,EAAyC3B,IAAK,EAC1C3Z,OAAOqX,KACPnX,QAAQoX,IACRlJ,OAAOhD,IACPhC,MAAM,KACNyE,QAAQiI,GAAAA,CAAAA,KAIH,WAAV6C,KACP4C,EAAmB5B,IAAK,EACpBxO,QAAQA,IACRC,QAAQA,IACRpL,OAAOqX,KACPnX,QAAQoX,IACRhL,KAAKiJ,IACL2C,OAAO1C,IACP2C,QAAQhR,IACRkF,MAAMjF,GACN9D,OAAAA,IAAAA,CAAAA,IAEa,WAAVqV,KACPrF,GAAc9H,QAAQ,SAAA1L,IAAAA;AAClB4Z,QAAAA,GAAUC,IAAK,EACX7Z,KAAAA,IACAoC,aAAagR,GAAepT,EAAAA,GAC5B2C,cAAAA,KACAC,aAAAA,KACAC,OAAOoQ,GAASjT,GAAIF,IAAAA,GACpBwC,YAAYgR,GAActT,EAAAA,GAC1B8C,mBAAmB2Q,GAAqBzT,EAAAA,EAAAA,CAAAA;MAEhD,CAAA,IACiB,cAAV6Y,KACPjF,GAAgBlI,QAAQ,SAAAiC,IAAAA;AAAoB,YAAlBrM,KAAMqM,GAAA,CAAA,GAAE7N,KAAI6N,GAAA,CAAA;AAClC+N,UAAqB7B,IAAG5Y,GAAAA,CAAAA,GACjBK,IAAM,EACTxB,MAAAA,IACA0B,gBAAgB+V,KAChB9V,iBAAiB+V,IACjBhU,OAAAA,IAAAA,CAAAA,CAAAA;MAER,CAAA,IACiB,kBAAVqV,KACP8C,GAA0B9B,IAAK,EAAEla,aAAaC,IAAkB4D,OAAAA,IAAAA,CAAAA,IAC/C,aAAVqV,MAAsBvQ,MA7U7C,SACIuR,IACAhG,IACArQ,IACAmD,IAAAA;AAAAA,mBAAAA,OAAAA,KAA6CoC,GAAmBpC,SAEhEkT,GAAIE,YAAYvW,GAAMoC,KAAKR,MAC3ByU,GAAI+B,OAAI,UAAWpY,GAAMwC,OAAOJ,KAAKwP,WAAAA,QAAc5R,GAAMwC,OAAOJ,KAAKyP,YACrEwE,GAAIW,eAA0B,eAAX7T,KAAwB,eAAe,UAC1DkT,GAAIY,YAAuB,eAAX9T,KAAwB,WAAW,SAEnDkN,GAAUnI,QAAQ,SAAAkJ,IAAAA;AACdiF,UAAAA,GAAIa,SAAS9F,GAASvO,gBAAgBuO,GAAS3U,GAAG2U,GAASzU,CAAAA;QAC/D,CAAA;MACJ,EAgUqC0Z,IAAKhG,IAAWrQ,KAAOmD,CAAAA,IACpB,cAAA,OAAVkS,MACdA,GAAMgB,IAAKlB,EAAAA;IAEnB,CAAA,GAEAkB,GAAIgC,KAAAA;EACR,GAAG,CACCxU,IACAC,GACAoO,IACAD,IACAjC,IACA7Q,KACAC,KACAhD,IACA2H,IACAC,GACA4L,IACAH,IACAK,IACAyC,IACAC,IACAtP,GACAtG,GACAoX,IACAD,KACAoB,IACAlQ,IACA9B,GACAiN,IACArI,GAAOgB,MACPhB,GAAOiB,KACP8K,IACAD,IACArO,KACA4Q,IACAvO,IACAC,IACA1E,IACA6M,IACAjQ,KACAtD,GACA2T,IACAvL,KACA2C,EAAAA,CAAAA;AAGJ,MAAM6Q,SAAmB3X,cAAAA,aACrB,SAACC,IAAAA;AACG,QAAK1E,MACAmb,IAASK,SAAd;AAEA,UAAAa,KAAeC,GAAkBnB,IAASK,SAAS9W,EAAAA,GAA5CnE,KAAC8b,GAAA,CAAA,GAAE5b,KAAC4b,GAAA,CAAA,GACL/b,KAAMsZ,GAAmB5Z,IAAM6L,IAAQtL,IAAGE,EAAAA;AAAAA,iBAE5CH,MACA4D,OACIK,cAAAA,eAAcd,KAAOlC,GAAA,CAAA,GACdjB,GAAIF,MAAI,EACXuC,OAAOrC,GAAIqC,OACXQ,OAAO7C,GAAI6C,OACXoC,OAAOiF,OAAOlK,GAAIF,KAAKmF,KAAAA,EAAAA,CAAAA,CAAAA,GAE3Bb,EAAAA,GAGe,iBAAfA,GAAM4C,SACM,QAAZ/D,OAAAA,IAAejD,GAAIF,MAAMsE,EAAAA,MAG7BN,GAAAA;IApBmB;EAsB3B,GACA,CAACA,IAAayH,IAAQtI,KAAcvD,IAAMkE,IAAsBT,GAAAA,CAAAA,GAG9DoB,SAAmBJ,cAAAA,aACrB,SAACC,IAAAA;AACG,QAAK1E,MACAmb,IAASK,SAAd;AAEApX,SAAAA;AAEA,UAAAmY,KAAeD,GAAkBnB,IAASK,SAAS9W,EAAAA,GAA5CnE,KAACgc,GAAA,CAAA,GAAE9b,KAAC8b,GAAA,CAAA,GACLjc,KAAMsZ,GAAmB5Z,IAAM6L,IAAQtL,IAAGE,EAAAA;AAE5CH,MAAAA,OACY,QAAZkD,OAAAA,IAAelD,GAAIF,MAAMsE,EAAAA;IARN;EAU1B,GACD,CAACN,IAAayH,IAAQrI,KAAcxD,EAAAA,CAAAA,GAGlCwE,SAAcC,cAAAA,aAChB,SAACC,IAAAA;AACG,QAAK1E,MACAmb,IAASK,SAAd;AAEA,UAAAgB,KAAeF,GAAkBnB,IAASK,SAAS9W,EAAAA,GAA5CnE,KAACic,GAAA,CAAA,GAAE/b,KAAC+b,GAAA,CAAA,GACLlc,KAAMsZ,GAAmB5Z,IAAM6L,IAAQtL,IAAGE,EAAAA;AAAAA,iBAE5CH,OAAAA,QACAgD,OAAAA,IAAO/B,GAAQjB,CAAAA,GAAAA,GAAIF,MAAI,EAAEuC,OAAOrC,GAAIqC,MAAAA,CAAAA,GAAS+B,EAAAA;IAN1B;EAQ1B,GACD,CAACmH,IAAQvI,KAAStD,EAAAA,CAAAA;AAGtB,aACIgB,oBAAAA,KAAA,UAAA,EACIyb,KAAK,SAAAC,IAAAA;AACDvB,IAAAA,IAASK,UAAUkB,IACfxB,OAAa,aAAaA,QAAWA,IAAUM,UAAUkB;EAC/D,GACFlc,OAAOmX,KAAarO,KACpB5I,QAAQkX,KAActO,KACtB7G,OAAO,EACHjC,OAAOmX,IACPjX,QAAQkX,IACR+E,QAAQtZ,MAAgB,SAAS,SAAA,GAErCE,cAAcF,MAAgB+Y,KAAAA,QAC9BrW,aAAa1C,MAAgB+Y,KAAAA,QAC7B5Y,cAAcH,MAAgBwB,KAAAA,QAC9BvB,SAASD,MAAgBmB,KAAAA,OAAcvC,CAAAA;AAGnD;AA9bA,IAgca2a,SAAYC,cAAAA,YACrB,SAAAhO,IAEI4N,IAAAA;AAAoC,MADlCpZ,KAAawL,GAAbxL,eAAeoW,KAAa5K,GAAb4K,eAAe3V,KAAK+K,GAAL/K,OAAUgK,IAAKxL,GAAAuM,IAAAtM,EAAAA;AAAA,aAG/CvB,oBAAAA,KAAC2Y,IAAS,EAAOtW,eAAAA,IAAeoW,eAAAA,IAAe3V,OAAAA,IAASoF,SAAAA,OAAehI,cACnEF,oBAAAA,KAACgZ,IAAczY,GAAAA,CAAAA,GAAeuM,GAAK,EAAEoN,WAAWuB,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AACxC,CAAA;AAvcpB,ICjEaK,KAAgB,SACzBhP,IAAAA;AAAsC,aAEtC9M,oBAAAA,KAAC+b,IAAiB,EAAA7b,UACb,SAAAnB,IAAAA;AAAA,QAAGS,KAAKT,GAALS,OAAOE,KAAMX,GAANW;AAAM,eAAOM,oBAAAA,KAACqY,IAAG9X,GAAA,EAAWf,OAAOA,IAAOE,QAAQA,GAAAA,GAAYoN,EAAAA,CAAAA;EAAS,EAAA,CAAA;AAClE;AD4DxB,IEhEakP,SAAsBH,cAAAA,YAAW,SAE5C/O,IAA2C2O,IAAAA;AACzC,aACIzb,oBAAAA,KAAC+b,IAAiB,EAAA7b,UACb,SAAAnB,IAAAA;AAAA,QAAGS,KAAKT,GAALS,OAAOE,KAAMX,GAANW;AAAM,eACbM,oBAAAA,KAAC4b,IAASrb,GAAA,EACNf,OAAOA,IACPE,QAAQA,GAAAA,GACHoN,IAAK,EACV2O,KAAKA,GAAAA,CAAAA,CAAAA;EACP,EAAA,CAAA;AAIlB,CAAA;",
  "names": ["collection", "collection", "collection", "key", "precisionCutOffs", "date", "setMilliseconds", "setSeconds", "setMinutes", "setHours", "setDate", "setMonth", "precisionCutOffsByType", "millisecond", "second", "slice", "minute", "hour", "day", "month", "year", "createPrecisionMethod", "precision", "forEach", "cutOff", "createDateNormalizer", "_ref", "_ref$format", "format", "_ref$precision", "_ref$useUTC", "useUTC", "precisionFn", "value", "Date", "parseTime", "utcParse", "timeParse", "createLinearScale", "data", "size", "axis", "minValue", "_data$minStacked", "maxValue", "_data$maxStacked", "_ref$min", "min", "_ref$max", "max", "_ref$stacked", "stacked", "_ref$reverse", "reverse", "_ref$clamp", "clamp", "_ref$nice", "nice", "minStacked", "maxStacked", "scale", "scaleLinear", "rangeRound", "domain", "castLinearScale", "typedScale", "type", "createPointScale", "_spec", "scalePoint", "range", "all", "createBandScale", "_ref", "data", "size", "axis", "_ref$round", "round", "scale", "scaleBand", "range", "domain", "all", "castBandScale", "typedScale", "type", "createTimeScale", "minValue", "maxValue", "_ref$format", "format", "_ref$precision", "precision", "_ref$min", "min", "_ref$max", "max", "_ref$useUTC", "useUTC", "_ref$nice", "nice", "normalize", "createDateNormalizer", "scaleUtc", "scaleTime", "createLogScale", "sign", "_ref$base", "base", "some", "v", "Error", "hasMixedSign", "filter", "forEach", "Math", "scaleLog", "rangeRound", "createSymlogScale", "_ref$constant", "constant", "_ref$reverse", "reverse", "scaleSymlog", "computeScale", "spec", "data", "size", "axis", "type", "createLinearScale", "createPointScale", "createBandScale", "createTimeScale", "createLogScale", "createSymlogScale", "Error", "centerScale", "scale", "bandwidth", "offset", "round", "Math", "d", "_scale", "timeByType", "millisecond", "timeMillisecond", "utcMillisecond", "second", "timeSecond", "utcSecond", "minute", "timeMinute", "utcMinute", "hour", "timeHour", "utcHour", "day", "timeInterval", "date", "setHours", "step", "setDate", "getDate", "start", "end", "getTime", "floor", "setUTCHours", "setUTCDate", "getUTCDate", "week", "timeWeek", "utcWeek", "sunday", "timeSunday", "utcSunday", "monday", "timeMonday", "utcMonday", "tuesday", "timeTuesday", "utcTuesday", "wednesday", "timeWednesday", "utcWednesday", "thursday", "timeThursday", "utcThursday", "friday", "timeFriday", "utcFriday", "saturday", "timeSaturday", "utcSaturday", "month", "timeMonth", "utcMonth", "year", "timeYear", "utcYear", "timeTypes", "Object", "keys", "timeIntervalRegexp", "RegExp", "join", "getScaleTicks", "spec", "Array", "isArray", "matches", "match", "amount", "type", "timeType", "useUTC", "_timeType$every$range", "_timeType$every", "_scale$domain", "domain", "originalStop", "stop", "Date", "every", "Number", "range", "ticks", "interval", "Error", "value", "isFinite", "computeCartesianTicks", "_ref", "translate", "axis", "scale", "ticksPosition", "tickValues", "tickSize", "tickPadding", "tickRotation", "truncateTickAt", "_ref$engine", "engine", "values", "getScaleTicks", "textProps", "textPropsByEngine", "position", "centerScale", "line", "lineX", "lineY", "text", "textX", "textY", "isRTL", "document", "dir", "textAlign", "align", "center", "textBaseline", "baseline", "d", "_position", "x", "y", "top", "bottom", "_position2", "left", "right", "ticks", "map", "value", "processedValue", "valueLength", "String", "length", "slice", "concat", "_extends", "key", "Date", "valueOf", "getFormatter", "format", "type", "formatter", "timeFormat", "d3Format", "computeGridLines", "_ref2", "width", "height", "_values", "Array", "isArray", "lines", "_position3", "_position4", "x1", "x2", "y1", "y2", "_position5", "_position6", "memoizedAxisTick", "memo", "_format", "_value", "onClick", "textAnchor", "animatedProps", "theme", "useTheme", "lineStyle", "textStyle", "props", "useMemo", "style", "opacity", "cursor", "event", "_jsxs", "animated", "g", "transform", "children", "_jsx", "outlineWidth", "dominantBaseline", "textTransform", "strokeWidth", "stroke", "outlineColor", "strokeLinejoin", "sanitizeSvgTextStyle", "NonMemoizedAxis", "_ref$x", "_ref$y", "_ref$tickSize", "_ref$tickPadding", "_ref$tickRotation", "_ref$renderTick", "renderTick", "AxisTick", "legend", "_ref$legendPosition", "legendPosition", "_ref$legendOffset", "legendOffset", "ariaHidden", "legendTextStyle", "formatValue", "_computeCartesianTick", "legendNode", "legendX", "legendY", "legendRotation", "_Fragment", "_useMotionConfig", "useMotionConfig", "animate", "springConfig", "config", "useSpring", "lineX2", "lineY2", "immediate", "getAnimatedProps", "useCallback", "tick", "getFromAnimatedProps", "transition", "useTransition", "keys", "initial", "from", "enter", "update", "leave", "transitionProps", "_state", "tickIndex", "createElement", "rotate", "domain", "Axis", "positions", "Axes", "xScale", "yScale", "axes", "isXAxis", "GridLine", "grid", "GridLines", "_createElement", "Grid", "xValues", "yValues", "xLines", "yLines", "renderAxisToCanvas", "ctx", "_theme$axis$domain$li", "save", "font", "fontWeight", "fontSize", "fontFamily", "lineWidth", "Number", "lineCap", "strokeStyle", "beginPath", "moveTo", "lineTo", "forEach", "_theme$axis$ticks$lin", "degreesToRadians", "lineJoin", "strokeText", "fill", "fillStyle", "fillText", "restore", "renderAxesToCanvas", "renderGridLinesToCanvas", "_ref3", "defaultProps", "dotSize", "noteWidth", "noteTextOffset", "animate", "isSvgNote", "note", "noteType", "isValidElement", "isCanvasNote", "isCircleAnnotation", "annotationSpec", "type", "isDotAnnotation", "isRectAnnotation", "bindAnnotations", "_ref", "data", "annotations", "getPosition", "getDimensions", "reduce", "acc", "annotation", "offset", "concat", "filter", "match", "map", "datum", "position", "dimensions", "size", "width", "height", "_extends", "omit", "getLinkAngle", "sourceX", "sourceY", "targetX", "targetY", "angle", "Math", "atan2", "absoluteAngleDegrees", "radiansToDegrees", "computeAnnotation", "computedNoteX", "computedNoteY", "x", "y", "noteX", "noteY", "_annotation$noteWidth", "_annotation$noteTextO", "isNumber", "abs", "Error", "computedX", "computedY", "positionFromAngle", "degreesToRadians", "eighth", "round", "textX", "noteLineX", "points", "text", "useAnnotations", "useMemo", "useComputedAnnotations", "_ref2", "computed", "useComputedAnnotation", "AnnotationNote", "theme", "useTheme", "_useMotionConfig", "useMotionConfig", "springConfig", "config", "animatedProps", "useSpring", "immediate", "createElement", "_jsxs", "_Fragment", "children", "outlineWidth", "_jsx", "animated", "style", "strokeLinejoin", "strokeWidth", "stroke", "outlineColor", "AnnotationLink", "_ref$isOutline", "isOutline", "path", "firstPoint", "slice", "animatedPath", "useAnimatedPath", "link", "strokeLinecap", "opacity", "outlineOpacity", "fill", "d", "CircleAnnotationOutline", "radius", "outline", "circle", "cx", "cy", "r", "DotAnnotationOutline", "_ref$size", "symbol", "RectAnnotationOutline", "_ref$borderRadius", "borderRadius", "rect", "rx", "ry", "Annotation", "drawPoints", "ctx", "forEach", "index", "moveTo", "lineTo", "renderAnnotationsToCanvas", "length", "save", "lineCap", "strokeStyle", "lineWidth", "beginPath", "arc", "PI", "fillStyle", "font", "fontSize", "fontFamily", "textAlign", "textBaseline", "lineJoin", "strokeText", "fillText", "restore", "K", "BarAnnotations", "_ref", "bars", "annotations", "boundAnnotations", "useAnnotations", "data", "getPosition", "bar", "x", "width", "y", "height", "getDimensions", "_ref2", "size", "Math", "max", "_jsx", "_Fragment", "children", "map", "annotation", "i", "Annotation", "_extends", "BarLegends", "legends", "toggleSerie", "_legend$data", "legend", "BoxLegendSvg", "containerWidth", "containerHeight", "dataFrom", "undefined", "Q", "BarItem", "_data$fill", "_ref$bar", "_objectWithoutPropertiesLoose", "_excluded", "_ref$style", "style", "borderColor", "color", "labelColor", "labelOpacity", "labelX", "labelY", "transform", "borderRadius", "borderWidth", "label", "shouldRenderLabel", "isInteractive", "onClick", "onMouseEnter", "onMouseLeave", "tooltip", "isFocusable", "ariaLabel", "ariaLabelledBy", "ariaDescribedBy", "theme", "useTheme", "_useTooltip", "useTooltip", "showTooltipFromEvent", "showTooltipAt", "hideTooltip", "renderTooltip", "useMemo", "createElement", "handleClick", "useCallback", "event", "handleTooltip", "handleMouseEnter", "handleMouseLeave", "handleFocus", "absX", "absY", "handleBlur", "_jsxs", "animated", "g", "rect", "to", "value", "rx", "ry", "fill", "strokeWidth", "stroke", "focusable", "tabIndex", "onMouseMove", "onFocus", "onBlur", "text", "textAnchor", "dominantBaseline", "fillOpacity", "labels", "pointerEvents", "BarTooltip", "BasicTooltip", "id", "formattedValue", "enableChip", "defaultProps", "indexBy", "keys", "groupMode", "layout", "reverse", "minValue", "maxValue", "valueScale", "type", "indexScale", "round", "padding", "innerPadding", "axisBottom", "axisLeft", "enableGridX", "enableGridY", "enableLabel", "labelSkipWidth", "labelSkipHeight", "labelTextColor", "from", "colorBy", "colors", "scheme", "tooltipLabel", "datum", "indexValue", "initialHiddenIds", "markers", "enableTotals", "totalsOffset", "svgDefaultProps", "layers", "barComponent", "defs", "animate", "motionConfig", "role", "canvasDefaultProps", "pixelRatio", "window", "_window$devicePixelRa", "devicePixelRatio", "getIndexScale", "getIndex", "axis", "computeScale", "all", "min", "normalizeData", "item", "reduce", "acc", "key", "filterNullValues", "Object", "coerceValue", "Number", "gt", "other", "lt", "range", "start", "end", "Array", "repeat", "_", "index", "clampToZero", "generateVerticalGroupedBars", "barWidth", "yRef", "formatValue", "getColor", "getTooltipLabel", "_ref$innerPadding", "xScale", "yScale", "margin", "compare", "cleanedData", "forEach", "domain", "length", "_xScale", "d", "_yScale", "_coerceValue", "rawValue", "barHeight", "_yScale2", "barData", "hidden", "push", "left", "top", "generateHorizontalGroupedBars", "xRef", "_ref2$innerPadding", "_yScale3", "_xScale2", "_coerceValue2", "_xScale3", "generateGroupedBars", "_ref3", "_scale", "_ref3$padding", "_ref3$innerPadding", "indexScaleConfig", "_ref3$hiddenIds", "hiddenIds", "props", "filter", "includes", "_ref4", "otherAxis", "scaleSpec", "clampMin", "values", "entry", "concat", "k", "Boolean", "apply", "isFinite", "scale", "_ref5", "bandwidth", "params", "flattenDeep", "arr", "some", "isArray", "generateVerticalStackedBars", "stackedData", "stackedDataItem", "_getY", "generateHorizontalStackedBars", "_getX", "generateStackedBars", "array", "_ref4$padding", "_ref4$hiddenIds", "stack", "offset", "stackOffsetDiverging", "num", "_ref6", "getLegendData", "direction", "legendLabel", "getLegendLabel", "getPropertyAccessor", "uniqBy", "_bar$data$indexValue", "_bar$color2", "_bar$color", "updateTotalsByIndex", "totalsByIndex", "currentIndexValue", "get", "set", "updateTotalsPositivesByIndex", "totalsPositivesByIndex", "updateGreatestValueByIndex", "greatestValueByIndex", "currentGreatestValue", "updateNumberOfBarsByIndex", "numberOfBarsByIndex", "currentNumberOfBars", "useBar", "_ref$indexBy", "_ref$keys", "_ref$label", "_ref$tooltipLabel", "valueFormat", "_ref$colors", "_ref$colorBy", "_ref$borderColor", "_ref$labelTextColor", "_ref$groupMode", "_ref$layout", "_ref$reverse", "_ref$minValue", "_ref$maxValue", "_ref$padding", "_ref$valueScale", "_ref$indexScale", "_ref$initialHiddenIds", "_ref$enableLabel", "_ref$labelSkipWidth", "_ref$labelSkipHeight", "_ref$legends", "_ref$totalsOffset", "_useState", "useState", "setHiddenIds", "state", "indexOf", "usePropertyAccessor", "getLabel", "useValueFormatter", "useOrdinalColorScale", "getBorderColor", "useInheritedColor", "getLabelColor", "_generateBars", "barsWithValue", "shouldRenderBarLabel", "legendData", "find", "legendsWithData", "barTotals", "totals", "Map", "_bar$data", "totalsPositive", "xPosition", "yPosition", "animationOffset", "indexTotal", "_bar$data2", "greatestValue", "numberOfBars", "BarTotals", "springConfig", "useTransition", "barTotal", "enter", "update", "leave", "config", "immediate", "initial", "fontWeight", "fontSize", "fontFamily", "alignmentBaseline", "InnerBar", "partialMargin", "axisTop", "axisRight", "_ref$axisBottom", "_ref$axisLeft", "_ref$enableGridX", "_ref$enableGridY", "gridXValues", "gridYValues", "_ref$layers", "_ref$barComponent", "_ref$markers", "_ref$defs", "_ref$fill", "_ref$borderRadius", "_ref$borderWidth", "_ref$annotations", "_ref$isInteractive", "_ref$tooltip", "_ref$role", "_ref$isFocusable", "barAriaLabel", "barAriaLabelledBy", "barAriaDescribedBy", "_ref$enableTotals", "_useMotionConfig", "useMotionConfig", "_useDimensions", "useDimensions", "outerWidth", "outerHeight", "innerWidth", "innerHeight", "_useBar", "transition", "commonProps", "boundDefs", "bindDefs", "dataKey", "targetKey", "layerById", "axes", "grid", "Axes", "right", "bottom", "Fragment", "Grid", "xValues", "yValues", "CartesianMarkers", "layerContext", "SvgWrapper", "layer", "_layerById$layer", "Bar", "_ref2$isInteractive", "_ref2$animate", "_ref2$motionConfig", "renderWrapper", "otherProps", "Container", "findBarUnderCursor", "nodes", "node", "isCursorInRect", "InnerBarCanvas", "_ref$renderBar", "renderBar", "ctx", "_ref2$bar", "fillStyle", "strokeStyle", "lineWidth", "beginPath", "radius", "moveTo", "lineTo", "quadraticCurveTo", "closePath", "textBaseline", "textAlign", "fillText", "_ref$pixelRatio", "canvasRef", "canvasEl", "useRef", "useComputedAnnotations", "useEffect", "_canvasEl$current", "current", "getContext", "background", "fillRect", "translate", "line", "renderGridLinesToCanvas", "renderAxesToCanvas", "renderLegendToCanvas", "renderAnnotationsToCanvas", "font", "save", "handleMouseHover", "_getRelativeCursor", "getRelativeCursor", "_getRelativeCursor2", "_getRelativeCursor3", "ref", "canvas", "cursor", "BarCanvas", "forwardRef", "ResponsiveBar", "ResponsiveWrapper", "ResponsiveBarCanvas"]
}
